{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/DrawingPreview.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\nimport SockImage from \"./SockImage\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\nimport { connect } from \"react-redux\";\n\nclass DrawingPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputList: {\n        x: 100,\n        y: 100,\n        width: 200,\n        height: 20,\n        id: \"input1\"\n      }\n    };\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    let primary = this.props.drawing.primary;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"primary-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      width: 800,\n      height: 800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Portal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.inputList.map((data, id) => {\n      return React.createElement(TextElement, {\n        key: id,\n        shapeProps: data,\n        isSelected: data.id === selectedId,\n        onSelect: () => {\n          selectShape(data.id);\n        },\n        onChange: newAttrs => {\n          const inputs = this.state.inputlist.slice();\n          inputs[id] = newAttrs;\n          this.setState({\n            inputList: {\n              inputs\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    })), React.createElement(SockImage, {\n      blue: primary.blue,\n      red: primary.red,\n      green: primary.green,\n      src: \"images/WhiteSocks.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing\n});\n\nexport default connect(mapStateToProps)(DrawingPreview);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/DrawingPreview.js"],"names":["React","Component","render","Portal","Stage","Layer","Rect","Text","Image","Konva","SockImage","Socks","TextElement","connect","DrawingPreview","constructor","props","state","inputList","x","y","width","height","id","primary","drawing","map","data","selectedId","selectShape","newAttrs","inputs","inputlist","slice","setState","blue","red","green","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,QAAgD,aAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6Bb,SAA7B,CAAuC;AACtCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE;AACVC,QAAAA,CAAC,EAAE,GADO;AAEVC,QAAAA,CAAC,EAAE,GAFO;AAGVC,QAAAA,KAAK,EAAE,GAHG;AAIVC,QAAAA,MAAM,EAAE,EAJE;AAKVC,QAAAA,EAAE,EAAE;AALM;AADC,KAAb;AASA;;AAEDrB,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACA,QAAIsB,OAAO,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBD,OAAjC;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,GAAd;AAAmB,MAAA,MAAM,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKP,KAAL,CAAWC,SAAX,CAAqBQ,GAArB,CAAyB,CAACC,IAAD,EAAOJ,EAAP,KAAc;AACvC,aACC,oBAAC,WAAD;AACC,QAAA,GAAG,EAAEA,EADN;AAEC,QAAA,UAAU,EAAEI,IAFb;AAGC,QAAA,UAAU,EAAEA,IAAI,CAACJ,EAAL,KAAYK,UAHzB;AAIC,QAAA,QAAQ,EAAE,MAAM;AACfC,UAAAA,WAAW,CAACF,IAAI,CAACJ,EAAN,CAAX;AACA,SANF;AAOC,QAAA,QAAQ,EAAEO,QAAQ,IAAI;AACrB,gBAAMC,MAAM,GAAG,KAAKd,KAAL,CAAWe,SAAX,CAAqBC,KAArB,EAAf;AACAF,UAAAA,MAAM,CAACR,EAAD,CAAN,GAAaO,QAAb;AACA,eAAKI,QAAL,CAAc;AACbhB,YAAAA,SAAS,EAAE;AAAEa,cAAAA;AAAF;AADE,WAAd;AAGA,SAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAiBA,KAlBA,CADF,CADD,EAsBC,oBAAC,SAAD;AACC,MAAA,IAAI,EAAEP,OAAO,CAACW,IADf;AAEC,MAAA,GAAG,EAAEX,OAAO,CAACY,GAFd;AAGC,MAAA,KAAK,EAAEZ,OAAO,CAACa,KAHhB;AAIC,MAAA,GAAG,EAAC,uBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBD,CADD,CADD,CADD,CADD;AAiDA;;AApEqC;;AAuEvC,MAAMC,eAAe,GAAGrB,KAAK,KAAK;AACjCQ,EAAAA,OAAO,EAAER,KAAK,CAACQ;AADkB,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,cAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\n\nimport SockImage from \"./SockImage\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\n\nimport { connect } from \"react-redux\";\n\nclass DrawingPreview extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinputList: {\n\t\t\t\tx: 100,\n\t\t\t\ty: 100,\n\t\t\t\twidth: 200,\n\t\t\t\theight: 20,\n\t\t\t\tid: \"input1\"\n\t\t\t}\n\t\t};\n\t}\n\n\trender() {\n\t\t// Stage is a div container\n\t\t// Layer is actual canvas element (so you may have several canvases in the stage)\n\t\t// And then we have canvas shapes inside the Layer\n\t\tlet primary = this.props.drawing.primary;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"primary-color\">\n\t\t\t\t\t<Stage width={800} height={800}>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t\t{this.state.inputList.map((data, id) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TextElement\n\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\tshapeProps={data}\n\t\t\t\t\t\t\t\t\t\t\tisSelected={data.id === selectedId}\n\t\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tselectShape(data.id);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.state.inputlist.slice();\n\t\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputList: { inputs }\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t\t<SockImage\n\t\t\t\t\t\t\t\tblue={primary.blue}\n\t\t\t\t\t\t\t\tred={primary.red}\n\t\t\t\t\t\t\t\tgreen={primary.green}\n\t\t\t\t\t\t\t\tsrc=\"images/WhiteSocks.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>\n\t\t\t\t{/*<div className=\"secondary-color\">\n\t\t\t\t\t<Stage width={800} height={800}>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t<SockImage\n\t\t\t\t\t\t\t\tblue={color.blue}\n\t\t\t\t\t\t\t\tred={color.red}\n\t\t\t\t\t\t\t\tgreen={color.green}\n\t\t\t\t\t\t\t\tsrc={null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing\n});\n\nexport default connect(mapStateToProps)(DrawingPreview);\n"]},"metadata":{},"sourceType":"module"}