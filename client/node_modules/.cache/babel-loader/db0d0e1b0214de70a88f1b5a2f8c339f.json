{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FontPicker from \"font-picker-react\";\nimport ItemDetailSelector from \"./ItemDetailSelector\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFont = () => {\n      this.setState({\n        fontAdded: true\n      });\n    };\n\n    this.addText = () => {\n      console.log(\"text-added\");\n      this.props.addText(\"Insert Text\", this.state.style);\n    };\n\n    this.updateText = e => {\n      let style = this.state.style;\n      let text = this.state.text;\n      let id = this.props.selectedText[0].id;\n      let data = this.props.data;\n      console.log(id);\n      let newAttrs = {\n        text: text,\n        style\n      };\n      let index = data.findIndex(obj => obj.id === id);\n      let item = data.splice(index, 1);\n      console.log(item);\n      item[0] = _objectSpread({}, item[0], {\n        text: text,\n        style\n      });\n      data.push(item[0]);\n      this.props.updateText(data);\n    };\n\n    this.state = {\n      fontFamily: \"Open Sans\",\n      text: \"Example\",\n      fontAdded: false,\n      style: {\n        fontFamily: \"Anton\",\n        fontSize: 20,\n        //fontWeight: 200,\n        //lineHeight: 20,\n        fill: \"#ffffff\"\n      },\n      activated: false\n    };\n  }\n\n  render() {\n    let selectedText = this.props.selectedText[0]; //if (!selectedText) return null;\n\n    console.log(selectedText);\n    /*selectedText\n    \t? this.setState({\n    \t\t\tactivated: true\n    \t  })\n    \t: this.setState({\n    \t\t\tactivated: false\n    \t  });*/\n\n    return React.createElement(\"div\", {\n      className: \"design-details-container text-editor \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-text-button button hoverable col offset-s1\",\n      onClick: this.addText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Add New Text\")), !selectedText ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text input col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Enter Your Text Here\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-editor-input apply-font\",\n      placeholder: selectedText.text,\n      onChange: e => this.setState({\n        text: e.target.value\n      }, () => this.updateText()) //this.updateText())\n      //this.updateText\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-picker col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Choose Your Font\"), React.createElement(FontPicker, {\n      apiKey: \"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\",\n      activeFontFamily: this.state.style.fontFamily,\n      onChange: nextFont => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontFamily: nextFont.family\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Choose Your Text Color\"), React.createElement(ChromePicker, {\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Font Size\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"text-editor-input\",\n      placeholder: selectedText.style.fontSize,\n      onChange: e => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontSize: e.target.value\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Rotation\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Weight\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Line Height\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side,\n  bottom: state.bottom,\n  top: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js"],"names":["React","Component","ReactDOM","FontPicker","ItemDetailSelector","ChromePicker","connect","TextEditor","constructor","props","addFont","setState","fontAdded","addText","console","log","state","style","updateText","e","text","id","selectedText","data","newAttrs","index","findIndex","obj","item","splice","push","fontFamily","fontSize","fill","activated","render","target","value","nextFont","family","onColorChange","mapStateToProps","drawing","side","bottom","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport FontPicker from \"font-picker-react\";\n\nimport ItemDetailSelector from \"./ItemDetailSelector\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfontFamily: \"Open Sans\",\n\t\t\ttext: \"Example\",\n\t\t\tfontAdded: false,\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Anton\",\n\t\t\t\tfontSize: 20,\n\t\t\t\t//fontWeight: 200,\n\t\t\t\t//lineHeight: 20,\n\t\t\t\tfill: \"#ffffff\"\n\t\t\t},\n\t\t\tactivated: false\n\t\t};\n\t}\n\n\taddFont = () => {\n\t\tthis.setState({\n\t\t\tfontAdded: true\n\t\t});\n\t};\n\n\taddText = () => {\n\t\tconsole.log(\"text-added\");\n\t\tthis.props.addText(\"Insert Text\", this.state.style);\n\t};\n\n\t/*addText = event => {\n\t\tthis.props.previewText(event.target.value, this.state.style);\n\t};*/\n\tupdateText = e => {\n\t\tlet style = this.state.style;\n\t\tlet text = this.state.text;\n\t\tlet id = this.props.selectedText[0].id;\n\t\tlet data = this.props.data;\n\t\tconsole.log(id);\n\t\tlet newAttrs = {\n\t\t\ttext: text,\n\t\t\tstyle\n\t\t};\n\t\tlet index = data.findIndex(obj => obj.id === id);\n\t\tlet item = data.splice(index, 1);\n\t\tconsole.log(item);\n\t\titem[0] = {\n\t\t\t...item[0],\n\t\t\ttext: text,\n\t\t\tstyle\n\t\t};\n\t\tdata.push(item[0]);\n\n\t\tthis.props.updateText(data);\n\t};\n\n\trender() {\n\t\tlet selectedText = this.props.selectedText[0];\n\t\t//if (!selectedText) return null;\n\t\tconsole.log(selectedText);\n\t\t/*selectedText\n\t\t\t? this.setState({\n\t\t\t\t\tactivated: true\n\t\t\t  })\n\t\t\t: this.setState({\n\t\t\t\t\tactivated: false\n\t\t\t  });*/\n\t\treturn (\n\t\t\t<div className=\"design-details-container text-editor \">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-text-button button hoverable col offset-s1\"\n\t\t\t\t\t\tonClick={this.addText}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd New Text\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{!selectedText ? null : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"text input col s6\">\n\t\t\t\t\t\t\t\t<label>Enter Your Text Here</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input apply-font\"\n\t\t\t\t\t\t\t\t\tplaceholder={selectedText.text}\n\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\te =>\n\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext: e.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t//this.updateText())\n\t\t\t\t\t\t\t\t\t\t//this.updateText\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"font-picker col s6\">\n\t\t\t\t\t\t\t\t<label className=\" col s12\">\n\t\t\t\t\t\t\t\t\tChoose Your Font\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<FontPicker\n\t\t\t\t\t\t\t\t\tapiKey=\"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\"\n\t\t\t\t\t\t\t\t\tactiveFontFamily={\n\t\t\t\t\t\t\t\t\t\tthis.state.style.fontFamily\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={nextFont =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: nextFont.family\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tonChangeComplete={this.onColorChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Font Size</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText.style.fontSize\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Rotation</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Weight</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Line Height</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side,\n\tbottom: state.bottom,\n\ttop: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);\n"]},"metadata":{},"sourceType":"module"}