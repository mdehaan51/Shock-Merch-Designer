{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/DrawingPreview.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\nconst sock = \"images/WhiteSock.png\"; //const imageRef = React.useRef();\n\nclass DrawingPreview extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"green\"\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        color: Konva.Util.getRandomColor()\n      });\n    };\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return React.createElement(Stage, {\n      width: \"500\",\n      height: \"800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Text, {\n      text: \"Try click on rect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Image //ref={imageRef}\n    , {\n      x: 10,\n      y: 10,\n      image: sock,\n      filters: [Konva.Filters.Blur],\n      blurRadius: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DrawingPreview;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/DrawingPreview.js"],"names":["React","Component","render","Stage","Layer","Rect","Text","Image","Konva","sock","DrawingPreview","state","color","handleClick","setState","Util","getRandomColor","Filters","Blur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,QAAgD,aAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG,sBAAb,C,CACA;;AAEA,MAAMC,cAAN,SAA6BT,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCU,KADsC,GAC9B;AACPC,MAAAA,KAAK,EAAE;AADA,KAD8B;;AAAA,SAItCC,WAJsC,GAIxB,MAAM;AACnB,WAAKC,QAAL,CAAc;AACbF,QAAAA,KAAK,EAAEJ,KAAK,CAACO,IAAN,CAAWC,cAAX;AADM,OAAd;AAGA,KARqC;AAAA;;AAStCd,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACA,WACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,KAAb;AAAmB,MAAA,MAAM,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD,CACC;AADD;AAEC,MAAA,CAAC,EAAE,EAFJ;AAGC,MAAA,CAAC,EAAE,EAHJ;AAIC,MAAA,KAAK,EAAEO,IAJR;AAKC,MAAA,OAAO,EAAE,CAACD,KAAK,CAACS,OAAN,CAAcC,IAAf,CALV;AAMC,MAAA,UAAU,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,CADD;AAeA;;AA5BqC;;AA+BvC,eAAeR,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\n\nconst sock = \"images/WhiteSock.png\";\n//const imageRef = React.useRef();\n\nclass DrawingPreview extends Component {\n\tstate = {\n\t\tcolor: \"green\"\n\t};\n\thandleClick = () => {\n\t\tthis.setState({\n\t\t\tcolor: Konva.Util.getRandomColor()\n\t\t});\n\t};\n\trender() {\n\t\t// Stage is a div container\n\t\t// Layer is actual canvas element (so you may have several canvases in the stage)\n\t\t// And then we have canvas shapes inside the Layer\n\t\treturn (\n\t\t\t<Stage width=\"500\" height=\"800\">\n\t\t\t\t<Layer>\n\t\t\t\t\t<Text text=\"Try click on rect\" />\n\t\t\t\t\t<Image\n\t\t\t\t\t\t//ref={imageRef}\n\t\t\t\t\t\tx={10}\n\t\t\t\t\t\ty={10}\n\t\t\t\t\t\timage={sock}\n\t\t\t\t\t\tfilters={[Konva.Filters.Blur]}\n\t\t\t\t\t\tblurRadius={10}\n\t\t\t\t\t/>\n\t\t\t\t</Layer>\n\t\t\t</Stage>\n\t\t);\n\t}\n}\n\nexport default DrawingPreview;\n"]},"metadata":{},"sourceType":"module"}