{"ast":null,"code":"import _slicedToArray from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js\";\nimport React, { Component } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\n\nconst ShapeElement = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  url\n}) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  const _useImage = useImage(url),\n        _useImage2 = _slicedToArray(_useImage, 1),\n        image = _useImage2[0];\n\n  React.useEffect(() => {\n    this._initImage();\n\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Image, Object.assign({\n    onClick: onSelect,\n    itemRef: this.shapeRef\n  }, shapeProps, {\n    x: 100,\n    y: 100,\n    draggable: true,\n    image: image,\n    width: 100,\n    height: 100,\n    onDragEnd: e => {\n      onChange({\n        //...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      // transformer is changing scale\n      const node = shape.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // we will reset it back\n\n      node.scaleX(1);\n      node.scaleY(1);\n      this.props.onChange({\n        //...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: node.width() * scaleX,\n        height: node.height() * scaleY\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), isSelected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nexport default ShapeElement;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js"],"names":["React","Component","Stage","Layer","Text","Image","Transformer","ShapeElement","shapeProps","isSelected","onSelect","onChange","url","shapeRef","useRef","trRef","useImage","image","useEffect","_initImage","current","setNode","getLayer","batchDraw","e","x","target","y","node","shape","scaleX","scaleY","props","width","height"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,WAApC,QAAuD,aAAvD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA;AAA9C,CAAD,KAAyD;AAC7E,QAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,EAAjB;AACA,QAAMC,KAAK,GAAGf,KAAK,CAACc,MAAN,EAAd;;AAF6E,oBAG7DE,QAAQ,CAACJ,GAAD,CAHqD;AAAA;AAAA,QAGtEK,KAHsE;;AAK7EjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACrB,SAAKC,UAAL;;AACA,QAAIV,UAAJ,EAAgB;AACf;AACAM,MAAAA,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBR,QAAQ,CAACO,OAA/B;AACAL,MAAAA,KAAK,CAACK,OAAN,CAAcE,QAAd,GAAyBC,SAAzB;AACA;AACD,GAPD,EAOG,CAACd,UAAD,CAPH;AASA,SACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,OAAO,EAAEC,QADV;AAEC,IAAA,OAAO,EAAE,KAAKG;AAFf,KAGKL,UAHL;AAIC,IAAA,CAAC,EAAE,GAJJ;AAKC,IAAA,CAAC,EAAE,GALJ;AAMC,IAAA,SAAS,MANV;AAOC,IAAA,KAAK,EAAES,KAPR;AAQC,IAAA,KAAK,EAAE,GARR;AASC,IAAA,MAAM,EAAE,GATT;AAUC,IAAA,SAAS,EAAEO,CAAC,IAAI;AACfb,MAAAA,QAAQ,CAAC;AACR;AACAc,QAAAA,CAAC,EAAED,CAAC,CAACE,MAAF,CAASD,CAAT,EAFK;AAGRE,QAAAA,CAAC,EAAEH,CAAC,CAACE,MAAF,CAASC,CAAT;AAHK,OAAD,CAAR;AAKA,KAhBF;AAiBC,IAAA,cAAc,EAAEH,CAAC,IAAI;AACpB;AACA,YAAMI,IAAI,GAAGC,KAAK,CAACT,OAAnB;AACA,YAAMU,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;AACA,YAAMC,MAAM,GAAGH,IAAI,CAACG,MAAL,EAAf,CAJoB,CAMpB;;AACAH,MAAAA,IAAI,CAACE,MAAL,CAAY,CAAZ;AACAF,MAAAA,IAAI,CAACG,MAAL,CAAY,CAAZ;AACA,WAAKC,KAAL,CAAWrB,QAAX,CAAoB;AACnB;AACAc,QAAAA,CAAC,EAAEG,IAAI,CAACH,CAAL,EAFgB;AAGnBE,QAAAA,CAAC,EAAEC,IAAI,CAACD,CAAL,EAHgB;AAInBM,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,KAAeH,MAJH;AAKnBI,QAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL,KAAgBH;AALL,OAApB;AAOA,KAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,EAoCEtB,UAAU,IAAI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEM,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApChB,CADD;AAwCA,CAtDD;;AAwDA,eAAeR,YAAf","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\n\nconst ShapeElement = ({ shapeProps, isSelected, onSelect, onChange, url }) => {\n\tconst shapeRef = React.useRef();\n\tconst trRef = React.useRef();\n\tconst [image] = useImage(url);\n\n\tReact.useEffect(() => {\n\t\tthis._initImage();\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current.setNode(shapeRef.current);\n\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Image\n\t\t\t\tonClick={onSelect}\n\t\t\t\titemRef={this.shapeRef}\n\t\t\t\t{...shapeProps}\n\t\t\t\tx={100}\n\t\t\t\ty={100}\n\t\t\t\tdraggable\n\t\t\t\timage={image}\n\t\t\t\twidth={100}\n\t\t\t\theight={100}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t//...shapeProps,\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y()\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\t// transformer is changing scale\n\t\t\t\t\tconst node = shape.current;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t// we will reset it back\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\tthis.props.onChange({\n\t\t\t\t\t\t//...shapeProps,\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{isSelected && <Transformer ref={trRef} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ShapeElement;\n"]},"metadata":{},"sourceType":"module"}