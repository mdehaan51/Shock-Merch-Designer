{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js\";\nimport React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\";\nconst URL = \"images/WhiteSocks.png\";\n\nclass SockImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      // recache shape when we updated it\n      this.applyCache();\n    };\n\n    this.handleLoad = () => {\n      // after setState react-konva will update canvas and redraw the layer\n      // because \"image\" property is changed\n      this.setState({\n        image: this.image\n      }); // if you keep same image object during source updates\n      // you will have to update layer manually:\n      // this.imageNode.getLayer().batchDraw();\n    };\n\n    this.state = {\n      color: \"green\",\n      image: null\n    };\n  }\n\n  componentDidMount() {\n    this.loadImage();\n    this.applyCache();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.src !== this.props.src) {\n      this.loadImage();\n    }\n  }\n\n  componentWillUnmount() {\n    this.image.removeEventListener(\"load\", this.handleLoad);\n  }\n\n  loadImage() {\n    this.image = new window.Image();\n    this.image.src = this.props.src;\n    this.image.addEventListener(\"load\", this.handleLoad);\n  }\n\n  applyCache() {\n    this.img.cache();\n    this.img.moveToBottom();\n    this.img.getLayer().batchDraw();\n  }\n\n  render() {\n    return React.createElement(Image, {\n      filters: [Konva.Filters.RGB],\n      x: 100,\n      y: 10,\n      width: this.props.width,\n      height: this.props.height,\n      image: this.state.image,\n      blue: this.props.blue,\n      red: this.props.red,\n      green: this.props.green,\n      shadowBlur: this.props.shadowBlur,\n      ref: node => {\n        this.img = node;\n      },\n      onClick: this.handleClick,\n      draggable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SockImage;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js"],"names":["React","Component","Konva","render","Stage","Layer","Rect","Image","useImage","URL","SockImage","constructor","props","handleClick","applyCache","handleLoad","setState","image","state","color","componentDidMount","loadImage","componentDidUpdate","prevProps","src","componentWillUnmount","removeEventListener","window","addEventListener","img","cache","moveToBottom","getLayer","batchDraw","Filters","RGB","width","height","blue","red","green","shadowBlur","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AACjCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAanBC,WAbmB,GAaL,MAAM;AACnB;AACA,WAAKC,UAAL;AACA,KAhBkB;;AAAA,SAkCnBC,UAlCmB,GAkCN,MAAM;AAClB;AACA;AACA,WAAKC,QAAL,CAAc;AACbC,QAAAA,KAAK,EAAE,KAAKA;AADC,OAAd,EAHkB,CAMlB;AACA;AACA;AACA,KA3CkB;;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,OADK;AAEZF,MAAAA,KAAK,EAAE;AAFK,KAAb;AAIA;;AAEDG,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,SAAL;AACA,SAAKP,UAAL;AACA;;AAODQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAIA,SAAS,CAACC,GAAV,KAAkB,KAAKZ,KAAL,CAAWY,GAAjC,EAAsC;AACrC,WAAKH,SAAL;AACA;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACtB,SAAKR,KAAL,CAAWS,mBAAX,CAA+B,MAA/B,EAAuC,KAAKX,UAA5C;AACA;;AAEDM,EAAAA,SAAS,GAAG;AACX,SAAKJ,KAAL,GAAa,IAAIU,MAAM,CAACpB,KAAX,EAAb;AACA,SAAKU,KAAL,CAAWO,GAAX,GAAiB,KAAKZ,KAAL,CAAWY,GAA5B;AACA,SAAKP,KAAL,CAAWW,gBAAX,CAA4B,MAA5B,EAAoC,KAAKb,UAAzC;AACA;;AAaDD,EAAAA,UAAU,GAAG;AACZ,SAAKe,GAAL,CAASC,KAAT;AACA,SAAKD,GAAL,CAASE,YAAT;AACA,SAAKF,GAAL,CAASG,QAAT,GAAoBC,SAApB;AACA;;AAED9B,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AACC,MAAA,OAAO,EAAE,CAACD,KAAK,CAACgC,OAAN,CAAcC,GAAf,CADV;AAEC,MAAA,CAAC,EAAE,GAFJ;AAGC,MAAA,CAAC,EAAE,EAHJ;AAIC,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,KAJnB;AAKC,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyB,MALpB;AAMC,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWD,KANnB;AAOC,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAW0B,IAPlB;AAQC,MAAA,GAAG,EAAE,KAAK1B,KAAL,CAAW2B,GARjB;AASC,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAW4B,KATnB;AAUC,MAAA,UAAU,EAAE,KAAK5B,KAAL,CAAW6B,UAVxB;AAWC,MAAA,GAAG,EAAEC,IAAI,IAAI;AACZ,aAAKb,GAAL,GAAWa,IAAX;AACA,OAbF;AAcC,MAAA,OAAO,EAAE,KAAK7B,WAdf;AAeC,MAAA,SAAS,MAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAmBA;;AAxEgC;;AA2ElC,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\";\n\nconst URL = \"images/WhiteSocks.png\";\n\nclass SockImage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcolor: \"green\",\n\t\t\timage: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadImage();\n\t\tthis.applyCache();\n\t}\n\n\thandleClick = () => {\n\t\t// recache shape when we updated it\n\t\tthis.applyCache();\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.src !== this.props.src) {\n\t\t\tthis.loadImage();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.image.removeEventListener(\"load\", this.handleLoad);\n\t}\n\n\tloadImage() {\n\t\tthis.image = new window.Image();\n\t\tthis.image.src = this.props.src;\n\t\tthis.image.addEventListener(\"load\", this.handleLoad);\n\t}\n\n\thandleLoad = () => {\n\t\t// after setState react-konva will update canvas and redraw the layer\n\t\t// because \"image\" property is changed\n\t\tthis.setState({\n\t\t\timage: this.image\n\t\t});\n\t\t// if you keep same image object during source updates\n\t\t// you will have to update layer manually:\n\t\t// this.imageNode.getLayer().batchDraw();\n\t};\n\n\tapplyCache() {\n\t\tthis.img.cache();\n\t\tthis.img.moveToBottom();\n\t\tthis.img.getLayer().batchDraw();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Image\n\t\t\t\tfilters={[Konva.Filters.RGB]}\n\t\t\t\tx={100}\n\t\t\t\ty={10}\n\t\t\t\twidth={this.props.width}\n\t\t\t\theight={this.props.height}\n\t\t\t\timage={this.state.image}\n\t\t\t\tblue={this.props.blue}\n\t\t\t\tred={this.props.red}\n\t\t\t\tgreen={this.props.green}\n\t\t\t\tshadowBlur={this.props.shadowBlur}\n\t\t\t\tref={node => {\n\t\t\t\t\tthis.img = node;\n\t\t\t\t}}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t\tdraggable\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default SockImage;\n"]},"metadata":{},"sourceType":"module"}