{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FontPicker from \"font-picker-react\";\nimport { ChromePicker } from \"react-color\";\nimport { updateSideText, addText } from \"../../actions/drawingActions\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFont = () => {\n      this.setState({\n        fontAdded: true\n      });\n    };\n\n    this.addText = () => {\n      console.log(\"text-added\");\n      this.props.addText(\"Insert Text\", this.state.style);\n    };\n\n    this.updateText = (e, newAttrs) => {\n      console.log(e.target.value);\n      console.log(newAttrs); //const inputs = this.props.drawing.sideText.slice();\n      //inputs[id] = newAttrs;\n      //this.props.updateSideText(inputs);\n    };\n\n    this.state = {\n      fontFamily: \"Open Sans\",\n      sampleText: \"Example\",\n      fontAdded: false,\n      style: {\n        fontFamily: \"Anton\",\n        fontSize: 20,\n        //fontWeight: 200,\n        //lineHeight: 20,\n        fill: \"#ffffff\"\n      }\n    };\n  }\n\n  render() {\n    let selectedText = this.props.drawing.selectedText;\n    let textItems = this.props.drawing.sideText;\n    let textDetails = textItems.filter(obj => {\n      return obj.id === selectedText;\n    });\n    console.log(textDetails[\"0\"]);\n    textDetails = textDetails[\"0\"];\n    return React.createElement(\"div\", {\n      className: \"design-details-container text-editor \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-text-button button hoverable col offset-s1\",\n      onClick: this.addText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add New Text\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text input col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Enter Your Text Here\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-editor-input apply-font\",\n      placeholder: textDetails ? textDetails.text : \"\",\n      onChange: this.updateText(textDetails),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-picker col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Choose Your Font\"), React.createElement(FontPicker, {\n      apiKey: \"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\",\n      activeFontFamily: this.state.style.fontFamily,\n      onChange: nextFont => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontFamily: nextFont.family\n        })\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Choose Your Text Color\"), React.createElement(ChromePicker, {\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Font Size\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Rotation\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Weight\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Line Height\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing\n});\n\nexport default connect(mapStateToProps, {\n  updateSideText,\n  addText\n})(TextEditor);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js"],"names":["React","Component","ReactDOM","FontPicker","ChromePicker","updateSideText","addText","connect","TextEditor","constructor","props","addFont","setState","fontAdded","console","log","state","style","updateText","e","newAttrs","target","value","fontFamily","sampleText","fontSize","fill","render","selectedText","drawing","textItems","sideText","textDetails","filter","obj","id","text","nextFont","family","onColorChange","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport FontPicker from \"font-picker-react\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { updateSideText, addText } from \"../../actions/drawingActions\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfontFamily: \"Open Sans\",\n\t\t\tsampleText: \"Example\",\n\t\t\tfontAdded: false,\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Anton\",\n\t\t\t\tfontSize: 20,\n\t\t\t\t//fontWeight: 200,\n\t\t\t\t//lineHeight: 20,\n\t\t\t\tfill: \"#ffffff\"\n\t\t\t}\n\t\t};\n\t}\n\n\taddFont = () => {\n\t\tthis.setState({\n\t\t\tfontAdded: true\n\t\t});\n\t};\n\n\taddText = () => {\n\t\tconsole.log(\"text-added\");\n\t\tthis.props.addText(\"Insert Text\", this.state.style);\n\t};\n\n\t/*addText = event => {\n\t\tthis.props.previewText(event.target.value, this.state.style);\n\t};*/\n\tupdateText = (e, newAttrs) => {\n\t\tconsole.log(e.target.value);\n\t\tconsole.log(newAttrs);\n\t\t//const inputs = this.props.drawing.sideText.slice();\n\t\t//inputs[id] = newAttrs;\n\t\t//this.props.updateSideText(inputs);\n\t};\n\n\trender() {\n\t\tlet selectedText = this.props.drawing.selectedText;\n\t\tlet textItems = this.props.drawing.sideText;\n\t\tlet textDetails = textItems.filter(obj => {\n\t\t\treturn obj.id === selectedText;\n\t\t});\n\t\tconsole.log(textDetails[\"0\"]);\n\t\ttextDetails = textDetails[\"0\"];\n\t\treturn (\n\t\t\t<div className=\"design-details-container text-editor \">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-text-button button hoverable col offset-s1\"\n\t\t\t\t\t\tonClick={this.addText}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd New Text\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"text input col s6\">\n\t\t\t\t\t\t<label>Enter Your Text Here</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"text-editor-input apply-font\"\n\t\t\t\t\t\t\tplaceholder={textDetails ? textDetails.text : \"\"}\n\t\t\t\t\t\t\tonChange={this.updateText(textDetails)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"font-picker col s6\">\n\t\t\t\t\t\t<label className=\" col s12\">Choose Your Font</label>\n\t\t\t\t\t\t<FontPicker\n\t\t\t\t\t\t\tapiKey=\"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\"\n\t\t\t\t\t\t\tactiveFontFamily={this.state.style.fontFamily}\n\t\t\t\t\t\t\tonChange={nextFont =>\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\tfontFamily: nextFont.family\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t<label>Choose Your Text Color</label>\n\t\t\t\t\t\t<ChromePicker onChangeComplete={this.onColorChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Font Size</label>\n\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"px\"\n\t\t\t\t\t\t\t\t\ttype=\"fontSize\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Rotation</label>\n\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"deg\"\n\t\t\t\t\t\t\t\t\ttype=\"rotation\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Weight</label>\n\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\ttype=\"weight\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Line Height</label>\n\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"px\"\n\t\t\t\t\t\t\t\t\ttype=\"height\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ updateSideText, addText }\n)(TextEditor);\n"]},"metadata":{},"sourceType":"module"}