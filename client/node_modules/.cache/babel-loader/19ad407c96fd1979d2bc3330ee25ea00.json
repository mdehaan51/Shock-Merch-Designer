{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js\";\nimport React from \"react\";\nimport \"../styles/App.css\";\n\nconst RequestForm = ({\n  onSubmit\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    id: \"contact-form\",\n    onSubmit: onSubmit,\n    method: \"POST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Business Name\",\n    id: \"business-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"phone\",\n    placeholder: \"Phone Number\",\n    id: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"location\",\n    placeholder: \"City, State\",\n    id: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"location\",\n    placeholder: \"Country\",\n    id: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    type: \"textarea\",\n    placeholder: \"Give us some details about what you need!\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst HelpForm = ({\n  onClick\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Yes!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Show Me The Tutorial\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"No Thanks!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Take Me Back to the Builder\"))));\n};\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const name = document.getElementById('name').value;\n      const business = document.getElementById('business-name').value;\n      const email = document.getElementById('email').value;\n      const phone = document.getElementById('phone').value;\n      const city = document.getElementById('city').value;\n      const country = document.getElementById('country').value;\n      const message = document.getElementById('message').value;\n      fetch('/send', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          business: business,\n          email: email,\n          phone: phone,\n          city: city,\n          country: country,\n          messsage: message\n        })\n      }).then(res => res.json()).then(res => {\n        console.log('here is the response: ', res);\n      }).catch(err => {\n        console.error('here is the error: ', err);\n      });\n    };\n\n    this.state = {\n      email: ''\n    };\n  }\n\n  /*.then((res) => res.json())\n  .then((res) => {\n  console.log('here is the response: ', res);\n  })\n  .catch((err) => {\n  console.error('here is the error: ', err);\n  })*/\n  resetForm() {\n    document.getElementById('contact-form').reset();\n  }\n\n  render() {\n    let showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n    let form;\n    let backgroundImage;\n\n    if (this.props.type === \"request\") {\n      backgroundImage = \"images/modalbackground.jpg\";\n      form = React.createElement(RequestForm, {\n        onClick: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    } else if (this.props.type === \"help\") {\n      backgroundImage = \"images/helpmodalbackground.jpg\";\n      form = React.createElement(HelpForm, {\n        onClick: this.props.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: showHideClassName,\n      ref: this.props.reference,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"modal-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"close-modal\",\n      src: \"images/close.png\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"modal-background\",\n      src: backgroundImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"modal-background-dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.title), form));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js"],"names":["React","RequestForm","onSubmit","HelpForm","onClick","Modal","Component","constructor","props","handleSubmit","e","preventDefault","name","document","getElementById","value","business","email","phone","city","country","message","fetch","method","headers","body","JSON","stringify","messsage","then","res","json","console","log","catch","err","error","state","resetForm","reset","render","showHideClassName","show","form","backgroundImage","type","bind","handleClose","reference","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/App.css\";\n\n\nconst RequestForm = ({ onSubmit }) => {\n\treturn (\n\t\t<form className=\"modal-form\" id=\"contact-form\" onSubmit={onSubmit} method=\"POST\">\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"text\" placeholder=\"Name\" id=\"name\" />\n\t\t\t\t<input type=\"text\" placeholder=\"Business Name\" id=\"business-name\"/>\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" id=\"email\"/>\n\t\t\t\t<input type=\"phone\" placeholder=\"Phone Number\" id=\"phone\"/>\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"location\" placeholder=\"City, State\" id=\"city\"/>\n\t\t\t\t<input type=\"location\" placeholder=\"Country\" id=\"country\" />\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\tplaceholder=\"Give us some details about what you need!\"\n\t\t\t\t\tid=\"message\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"button\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nconst HelpForm = ({ onClick }) => {\n\treturn (\n\t\t<form className=\"modal-form\">\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"button\" onClick={onClick}>\n\t\t\t\t\t\tYes!\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Show Me The Tutorial</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"button\" onClick={onClick}>\n\t\t\t\t\t\tNo Thanks!\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Take Me Back to the Builder</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nclass Modal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: ''\n\t\t};\n\t}\n\n\n\thandleSubmit = e =>{\n        e.preventDefault();\n        const name = document.getElementById('name').value;\n        const business = document.getElementById('business-name').value\n        const email = document.getElementById('email').value;\n        const phone = document.getElementById('phone').value;\n        const city = document.getElementById('city').value;\n        const country = document.getElementById('country').value;\n        const message = document.getElementById('message').value;\n        fetch('/send', {\n    \t\tmethod: 'POST',\n    \t\theaders: {\n      \t\t'Accept': 'application/json',\n      \t\t'Content-Type': 'application/json'\n    \t\t},\n            body: JSON.stringify({\n                name: name,\n                business: business,   \n                email: email,\n                phone: phone,\n                city: city,\n                country: country,  \n                messsage: message\n            })\n        })\n          .then((res) => res.json())\n  .then((res) => {\n    console.log('here is the response: ', res);\n  })\n  .catch((err) => {\n    console.error('here is the error: ', err);\n  })\n }\n        \n        /*.then((res) => res.json())\n  \t\t.then((res) => {\n    \tconsole.log('here is the response: ', res);\n  \t\t})\n  \t\t.catch((err) => {\n    \t\tconsole.error('here is the error: ', err);\n  \t\t})*/\n \t\n    resetForm(){\n        document.getElementById('contact-form').reset();\n    }\n\n\trender() {\n\t\tlet showHideClassName = this.props.show\n\t\t\t? \"modal display-block\"\n\t\t\t: \"modal display-none\";\n\t\tlet form;\n\t\tlet backgroundImage;\n\t\tif (this.props.type === \"request\") {\n\t\t\tbackgroundImage = \"images/modalbackground.jpg\";\n\t\t\tform = <RequestForm onClick={this.handleSubmit.bind(this)} />;\n\t\t} else if (this.props.type === \"help\") {\n\t\t\tbackgroundImage = \"images/helpmodalbackground.jpg\";\n\t\t\tform = <HelpForm onClick={this.props.handleClose} />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={showHideClassName} ref={this.props.reference}>\n\t\t\t\t<section className=\"modal-main\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"close-modal\"\n\t\t\t\t\t\tsrc=\"images/close.png\"\n\t\t\t\t\t\tonClick={this.props.handleClose}\n\t\t\t\t\t/>\n\t\t\t\t\t<img className=\"modal-background\" src={backgroundImage} />\n\t\t\t\t\t<img className=\"modal-background-dimmer\" />\n\t\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t\t{form}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}