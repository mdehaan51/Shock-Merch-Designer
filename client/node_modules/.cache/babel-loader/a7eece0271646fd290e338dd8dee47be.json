{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { quoteRequest } from \"../actions/gridActions\";\nimport \"../styles/App.css\";\n\nconst RequestForm = ({\n  onSubmit\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    id: \"contact-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Business Name\",\n    id: \"business-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"tel\",\n    placeholder: \"Phone Number\",\n    id: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"City, State\",\n    id: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Country\",\n    id: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"materialize-textarea\",\n    type: \"text\",\n    placeholder: \"Give us some details about what you need!\",\n    id: \"message\",\n    style: {\n      height: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"button hoverable\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst HelpForm = ({\n  onClick\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"materialize-textarea\",\n    type: \"text\",\n    placeholder: \"Please describe what happened, and what you expected to happen.\",\n    id: \"message\",\n    style: {\n      height: \"200px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"button hoverable\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const name = document.getElementById(\"name\").value;\n      const business = document.getElementById(\"business-name\").value;\n      const email = document.getElementById(\"email\").value;\n      const phone = document.getElementById(\"phone\").value;\n      const city = document.getElementById(\"city\").value;\n      const country = document.getElementById(\"country\").value;\n      const message = document.getElementById(\"message\").value;\n      const components = this.createComponentList(this.props.components);\n      let messageData = {\n        name: name,\n        business: business,\n        email: email,\n        phone: phone,\n        location: city + \" \" + country,\n        message: message,\n        components: components\n      };\n      axios({\n        method: \"POST\",\n        url: \"/api/mailer/send\",\n        data: messageData\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.msg === \"success\") {\n          alert(\"Message Sent.\");\n          this.resetForm();\n        } else if (response.data.msg === \"fail\") {\n          alert(\"Message failed to send.\");\n        }\n      });\n    };\n\n    this.state = {\n      resonse: \"\",\n      email: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  createComponentList(items) {\n    let array = [];\n    items.forEach(function (item, key) {\n      array.push(\"\".concat(name, \": \").concat(count));\n    });\n    return array;\n  }\n\n  resetForm() {\n    document.getElementById(\"contact-form\").reset();\n  }\n\n  render() {\n    let showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n    let form;\n    let backgroundImage;\n\n    if (this.props.type === \"request\") {\n      backgroundImage = \"images/modalbackground.jpg\";\n      form = React.createElement(RequestForm, {\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      });\n    } else if (this.props.type === \"help\") {\n      backgroundImage = \"images/helpmodalbackground.jpg\";\n      form = React.createElement(HelpForm, {\n        onSubmit: this.props.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: showHideClassName,\n      ref: this.props.reference,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"modal-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      className: \"close-modal\",\n      src: \"images/close.png\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"\",\n      className: \"modal-background-dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.props.title), form));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  quoteRequest\n})(Modal);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js"],"names":["React","axios","PropTypes","connect","quoteRequest","RequestForm","onSubmit","height","HelpForm","onClick","Modal","Component","constructor","props","handleSubmit","e","preventDefault","name","document","getElementById","value","business","email","phone","city","country","message","components","createComponentList","messageData","location","method","url","data","then","response","console","log","msg","alert","resetForm","state","resonse","componentDidMount","items","array","forEach","item","key","push","count","reset","render","showHideClassName","show","form","backgroundImage","type","bind","handleClose","reference","title","mapStateToProps","auth","errors"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { quoteRequest } from \"../actions/gridActions\";\nimport \"../styles/App.css\";\n\nconst RequestForm = ({ onSubmit }) => {\n\treturn (\n\t\t<form className=\"modal-form\" id=\"contact-form\" onSubmit={onSubmit}>\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<input type=\"text\" placeholder=\"Name\" id=\"name\" />\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Business Name\"\n\t\t\t\t\tid=\"business-name\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" id=\"email\" />\n\t\t\t\t<input type=\"tel\" placeholder=\"Phone Number\" id=\"phone\" />\n\t\t\t</div>\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<input type=\"text\" placeholder=\"City, State\" id=\"city\" />\n\t\t\t\t<input type=\"text\" placeholder=\"Country\" id=\"country\" />\n\t\t\t</div>\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"materialize-textarea\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Give us some details about what you need!\"\n\t\t\t\t\tid=\"message\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: \"100px\"\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"button hoverable\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nconst HelpForm = ({ onClick }) => {\n\treturn (\n\t\t<form className=\"modal-form\">\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<input type=\"text\" placeholder=\"Name\" id=\"name\" />\n\n\t\t\t\t<input type=\"text\" placeholder=\"Email\" id=\"email\" />\n\t\t\t</div>\n\n\t\t\t<div className=\"form-row input-field\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"materialize-textarea\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Please describe what happened, and what you expected to happen.\"\n\t\t\t\t\tid=\"message\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: \"200px\"\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"button hoverable\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nclass Modal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tresonse: \"\",\n\t\t\temail: \"\"\n\t\t};\n\t}\n\tcomponentDidMount() {}\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\tconst name = document.getElementById(\"name\").value;\n\t\tconst business = document.getElementById(\"business-name\").value;\n\t\tconst email = document.getElementById(\"email\").value;\n\t\tconst phone = document.getElementById(\"phone\").value;\n\t\tconst city = document.getElementById(\"city\").value;\n\t\tconst country = document.getElementById(\"country\").value;\n\t\tconst message = document.getElementById(\"message\").value;\n\t\tconst components = this.createComponentList(this.props.components);\n\t\tlet messageData = {\n\t\t\tname: name,\n\t\t\tbusiness: business,\n\t\t\temail: email,\n\t\t\tphone: phone,\n\t\t\tlocation: city + \" \" + country,\n\t\t\tmessage: message,\n\t\t\tcomponents: components\n\t\t};\n\t\taxios({\n\t\t\tmethod: \"POST\",\n\t\t\turl: \"/api/mailer/send\",\n\t\t\tdata: messageData\n\t\t}).then(response => {\n\t\t\tconsole.log(response);\n\t\t\tif (response.data.msg === \"success\") {\n\t\t\t\talert(\"Message Sent.\");\n\t\t\t\tthis.resetForm();\n\t\t\t} else if (response.data.msg === \"fail\") {\n\t\t\t\talert(\"Message failed to send.\");\n\t\t\t}\n\t\t});\n\t};\n\n\tcreateComponentList(items) {\n\t\tlet array = [];\n\t\titems.forEach(function(item, key) {\n\t\t\tarray.push(`${name}: ${count}`);\n\t\t});\n\t\treturn array;\n\t}\n\n\tresetForm() {\n\t\tdocument.getElementById(\"contact-form\").reset();\n\t}\n\n\trender() {\n\t\tlet showHideClassName = this.props.show\n\t\t\t? \"modal display-block\"\n\t\t\t: \"modal display-none\";\n\t\tlet form;\n\t\tlet backgroundImage;\n\t\tif (this.props.type === \"request\") {\n\t\t\tbackgroundImage = \"images/modalbackground.jpg\";\n\t\t\tform = <RequestForm onSubmit={this.handleSubmit.bind(this)} />;\n\t\t} else if (this.props.type === \"help\") {\n\t\t\tbackgroundImage = \"images/helpmodalbackground.jpg\";\n\t\t\tform = <HelpForm onSubmit={this.props.handleClose} />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={showHideClassName} ref={this.props.reference}>\n\t\t\t\t<section className=\"modal-main\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"close-modal\"\n\t\t\t\t\t\tsrc=\"images/close.png\"\n\t\t\t\t\t\tonClick={this.props.handleClose}\n\t\t\t\t\t/>\n\t\t\t\t\t<img alt=\"\" className=\"modal-background-dimmer\" />\n\t\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t\t{form}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\terrors: state.errors\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ quoteRequest }\n)(Modal);\n"]},"metadata":{},"sourceType":"module"}