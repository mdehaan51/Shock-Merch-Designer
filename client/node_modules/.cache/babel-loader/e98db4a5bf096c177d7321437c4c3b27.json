{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rotateObject = () => {\n      let rotation = this.state.rotation;\n      let newRotation = rotation + 90;\n      this.setState({\n        rotation: newRotation\n      });\n    };\n\n    this.deleteObject = id => {\n      this.props.deleteComponent(id);\n    };\n\n    this.onDragStart = (ev, id) => {\n      //let location = this.getItemLocation();\n      //this.selectElement(ev, this.props.pieceId);\n      this.props.onDragStart(ev, id);\n    };\n\n    this.onDragStop = (ev, data, id) => {\n      console.log(\"drag stopped\");\n      this.setState({\n        defaultPosition: {\n          x: data.x,\n          y: data.y\n        }\n      });\n      let location = this.state.defaultPosition;\n      this.props.saveGrid(id, location);\n    };\n\n    this.getItemLocation = () => {\n      let gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style.transform;\n      return gridLoc;\n    };\n\n    this.selectElement = (ev, id) => {\n      //this.props.saveActiveItem(id);\n      //if (this.props.currentlyActive == id) {\n      if (this.state.active === true) {\n        this.props.saveActiveItem(\"\");\n        this.setState({\n          active: false\n        });\n      } else {\n        this.props.saveActiveItem(id);\n        this.setState({\n          active: true\n        });\n        this.props.saveActiveItem(id); //}\n      }\n    };\n\n    this.removeActive = () => {\n      if (this.props.currentlyActive !== this.props.pieceId) {\n        this.setState({\n          active: false\n        });\n      }\n    };\n\n    this.setDefaultPostion = () => {};\n\n    this.state = {\n      itemLocations: [],\n      rotation: 0,\n      scale: 1,\n      active: false,\n      xPos: \"\",\n      yPos: \"\",\n      location: \"\",\n      defaultPostion: {\n        x: 0,\n        y: 0\n      }\n    };\n    this.itemRef = React.createRef();\n  }\n\n  componentDidMount(e) {\n    this.setState({\n      scale: this.props.scale,\n      location: this.props.location\n    }); //this.props.saveGrid(id, location);\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.scale !== this.props.scale) {\n      this.setState({\n        scale: nextProps.scale\n      });\n    }\n\n    if (nextProps.currentlyActive !== this.props.pieceId && this.state.active === true) {\n      this.setState({\n        active: false\n      });\n    }\n    /*if (this.props.currentlyActive !== this.props.pieceId) {\n    \tconsole.log(\"checking\");\n    \tconsole.log(this.state.active);\n    \tthis.setState({\n    \t\tactive: false\n    \t});\n    }*/\n\n  }\n\n  render() {\n    let itemWidth = this.props.width / this.props.grid.width * this.props.gridWidth;\n    let itemHeight = this.props.height / this.props.grid.height * this.props.gridHeight;\n    let containerSize = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\" //transform: this.state.location\n\n    }; //console.log(String(this.state.location));\n\n    if (this.state.rotation === 90 || this.state.rotation === 270) {\n      containerSize = {\n        width: itemHeight + \"px\",\n        height: itemWidth + \"px\"\n      };\n    }\n\n    const size = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      transform: \"translate(-50%,-50%) rotate(\".concat(this.state.rotation, \"deg)\")\n    };\n    return React.createElement(Draggable, {\n      bounds: \"parent\",\n      defaultPosition: {\n        x: this.props.xLocation,\n        // - itemWidth,\n        y: this.props.yLocation // - itemHeight\n\n      },\n      grid: [1, 1],\n      scale: 1,\n      onStart: ev => this.onDragStart(ev, this.props.pieceId),\n      onStop: (ev, data) => this.onDragStop(ev, data, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"gridItem\",\n      className: \"grid-item \".concat(this.state.active === true ? \"active\" : \"\"),\n      style: containerSize,\n      onClick: ev => this.selectElement(ev, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"object-img\",\n      style: size,\n      alt: \"\",\n      draggable: true,\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), this.state.active ? React.createElement(\"div\", {\n      className: \"object-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(DeleteComponent, {\n      deleteComponent: () => {\n        this.deleteObject(this.props.pieceId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(RotateObject, {\n      rotateComponent: this.rotateObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  grid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js"],"names":["React","ReactDOM","Draggable","DeleteComponent","RotateObject","connect","GridObjectItem","Component","constructor","props","rotateObject","rotation","state","newRotation","setState","deleteObject","id","deleteComponent","onDragStart","ev","onDragStop","data","console","log","defaultPosition","x","y","location","saveGrid","getItemLocation","gridLoc","findDOMNode","refs","style","transform","selectElement","active","saveActiveItem","removeActive","currentlyActive","pieceId","setDefaultPostion","itemLocations","scale","xPos","yPos","defaultPostion","itemRef","createRef","componentDidMount","e","componentWillUpdate","nextProps","render","itemWidth","width","grid","gridWidth","itemHeight","height","gridHeight","containerSize","size","xLocation","yLocation","img","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titemLocations: [],\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tactive: false,\n\t\t\txPos: \"\",\n\t\t\tyPos: \"\",\n\t\t\tlocation: \"\",\n\t\t\tdefaultPostion: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}\n\t\t};\n\t\tthis.itemRef = React.createRef();\n\t}\n\n\tcomponentDidMount(e) {\n\t\tthis.setState({\n\t\t\tscale: this.props.scale,\n\t\t\tlocation: this.props.location\n\t\t});\n\t\t//this.props.saveGrid(id, location);\n\t}\n\tcomponentWillUpdate(nextProps) {\n\t\tif (nextProps.scale !== this.props.scale) {\n\t\t\tthis.setState({ scale: nextProps.scale });\n\t\t}\n\t\tif (\n\t\t\tnextProps.currentlyActive !== this.props.pieceId &&\n\t\t\tthis.state.active === true\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t\t/*if (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tconsole.log(\"checking\");\n\t\t\tconsole.log(this.state.active);\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}*/\n\t}\n\n\trotateObject = () => {\n\t\tlet rotation = this.state.rotation;\n\t\tlet newRotation = rotation + 90;\n\t\tthis.setState({\n\t\t\trotation: newRotation\n\t\t});\n\t};\n\n\tdeleteObject = id => {\n\t\tthis.props.deleteComponent(id);\n\t};\n\n\tonDragStart = (ev, id) => {\n\t\t//let location = this.getItemLocation();\n\n\t\t//this.selectElement(ev, this.props.pieceId);\n\t\tthis.props.onDragStart(ev, id);\n\t};\n\n\tonDragStop = (ev, data, id) => {\n\t\tconsole.log(\"drag stopped\");\n\t\tthis.setState({\n\t\t\tdefaultPosition: {\n\t\t\t\tx: data.x,\n\t\t\t\ty: data.y\n\t\t\t}\n\t\t});\n\t\tlet location = this.state.defaultPosition;\n\t\tthis.props.saveGrid(id, location);\n\t};\n\n\tgetItemLocation = () => {\n\t\tlet gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style\n\t\t\t.transform;\n\n\t\treturn gridLoc;\n\t};\n\n\tselectElement = (ev, id) => {\n\t\t//this.props.saveActiveItem(id);\n\t\t//if (this.props.currentlyActive == id) {\n\t\tif (this.state.active === true) {\n\t\t\tthis.props.saveActiveItem(\"\");\n\t\t\tthis.setState({ active: false });\n\t\t} else {\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\tthis.setState({ active: true });\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\t//}\n\t\t}\n\t};\n\n\tremoveActive = () => {\n\t\tif (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t};\n\n\tsetDefaultPostion = () => {};\n\n\trender() {\n\t\tlet itemWidth =\n\t\t\t(this.props.width / this.props.grid.width) * this.props.gridWidth;\n\t\tlet itemHeight =\n\t\t\t(this.props.height / this.props.grid.height) *\n\t\t\tthis.props.gridHeight;\n\n\t\tlet containerSize = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\"\n\t\t\t//transform: this.state.location\n\t\t};\n\t\t//console.log(String(this.state.location));\n\t\tif (this.state.rotation === 90 || this.state.rotation === 270) {\n\t\t\tcontainerSize = {\n\t\t\t\twidth: itemHeight + \"px\",\n\t\t\t\theight: itemWidth + \"px\"\n\t\t\t};\n\t\t}\n\t\tconst size = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttransform: `translate(-50%,-50%) rotate(${this.state.rotation}deg)`\n\t\t};\n\n\t\treturn (\n\t\t\t<Draggable\n\t\t\t\tbounds=\"parent\"\n\t\t\t\tdefaultPosition={{\n\t\t\t\t\tx: this.props.xLocation, // - itemWidth,\n\t\t\t\t\ty: this.props.yLocation // - itemHeight\n\t\t\t\t}}\n\t\t\t\tgrid={[1, 1]}\n\t\t\t\tscale={1}\n\t\t\t\tonStart={ev => this.onDragStart(ev, this.props.pieceId)}\n\t\t\t\tonStop={(ev, data) =>\n\t\t\t\t\tthis.onDragStop(ev, data, this.props.pieceId)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={\"gridItem\"}\n\t\t\t\t\tclassName={`grid-item ${\n\t\t\t\t\t\tthis.state.active === true ? \"active\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tstyle={containerSize}\n\t\t\t\t\tonClick={ev => this.selectElement(ev, this.props.pieceId)}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"object-img\"\n\t\t\t\t\t\tstyle={size}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\tsrc={this.props.img}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.active ? (\n\t\t\t\t\t\t<div className=\"object-actions\">\n\t\t\t\t\t\t\t<DeleteComponent\n\t\t\t\t\t\t\t\tdeleteComponent={() => {\n\t\t\t\t\t\t\t\t\tthis.deleteObject(this.props.pieceId);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<RotateObject rotateComponent={this.rotateObject} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tgrid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);\n"]},"metadata":{},"sourceType":"module"}