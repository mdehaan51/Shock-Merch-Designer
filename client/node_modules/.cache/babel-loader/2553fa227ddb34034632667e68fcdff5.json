{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rotateObject = () => {\n      let rotation = this.state.rotation;\n      let newRotation = rotation + 90;\n      this.setState({\n        rotation: newRotation\n      });\n    };\n\n    this.deleteObject = id => {\n      this.props.deleteComponent(id);\n    };\n\n    this.onDragStart = (ev, id) => {\n      let location = this.getItemLocation();\n      this.props.saveGrid(id, location); //this.selectElement(ev, this.props.pieceId);\n\n      this.props.onDragStart(ev, id);\n    };\n\n    this.onDragStop = (ev, id) => {\n      console.log(\"drag stopped\");\n      /*if (this.state.active === true) {\n      \tthis.setState({ active: false });\n      }*/\n    };\n\n    this.getItemLocation = () => {\n      let gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style.transform;\n      return gridLoc;\n    };\n\n    this.handleStop = (ev, width, height) => {\n      //let position = this.refs[\"gridBox\"].getBoundingClientRect();\n      this.setState({\n        locationX: ev.clientX - this.props.gridX - this.props.width,\n        locationY: ev.clientY - this.props.gridY - this.props.height\n      }); //this.props.saveLocation(left, top, right, bottom);\n    };\n\n    this.selectElement = (ev, id) => {\n      //this.props.saveActiveItem(id);\n      //if (this.props.currentlyActive == id) {\n      if (this.state.active === true) {\n        this.props.saveActiveItem(\"\");\n        this.setState({\n          active: false\n        });\n      } else {\n        this.props.saveActiveItem(id);\n        this.setState({\n          active: true\n        });\n        this.props.saveActiveItem(id); //}\n      }\n    };\n\n    this.removeActive = () => {\n      if (this.props.currentlyActive !== this.props.pieceId) {\n        this.setState({\n          active: false\n        });\n      }\n    };\n\n    this.setDefaultPosition = () => {\n      let itemWidth = this.props.width / this.props.grid.width * this.props.gridWidth;\n      let itemHeight = this.props.height / this.props.grid.height * this.props.gridHeight;\n      let x = this.props.xLocation - itemWidth;\n      let y = this.props.yLocation - itemHeight;\n      this.setState({\n        defaultPosition: {\n          x: x,\n          y: y\n        }\n      });\n    };\n\n    this.saveState = elem => {\n      console.log(elem);\n      this.setState({\n        elem\n      });\n      this.props.saveGrid(id, elem);\n    };\n\n    this.state = {\n      itemLocations: [],\n      rotation: 0,\n      scale: 1,\n      active: false,\n      xPos: \"\",\n      yPos: \"\",\n      location: \"\"\n    };\n    this.itemRef = React.createRef();\n  }\n\n  componentDidMount(e) {\n    this.setState({\n      scale: this.props.scale,\n      location: this.props.location\n    });\n    this.setDefaultPosition();\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.scale !== this.props.scale) {\n      this.setState({\n        scale: nextProps.scale\n      });\n    }\n\n    if (nextProps.currentlyActive !== this.props.pieceId && this.state.active === true) {\n      this.setState({\n        active: false\n      });\n    }\n    /*if (this.props.currentlyActive !== this.props.pieceId) {\n    \tconsole.log(\"checking\");\n    \tconsole.log(this.state.active);\n    \tthis.setState({\n    \t\tactive: false\n    \t});\n    }*/\n\n  }\n\n  render() {\n    let itemWidth = this.props.width / this.props.grid.width * this.props.gridWidth;\n    let itemHeight = this.props.height / this.props.grid.height * this.props.gridHeight;\n    let containerSize = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      transform: \"translate(123.2px, 98px)\"\n    };\n\n    if (this.state.rotation === 90 || this.state.rotation === 270) {\n      containerSize = {\n        width: itemHeight + \"px\",\n        height: itemWidth + \"px\"\n      };\n    }\n\n    const size = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      transform: \"translate(-50%,-50%) rotate(\".concat(this.state.rotation, \"deg)\")\n    };\n    return React.createElement(Draggable, {\n      bounds: \"parent\",\n      defaultPosition: this.state.defaultPosition,\n      grid: [1, 1],\n      scale: 1,\n      onStart: ev => this.onDragStart(ev, this.props.pieceId),\n      onStop: (ev, data) => {\n        this.saveState({\n          defaultPosition: {\n            x: data.x,\n            y: data.y\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"gridItem\",\n      className: \"grid-item \".concat(this.state.active === true ? \"active\" : \"\"),\n      style: containerSize,\n      onClick: ev => this.selectElement(ev, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"object-img\",\n      style: size,\n      alt: \"\",\n      draggable: true,\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), this.state.active ? React.createElement(\"div\", {\n      className: \"object-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(DeleteComponent, {\n      deleteComponent: () => {\n        this.deleteObject(this.props.pieceId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(RotateObject, {\n      rotateComponent: this.rotateObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  grid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js"],"names":["React","ReactDOM","Draggable","DeleteComponent","RotateObject","connect","GridObjectItem","Component","constructor","props","rotateObject","rotation","state","newRotation","setState","deleteObject","id","deleteComponent","onDragStart","ev","location","getItemLocation","saveGrid","onDragStop","console","log","gridLoc","findDOMNode","refs","style","transform","handleStop","width","height","locationX","clientX","gridX","locationY","clientY","gridY","selectElement","active","saveActiveItem","removeActive","currentlyActive","pieceId","setDefaultPosition","itemWidth","grid","gridWidth","itemHeight","gridHeight","x","xLocation","y","yLocation","defaultPosition","saveState","elem","itemLocations","scale","xPos","yPos","itemRef","createRef","componentDidMount","e","componentWillUpdate","nextProps","render","containerSize","size","data","img","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titemLocations: [],\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tactive: false,\n\t\t\txPos: \"\",\n\t\t\tyPos: \"\",\n\t\t\tlocation: \"\"\n\t\t};\n\t\tthis.itemRef = React.createRef();\n\t}\n\n\tcomponentDidMount(e) {\n\t\tthis.setState({\n\t\t\tscale: this.props.scale,\n\t\t\tlocation: this.props.location\n\t\t});\n\t\tthis.setDefaultPosition();\n\t}\n\tcomponentWillUpdate(nextProps) {\n\t\tif (nextProps.scale !== this.props.scale) {\n\t\t\tthis.setState({ scale: nextProps.scale });\n\t\t}\n\t\tif (\n\t\t\tnextProps.currentlyActive !== this.props.pieceId &&\n\t\t\tthis.state.active === true\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t\t/*if (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tconsole.log(\"checking\");\n\t\t\tconsole.log(this.state.active);\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}*/\n\t}\n\n\trotateObject = () => {\n\t\tlet rotation = this.state.rotation;\n\t\tlet newRotation = rotation + 90;\n\t\tthis.setState({\n\t\t\trotation: newRotation\n\t\t});\n\t};\n\n\tdeleteObject = id => {\n\t\tthis.props.deleteComponent(id);\n\t};\n\n\tonDragStart = (ev, id) => {\n\t\tlet location = this.getItemLocation();\n\t\tthis.props.saveGrid(id, location);\n\t\t//this.selectElement(ev, this.props.pieceId);\n\t\tthis.props.onDragStart(ev, id);\n\t};\n\n\tonDragStop = (ev, id) => {\n\t\tconsole.log(\"drag stopped\");\n\n\t\t/*if (this.state.active === true) {\n\t\t\tthis.setState({ active: false });\n\t\t}*/\n\t};\n\n\tgetItemLocation = () => {\n\t\tlet gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style\n\t\t\t.transform;\n\n\t\treturn gridLoc;\n\t};\n\n\thandleStop = (ev, width, height) => {\n\t\t//let position = this.refs[\"gridBox\"].getBoundingClientRect();\n\t\tthis.setState({\n\t\t\tlocationX: ev.clientX - this.props.gridX - this.props.width,\n\t\t\tlocationY: ev.clientY - this.props.gridY - this.props.height\n\t\t});\n\t\t//this.props.saveLocation(left, top, right, bottom);\n\t};\n\n\tselectElement = (ev, id) => {\n\t\t//this.props.saveActiveItem(id);\n\t\t//if (this.props.currentlyActive == id) {\n\t\tif (this.state.active === true) {\n\t\t\tthis.props.saveActiveItem(\"\");\n\t\t\tthis.setState({ active: false });\n\t\t} else {\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\tthis.setState({ active: true });\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\t//}\n\t\t}\n\t};\n\n\tremoveActive = () => {\n\t\tif (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t};\n\n\tsetDefaultPosition = () => {\n\t\tlet itemWidth =\n\t\t\t(this.props.width / this.props.grid.width) * this.props.gridWidth;\n\t\tlet itemHeight =\n\t\t\t(this.props.height / this.props.grid.height) *\n\t\t\tthis.props.gridHeight;\n\t\tlet x = this.props.xLocation - itemWidth;\n\t\tlet y = this.props.yLocation - itemHeight;\n\n\t\tthis.setState({\n\t\t\tdefaultPosition: {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t}\n\t\t});\n\t};\n\tsaveState = elem => {\n\t\tconsole.log(elem);\n\t\tthis.setState({\n\t\t\telem\n\t\t});\n\t\tthis.props.saveGrid(id, elem);\n\t};\n\n\trender() {\n\t\tlet itemWidth =\n\t\t\t(this.props.width / this.props.grid.width) * this.props.gridWidth;\n\t\tlet itemHeight =\n\t\t\t(this.props.height / this.props.grid.height) *\n\t\t\tthis.props.gridHeight;\n\t\tlet containerSize = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttransform: \"translate(123.2px, 98px)\"\n\t\t};\n\n\t\tif (this.state.rotation === 90 || this.state.rotation === 270) {\n\t\t\tcontainerSize = {\n\t\t\t\twidth: itemHeight + \"px\",\n\t\t\t\theight: itemWidth + \"px\"\n\t\t\t};\n\t\t}\n\t\tconst size = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttransform: `translate(-50%,-50%) rotate(${this.state.rotation}deg)`\n\t\t};\n\n\t\treturn (\n\t\t\t<Draggable\n\t\t\t\tbounds=\"parent\"\n\t\t\t\tdefaultPosition={this.state.defaultPosition}\n\t\t\t\tgrid={[1, 1]}\n\t\t\t\tscale={1}\n\t\t\t\tonStart={ev => this.onDragStart(ev, this.props.pieceId)}\n\t\t\t\tonStop={(ev, data) => {\n\t\t\t\t\tthis.saveState({\n\t\t\t\t\t\tdefaultPosition: { x: data.x, y: data.y }\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={\"gridItem\"}\n\t\t\t\t\tclassName={`grid-item ${\n\t\t\t\t\t\tthis.state.active === true ? \"active\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tstyle={containerSize}\n\t\t\t\t\tonClick={ev => this.selectElement(ev, this.props.pieceId)}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"object-img\"\n\t\t\t\t\t\tstyle={size}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\tsrc={this.props.img}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.active ? (\n\t\t\t\t\t\t<div className=\"object-actions\">\n\t\t\t\t\t\t\t<DeleteComponent\n\t\t\t\t\t\t\t\tdeleteComponent={() => {\n\t\t\t\t\t\t\t\t\tthis.deleteObject(this.props.pieceId);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<RotateObject rotateComponent={this.rotateObject} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tgrid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);\n"]},"metadata":{},"sourceType":"module"}