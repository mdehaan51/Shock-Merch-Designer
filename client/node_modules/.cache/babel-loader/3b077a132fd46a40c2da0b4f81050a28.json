{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\nimport Konva from \"konva\";\nimport useImage from \"use-image\";\n\nconst ShapeElement = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  url,\n  hex,\n  blue,\n  red,\n  green\n}) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n\n  const _useImage = useImage(url),\n        _useImage2 = _slicedToArray(_useImage, 1),\n        image = _useImage2[0];\n\n  const _useState = useState(hex),\n        _useState2 = _slicedToArray(_useState, 2),\n        color = _useState2[0],\n        setColor = _useState2[1];\n\n  useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  useEffect(() => {\n    if (hex) {//shapeRef.current.cache();\n      // since this update is not handled by \"react-konva\" and we are using Konva methods directly\n      // we have to redraw layer manually\n      //shapeRef.current.getLayer().batchDraw();\n    }\n  }, [hex]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Image, Object.assign({\n    onClick: onSelect,\n    ref: shapeRef\n  }, shapeProps, {\n    x: 100,\n    y: 100,\n    draggable: true,\n    image: image,\n    onDragEnd: e => {\n      onChange(_objectSpread({}, shapeProps, {\n        x: e.target.x(),\n        y: e.target.y()\n      }));\n    },\n    onTransformEnd: e => {\n      // transformer is changing scale\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // we will reset it back\n\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange(_objectSpread({}, shapeProps, {\n        x: node.x(),\n        y: node.y(),\n        width: node.width() * scaleX,\n        height: node.height() * scaleY\n      }));\n    },\n    opacity: 0.5,\n    filters: [Konva.Filters.RGB],\n    blue: blue,\n    red: red,\n    green: green,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), isSelected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport default ShapeElement;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js"],"names":["React","Component","useState","useEffect","Stage","Layer","Text","Image","Transformer","Konva","useImage","ShapeElement","shapeProps","isSelected","onSelect","onChange","url","hex","blue","red","green","shapeRef","useRef","trRef","image","color","setColor","current","setNode","getLayer","batchDraw","e","x","target","y","node","scaleX","scaleY","width","height","Filters","RGB"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\nimport Konva from \"konva\";\nimport useImage from \"use-image\";\n\nconst ShapeElement = ({\n\tshapeProps,\n\tisSelected,\n\tonSelect,\n\tonChange,\n\turl,\n\thex,\n\tblue,\n\tred,\n\tgreen\n}) => {\n\tconst shapeRef = React.useRef();\n\tconst trRef = React.useRef();\n\tconst [image] = useImage(url);\n\tconst [color, setColor] = useState(hex);\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current.setNode(shapeRef.current);\n\n\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\tuseEffect(() => {\n\t\tif (hex) {\n\t\t\t//shapeRef.current.cache();\n\t\t\t// since this update is not handled by \"react-konva\" and we are using Konva methods directly\n\t\t\t// we have to redraw layer manually\n\t\t\t//shapeRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [hex]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Image\n\t\t\t\tonClick={onSelect}\n\t\t\t\tref={shapeRef}\n\t\t\t\t{...shapeProps}\n\t\t\t\tx={100}\n\t\t\t\ty={100}\n\t\t\t\tdraggable\n\t\t\t\timage={image}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y()\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\t// transformer is changing scale\n\t\t\t\t\tconst node = shapeRef.current;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t// we will reset it back\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\topacity={0.5}\n\t\t\t\tfilters={[Konva.Filters.RGB]}\n\t\t\t\tblue={blue}\n\t\t\t\tred={red}\n\t\t\t\tgreen={green}\n\t\t\t/>\n\t\t\t{isSelected && <Transformer ref={trRef} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default ShapeElement;\n"]},"metadata":{},"sourceType":"module"}