{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image, Group } from \"react-konva\";\nimport Konva from \"konva\";\nimport SockImage from \"./SockImage\";\nimport SockImage2 from \"./SockImage2\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\nimport ImageElement from \"./ImageElement\";\nimport { addText, updateText, selectText, addImage, updateImages, selectImage } from \"../../actions/sideActions\";\nimport { saveData } from \"../../actions/drawingActions\";\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textItems: [],\n      selectedShape: \"\",\n      width: null,\n      height: null\n    };\n    let stageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    //console.log(this.refs.stageContainer.offsetWidth);\n    this.setState({\n      width: this.refs.stageContainer.offsetWidth,\n      height: this.refs.stageContainer.offsetHeight\n    });\n  }\n\n  componentWillUnmount() {\n    let sideURL = this.refs.sideStage.toDataURL();\n    this.props.saveData(\"side\", sideURL);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.side !== this.props.side) {\n      let sideURL = this.refs.sideStage.toDataURL();\n      this.props.saveData(\"side\", sideURL);\n    }\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    const primary = this.props.drawing.primary;\n    const secondary = this.props.drawing.secondary;\n    const sideText = this.props.side.text;\n    const imageList = this.props.side.images;\n    let scale;\n    let sockWidth = 500;\n    let sockHeight = 694;\n\n    if (this.state.width < 500) {\n      sockWidth = this.state.width * 0.9;\n      scale = sockWidth * 500;\n      sockHeight = scale * sockHeight;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"primary-color\",\n      ref: \"stageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      ref: \"sideStage\",\n      width: this.state.width,\n      height: 750,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      onMouseDown: e => {\n        this.setState({\n          selectedShape: \"\"\n        });\n        this.props.selectText(\"\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(SockImage2, {\n      blue: primary.blue,\n      red: primary.red,\n      green: primary.green,\n      width: sockWidth,\n      height: sockHeight,\n      src: \"images/socksideview4.png\",\n      shadowBlur: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(SockImage2, {\n      blue: secondary.blue,\n      red: secondary.red,\n      green: secondary.green,\n      width: sockWidth,\n      height: sockHeight,\n      src: \"images/sideheeltoe.png\",\n      shadowBlur: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, sideText.map((data, id) => {\n      return React.createElement(TextElement, {\n        key: id,\n        rotation: data.rotation,\n        x: data.x,\n        y: data.y,\n        text: data.text,\n        id: data.id,\n        textProps: data,\n        isSelected: data.id === this.state.selectedShape,\n        onSelect: () => {\n          this.setState({\n            selectedShape: data.id\n          });\n          this.props.selectText(data.id);\n        },\n        onChange: newAttrs => {\n          const inputs = this.props.side.text.slice();\n          inputs[id] = newAttrs;\n          this.props.updateText(inputs);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }), imageList.map((data, id) => {\n      return React.createElement(ImageElement, {\n        key: id,\n        url: data.src,\n        shapeProps: data,\n        x: data.x,\n        y: data.y,\n        isSelected: data.id === this.state.selectedShape,\n        onSelect: () => {\n          this.setState({\n            selectedShape: data.id\n          });\n          this.props.selectImage(data.id);\n        },\n        onChange: newAttrs => {\n          const inputs = this.props.side.images.slice();\n          inputs[id] = newAttrs;\n          this.props.updateImages(inputs);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side\n});\n\nexport default connect(mapStateToProps, {\n  addText,\n  updateText,\n  selectText,\n  addImage,\n  updateImages,\n  selectImage,\n  saveData\n})(SidePreview);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js"],"names":["React","Component","render","Portal","Stage","Layer","Rect","Text","Image","Group","Konva","SockImage","SockImage2","Socks","TextElement","ImageElement","addText","updateText","selectText","addImage","updateImages","selectImage","saveData","connect","SidePreview","constructor","props","state","textItems","selectedShape","width","height","stageRef","createRef","componentDidMount","setState","refs","stageContainer","offsetWidth","offsetHeight","componentWillUnmount","sideURL","sideStage","toDataURL","componentDidUpdate","prevProps","side","primary","drawing","secondary","sideText","text","imageList","images","scale","sockWidth","sockHeight","e","blue","red","green","map","data","id","rotation","x","y","newAttrs","inputs","slice","src","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image, Group } from \"react-konva\";\nimport Konva from \"konva\";\n\nimport SockImage from \"./SockImage\";\n\nimport SockImage2 from \"./SockImage2\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\nimport ImageElement from \"./ImageElement\";\n\nimport {\n\taddText,\n\tupdateText,\n\tselectText,\n\taddImage,\n\tupdateImages,\n\tselectImage\n} from \"../../actions/sideActions\";\n\nimport { saveData } from \"../../actions/drawingActions\";\n\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttextItems: [],\n\t\t\tselectedShape: \"\",\n\t\t\twidth: null,\n\t\t\theight: null\n\t\t};\n\t\tlet stageRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\t//console.log(this.refs.stageContainer.offsetWidth);\n\t\tthis.setState({\n\t\t\twidth: this.refs.stageContainer.offsetWidth,\n\t\t\theight: this.refs.stageContainer.offsetHeight\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tlet sideURL = this.refs.sideStage.toDataURL();\n\t\tthis.props.saveData(\"side\", sideURL);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.side !== this.props.side) {\n\t\t\tlet sideURL = this.refs.sideStage.toDataURL();\n\t\t\tthis.props.saveData(\"side\", sideURL);\n\t\t}\n\t}\n\n\trender() {\n\t\t// Stage is a div container\n\t\t// Layer is actual canvas element (so you may have several canvases in the stage)\n\t\t// And then we have canvas shapes inside the Layer\n\t\tconst primary = this.props.drawing.primary;\n\t\tconst secondary = this.props.drawing.secondary;\n\t\tconst sideText = this.props.side.text;\n\t\tconst imageList = this.props.side.images;\n\t\tlet scale;\n\t\tlet sockWidth = 500;\n\t\tlet sockHeight = 694;\n\t\tif (this.state.width < 500) {\n\t\t\tsockWidth = this.state.width * 0.9;\n\t\t\tscale = sockWidth * 500;\n\t\t\tsockHeight = scale * sockHeight;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"primary-color\" ref=\"stageContainer\">\n\t\t\t\t\t<Stage\n\t\t\t\t\t\tref=\"sideStage\"\n\t\t\t\t\t\twidth={this.state.width}\n\t\t\t\t\t\theight={750}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Layer\n\t\t\t\t\t\t\tonMouseDown={e => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedShape: \"\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.selectText(\"\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SockImage2\n\t\t\t\t\t\t\t\tblue={primary.blue}\n\t\t\t\t\t\t\t\tred={primary.red}\n\t\t\t\t\t\t\t\tgreen={primary.green}\n\t\t\t\t\t\t\t\twidth={sockWidth}\n\t\t\t\t\t\t\t\theight={sockHeight}\n\t\t\t\t\t\t\t\tsrc=\"images/socksideview4.png\"\n\t\t\t\t\t\t\t\tshadowBlur={10}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SockImage2\n\t\t\t\t\t\t\t\tblue={secondary.blue}\n\t\t\t\t\t\t\t\tred={secondary.red}\n\t\t\t\t\t\t\t\tgreen={secondary.green}\n\t\t\t\t\t\t\t\twidth={sockWidth}\n\t\t\t\t\t\t\t\theight={sockHeight}\n\t\t\t\t\t\t\t\tsrc=\"images/sideheeltoe.png\"\n\t\t\t\t\t\t\t\tshadowBlur={0}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t{sideText.map((data, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TextElement\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\trotation={data.rotation}\n\t\t\t\t\t\t\t\t\t\tx={data.x}\n\t\t\t\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\t\t\t\ttext={data.text}\n\t\t\t\t\t\t\t\t\t\tid={data.id}\n\t\t\t\t\t\t\t\t\t\ttextProps={data}\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tdata.id === this.state.selectedShape\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tselectedShape: data.id\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selectText(data.id);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.props.side.text.slice();\n\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tthis.props.updateText(inputs);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{imageList.map((data, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ImageElement\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\turl={data.src}\n\t\t\t\t\t\t\t\t\t\tshapeProps={data}\n\t\t\t\t\t\t\t\t\t\tx={data.x}\n\t\t\t\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tdata.id === this.state.selectedShape\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tselectedShape: data.id\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selectImage(data.id);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.props.side.images.slice();\n\n\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tthis.props.updateImages(inputs);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{\n\t\taddText,\n\t\tupdateText,\n\t\tselectText,\n\t\taddImage,\n\t\tupdateImages,\n\t\tselectImage,\n\t\tsaveData\n\t}\n)(SidePreview);\n"]},"metadata":{},"sourceType":"module"}