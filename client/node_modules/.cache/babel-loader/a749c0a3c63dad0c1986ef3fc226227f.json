{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js\";\nimport React, { Component } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\nexport const ShapeElement = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange\n}) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n  React.useEffect(() => {\n    _initImage();\n\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n\n  _onDragEnd = event => {\n    const target = event.target;\n    const attrs = target.attrs;\n    this.setState({\n      isDragging: false,\n      x: attrs.x,\n      y: attrs.y\n    });\n  };\n\n  _initImage = () => {\n    const image = new window.Image();\n    image.crossOrigin = \"Anonymous\";\n    image.src = this.props.image;\n\n    image.onload = () => {\n      this.setState({\n        image\n      });\n    };\n  };\n\n  const url = this.state.url;\n  const image = this.state.image;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Image, Object.assign({\n    onClick: onSelect,\n    itemRef: this.shapeRef\n  }, shapeProps, {\n    x: 100,\n    y: 100,\n    draggable: true,\n    image: image,\n    width: 100,\n    height: 100,\n    onDragEnd: e => {\n      onChange({\n        //...shapeProps,\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    },\n    onTransformEnd: e => {\n      // transformer is changing scale\n      const node = shape.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // we will reset it back\n\n      node.scaleX(1);\n      node.scaleY(1);\n      this.props.onChange({\n        //...shapeProps,\n        x: node.x(),\n        y: node.y(),\n        width: node.width() * scaleX,\n        height: node.height() * scaleY\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), isSelected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ShapeElement.js"],"names":["React","Component","Stage","Layer","Text","Image","Transformer","ShapeElement","shapeProps","isSelected","onSelect","onChange","shapeRef","useRef","trRef","useEffect","_initImage","current","setNode","getLayer","batchDraw","_onDragEnd","event","target","attrs","setState","isDragging","x","y","image","window","crossOrigin","src","props","onload","url","state","e","node","shape","scaleX","scaleY","width","height"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { Stage, Layer, Text, Image, Transformer } from \"react-konva\";\n\nexport const ShapeElement = ({\n\tshapeProps,\n\tisSelected,\n\tonSelect,\n\tonChange\n}) => {\n\tconst shapeRef = React.useRef();\n\tconst trRef = React.useRef();\n\n\tReact.useEffect(() => {\n\t\t_initImage();\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current.setNode(shapeRef.current);\n\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\t_onDragEnd = event => {\n\t\tconst { target } = event;\n\t\tconst { attrs } = target;\n\t\tthis.setState({\n\t\t\tisDragging: false,\n\t\t\tx: attrs.x,\n\t\t\ty: attrs.y\n\t\t});\n\t};\n\n\t_initImage = () => {\n\t\tconst image = new window.Image();\n\t\timage.crossOrigin = \"Anonymous\";\n\t\timage.src = this.props.image;\n\t\timage.onload = () => {\n\t\t\tthis.setState({\n\t\t\t\timage\n\t\t\t});\n\t\t};\n\t};\n\tconst { url } = this.state;\n\tconst { image } = this.state;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Image\n\t\t\t\tonClick={onSelect}\n\t\t\t\titemRef={this.shapeRef}\n\t\t\t\t{...shapeProps}\n\t\t\t\tx={100}\n\t\t\t\ty={100}\n\t\t\t\tdraggable\n\t\t\t\timage={image}\n\t\t\t\twidth={100}\n\t\t\t\theight={100}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t//...shapeProps,\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y()\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\t// transformer is changing scale\n\t\t\t\t\tconst node = shape.current;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t// we will reset it back\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\tthis.props.onChange({\n\t\t\t\t\t\t//...shapeProps,\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{isSelected && <Transformer ref={trRef} />}\n\t\t</React.Fragment>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}