{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js\";\nimport React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\"; //const img = \"images/WhiteSocks.png\";\n\nclass SockImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoad = () => {\n      // after setState react-konva will update canvas and redraw the layer\n      // because \"image\" property is changed\n      this.setState({\n        image: this.image\n      }); // if you keep same image object during source updates\n      // you will have to update layer manually:\n      // this.imageNode.getLayer().batchDraw();\n    };\n\n    this.state = {\n      image: null,\n      color: null\n    };\n    this.imageRef = React.useRef();\n    this.image = useImage(\"images/WhiteSocks.png\", \"Test\");\n  }\n\n  componentDidMount() {\n    this.loadImage(); //this.applyCache();\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.src !== this.props.src) {\n      this.loadImage();\n    }\n  }\n\n  loadImage() {\n    // save to \"this\" to remove \"load\" handler on unmount\n    this.image = new window.Image();\n    this.image.src = \"images/WhiteSocks.png\";\n    console.log(this.image);\n    this.image.addEventListener(\"load\", this.handleLoad);\n  }\n\n  componentWillUnmount() {\n    this.image.removeEventListener(\"load\", this.handleLoad);\n  }\n\n  useEffect() {\n    if (this.image) {\n      this.imageRef.current.cache();\n      console.log(this.imageRef.current.getLayer());\n      this.imageRef.current.getLayer().batchDraw();\n    }\n  }\n\n  render() {\n    return React.createElement(Image, {\n      ref: this.imageRef,\n      width: this.props.x,\n      height: this.props.y,\n      image: this.image,\n      filters: [Konva.Filters.Blur],\n      blurRadius: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SockImage;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js"],"names":["React","Component","Konva","render","Stage","Layer","Rect","Image","useImage","SockImage","constructor","props","handleLoad","setState","image","state","color","imageRef","useRef","componentDidMount","loadImage","componentDidUpdate","oldProps","src","window","console","log","addEventListener","componentWillUnmount","removeEventListener","useEffect","current","cache","getLayer","batchDraw","x","y","Filters","Blur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBT,KAAK,CAACC,SAA9B,CAAwC;AACvCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAgCnBC,UAhCmB,GAgCN,MAAM;AAClB;AACA;AACA,WAAKC,QAAL,CAAc;AACbC,QAAAA,KAAK,EAAE,KAAKA;AADC,OAAd,EAHkB,CAMlB;AACA;AACA;AACA,KAzCkB;;AAElB,SAAKC,KAAL,GAAa;AACZD,MAAAA,KAAK,EAAE,IADK;AAEZE,MAAAA,KAAK,EAAE;AAFK,KAAb;AAKA,SAAKC,QAAL,GAAgBjB,KAAK,CAACkB,MAAN,EAAhB;AACA,SAAKJ,KAAL,GAAaN,QAAQ,CAAC,uBAAD,EAA0B,MAA1B,CAArB;AACA;;AAEDW,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,SAAL,GADmB,CAEnB;AACA;;AAEDC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AAC5B,QAAIA,QAAQ,CAACC,GAAT,KAAiB,KAAKZ,KAAL,CAAWY,GAAhC,EAAqC;AACpC,WAAKH,SAAL;AACA;AACD;;AACDA,EAAAA,SAAS,GAAG;AACX;AACA,SAAKN,KAAL,GAAa,IAAIU,MAAM,CAACjB,KAAX,EAAb;AACA,SAAKO,KAAL,CAAWS,GAAX,GAAiB,uBAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,SAAKA,KAAL,CAAWa,gBAAX,CAA4B,MAA5B,EAAoC,KAAKf,UAAzC;AACA;;AAEDgB,EAAAA,oBAAoB,GAAG;AACtB,SAAKd,KAAL,CAAWe,mBAAX,CAA+B,MAA/B,EAAuC,KAAKjB,UAA5C;AACA;;AAYDkB,EAAAA,SAAS,GAAG;AACX,QAAI,KAAKhB,KAAT,EAAgB;AACf,WAAKG,QAAL,CAAcc,OAAd,CAAsBC,KAAtB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,QAAL,CAAcc,OAAd,CAAsBE,QAAtB,EAAZ;AACA,WAAKhB,QAAL,CAAcc,OAAd,CAAsBE,QAAtB,GAAiCC,SAAjC;AACA;AACD;;AAED/B,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AACC,MAAA,GAAG,EAAE,KAAKc,QADX;AAEC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWwB,CAFnB;AAGC,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyB,CAHpB;AAIC,MAAA,KAAK,EAAE,KAAKtB,KAJb;AAKC,MAAA,OAAO,EAAE,CAACZ,KAAK,CAACmC,OAAN,CAAcC,IAAf,CALV;AAMC,MAAA,UAAU,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAUA;;AA/DsC;;AAkExC,eAAe7B,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\";\n\n//const img = \"images/WhiteSocks.png\";\n\nclass SockImage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\timage: null,\n\t\t\tcolor: null\n\t\t};\n\n\t\tthis.imageRef = React.useRef();\n\t\tthis.image = useImage(\"images/WhiteSocks.png\", \"Test\");\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadImage();\n\t\t//this.applyCache();\n\t}\n\n\tcomponentDidUpdate(oldProps) {\n\t\tif (oldProps.src !== this.props.src) {\n\t\t\tthis.loadImage();\n\t\t}\n\t}\n\tloadImage() {\n\t\t// save to \"this\" to remove \"load\" handler on unmount\n\t\tthis.image = new window.Image();\n\t\tthis.image.src = \"images/WhiteSocks.png\";\n\t\tconsole.log(this.image);\n\t\tthis.image.addEventListener(\"load\", this.handleLoad);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.image.removeEventListener(\"load\", this.handleLoad);\n\t}\n\thandleLoad = () => {\n\t\t// after setState react-konva will update canvas and redraw the layer\n\t\t// because \"image\" property is changed\n\t\tthis.setState({\n\t\t\timage: this.image\n\t\t});\n\t\t// if you keep same image object during source updates\n\t\t// you will have to update layer manually:\n\t\t// this.imageNode.getLayer().batchDraw();\n\t};\n\n\tuseEffect() {\n\t\tif (this.image) {\n\t\t\tthis.imageRef.current.cache();\n\t\t\tconsole.log(this.imageRef.current.getLayer());\n\t\t\tthis.imageRef.current.getLayer().batchDraw();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Image\n\t\t\t\tref={this.imageRef}\n\t\t\t\twidth={this.props.x}\n\t\t\t\theight={this.props.y}\n\t\t\t\timage={this.image}\n\t\t\t\tfilters={[Konva.Filters.Blur]}\n\t\t\t\tblurRadius={30}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default SockImage;\n"]},"metadata":{},"sourceType":"module"}