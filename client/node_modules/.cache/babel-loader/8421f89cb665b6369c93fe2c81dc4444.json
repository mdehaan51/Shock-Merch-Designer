{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/NewGridLayout.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ObjectList from \"./ObjectList.js\";\nimport GridObjectItem from \"./gridObjectItem.js\";\nimport ComponentCounter from \"./ComponentCounter.js\";\nimport Modal from \"./Modal.js\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { toggleModal } from \"../actions/gridActions\";\nimport html2canvas from \"html2canvas\";\nimport Navbar from \"./NavBar.js\";\nimport \"../styles/App.css\";\n\nclass GridLayout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      draggedItem: [],\n      addedComponents: [],\n      counter: 0,\n      componentX: 0,\n      componentY: 0,\n      movingComponentId: \"\",\n      gridWidth: 0,\n      gridHeight: 0,\n      scale: 0,\n      activeItem: 0,\n      gridSize: \"28px 28px\",\n      counterList: \"\",\n      gridX: \"\",\n      gridY: \"\",\n      imgData: \"\"\n    };\n\n    this.findGridSize = () => {\n      let screenWidth = this.refs[\"gridContainer\"].offsetWidth;\n      let gridWidth = Math.round(screenWidth * 0.8 / 100) * 100;\n      let screenHeight = this.refs[\"gridContainer\"].offsetWidth;\n      let gridHeight = Math.round(screenHeight * 0.8 / 100) * 100;\n      let scale = gridWidth / this.props.grid.width;\n      this.setState({\n        gridWidth: gridWidth,\n        gridHeight: gridHeight,\n        scale: scale\n      });\n    };\n\n    this.gridIsSquare = (width, height) => {\n      let sideLength;\n      let scale;\n\n      if (width > height) {\n        sideLength = Math.round(height * 0.8 / 100) * 100;\n      } else {\n        sideLength = Math.round(width * 0.8 / 100) * 100;\n      }\n\n      scale = sideLength / this.props.grid.width;\n      this.setState({\n        gridWidth: sideLength,\n        gridHeight: sideLength,\n        scale: scale\n      }, this.setGridSize(sideLength, this.props.grid.width));\n    };\n\n    this.widthIsLarger = (width, height) => {\n      let gridWidth = Math.round(width * 0.8 / 100) * 100;\n      let scale = this.props.grid.width / this.props.grid.height;\n      let gridHeight = gridWidth / scale;\n      this.setState({\n        gridWidth: gridWidth,\n        gridHeight: gridHeight,\n        scale: scale\n      }, this.setGridSize(gridWidth, this.props.grid.width));\n    };\n\n    this.heightIsLarger = (width, height) => {\n      let gridHeight = Math.round(height * 0.8 / 100) * 100;\n      let scale = this.props.grid.height / this.props.grid.width;\n      let gridWidth = gridHeight / scale;\n      this.setState({\n        gridWidth: gridWidth,\n        gridHeight: gridHeight,\n        scale: scale\n      }, this.setGridSize(gridHeight, this.props.grid.height));\n    };\n\n    this.setSize = () => {\n      const dimensions = this.refs[\"gridContainer\"].getBoundingClientRect();\n      let screenWidth = dimensions.width;\n      let screenHeight = dimensions.height;\n\n      if (this.props.grid.width === this.props.grid.height) {\n        this.gridIsSquare(screenWidth, screenHeight);\n      } else if (this.props.grid.width > this.props.grid.height) {\n        this.widthIsLarger(screenWidth, screenHeight);\n      } else if (this.props.grid.width < this.props.grid.height) {\n        this.heightIsLarger(screenWidth, screenHeight);\n      }\n    };\n\n    this.onDragOver = ev => {\n      ev.stopPropagation();\n      ev.preventDefault();\n    };\n\n    this.onDrop = ev => {\n      ev.preventDefault();\n      let draggedItem = this.state.draggedItem;\n      let gridCoords = ReactDOM.findDOMNode(this.refs[\"gridBox\"]).getBoundingClientRect();\n      this.getItemCoords(gridCoords.x, gridCoords.y, ev.clientX, ev.clientY, draggedItem.width, draggedItem.length);\n\n      if (draggedItem.length === 0) {\n        return; //preventing 'invisible' elements being added\n      } else {\n        this.setState({\n          counter: this.state.counter + 1,\n          draggedItem: [],\n          addedComponents: [...this.state.addedComponents, draggedItem]\n        });\n      }\n    };\n\n    this.getItemCoords = (gridX, gridY, itemX, itemY, itemWidth, itemHeight) => {\n      this.setState({\n        gridX: gridX,\n        gridY: gridY,\n        componentX: itemX - gridX + parseInt(itemWidth),\n        componentY: itemY - gridY + parseInt(itemHeight)\n      });\n    };\n\n    this.itemIsDragging = (id, name, img, width, length) => {\n      let pieceId = this.state.counter;\n      let rotation = 0;\n      this.setState({\n        draggedItem: {\n          pieceId,\n          name,\n          img,\n          length,\n          width,\n          rotation\n        }\n      });\n    };\n\n    this.itemIsDropped = (evt, id, img, width, length) => {};\n\n    this.saveGrid = () => {\n      localStorage.setItem(\"gridElements\", grid.innerHTML);\n    };\n\n    this.saveItems = (id, img, width, length, rotation) => {\n      this.setState({\n        addedComponents: [...this.state.components, [id, img, length, width, rotation]]\n      });\n    };\n\n    this.onDragStart = (ev, id) => {\n      this.setState({\n        movingComponentId: id\n      });\n    };\n\n    this.deleteComponent = id => {\n      let toBeDeleted = id;\n      let filteredItems = this.state.addedComponents.filter(function (e) {\n        return e.pieceId !== toBeDeleted;\n      });\n      this.setState({\n        addedComponents: filteredItems\n      });\n    };\n\n    this.rotateComponent = () => {\n      let toBeRotated = this.state.movingComponentId;\n      let allComponents = this.state.addedComponents;\n      let currentRotation = allComponents.find(e => {\n        return e.pieceId === toBeRotated;\n      });\n      let newRotation = currentRotation.rotation < 360 ? currentRotation.rotation + 90 : 0;\n      Object.assign(allComponents.find(e => e.pieceId === toBeRotated), {\n        rotation: newRotation\n      });\n    };\n\n    this.removeItem = name => {};\n\n    this.saveActiveItem = id => {\n      this.setState({\n        activeItem: id\n      });\n    };\n\n    this.setGridSize = (gridSize, inputSize) => {\n      let backgroundGridSize = gridSize / (inputSize / 10);\n      this.setState({\n        gridSize: \"\".concat(backgroundGridSize, \"px \").concat(backgroundGridSize, \"px\")\n      });\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.history.push(\"/\");\n      this.props.logoutUser(this.props.history);\n    };\n\n    this.hideModal = e => {\n      e.preventDefault();\n      const modal = {\n        active: false,\n        type: \"\",\n        title: \"\"\n      };\n      this.props.toggleModal(modal);\n    };\n\n    this.saveList = items => {\n      this.setState({\n        counterList: items\n      });\n    };\n\n    this.captureImage = () => {\n      let element = document.getElementById(\"capture\");\n      html2canvas(element).then(canvas => {\n        let imgData = canvas.toDataURL(\"image/jpeg\");\n        this.setState({\n          imgData: imgData\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    //this.setGridSize();\n    this.findGridSize();\n    this.setSize();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.grid.width !== this.props.grid.width || prevProps.grid.height !== this.props.grid.height) {\n      this.setSize(); //this.setGridSize();\n    }\n  }\n\n  render() {\n    let size = {\n      width: this.state.gridWidth,\n      height: this.state.gridHeight,\n      backgroundSize: this.state.gridSize\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      setSize: this.setSize,\n      request: this.showRequestModal,\n      help: this.showHelpModal,\n      captureImage: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      show: this.props.grid.modal.active,\n      handleClose: this.hideModal,\n      title: this.props.grid.modal.title,\n      type: this.props.grid.modal.type,\n      components: this.state.counterList,\n      captureImage: this.state.imgData,\n      name: this.props.auth.user.name,\n      email: this.props.auth.user.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"builder-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      className: \"container-background\",\n      src: \"images/background.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      onClick: this.onLogoutClick,\n      className: \"logout-button \",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(ObjectList, {\n      saveLocation: this.saveLocation,\n      itemIsDragging: this.itemIsDragging,\n      saveItems: this.saveItems,\n      itemIsDropped: this.itemIsDropped,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"capture\",\n      className: \"grid-container\",\n      ref: \"gridContainer\" //onDrop={e => this.onDrop(e, \"complete\")}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"width-distance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, this.props.grid.width, \" ft\"), React.createElement(\"div\", {\n      className: \"grid-box\",\n      ref: \"gridBox\",\n      style: size,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"height-distance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, this.props.grid.height, \" ft\"), React.createElement(\"div\", {\n      className: \"grid\",\n      style: size,\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => this.onDrop(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, this.state.addedComponents.map((items, id) => {\n      return React.createElement(GridObjectItem, {\n        key: items.pieceId,\n        pieceId: items.pieceId,\n        img: items.img,\n        width: items.width,\n        height: items.length,\n        onDragStart: this.onDragStart,\n        gridWidth: this.state.gridWidth,\n        gridHeight: this.state.gridHeight //saveLocation={this.saveLocation}\n        ,\n        xLocation: this.state.componentX,\n        yLocation: this.state.componentY,\n        rotate: items.rotation,\n        scale: this.state.scale,\n        saveActiveItem: this.saveActiveItem,\n        currentlyActive: this.state.activeItem,\n        deleteComponent: this.deleteComponent,\n        gridX: this.state.gridX,\n        gridY: this.state.gridY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      });\n    }))), React.createElement(\"div\", {\n      className: \"grid-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Each Square is 10ft x 10ft\")), React.createElement(ComponentCounter, {\n      addedComponents: this.state.addedComponents,\n      saveList: this.saveList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  grid: state.grid\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  toggleModal\n})(GridLayout);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/NewGridLayout.js"],"names":["React","Component","ReactDOM","ObjectList","GridObjectItem","ComponentCounter","Modal","connect","logoutUser","toggleModal","html2canvas","Navbar","GridLayout","state","draggedItem","addedComponents","counter","componentX","componentY","movingComponentId","gridWidth","gridHeight","scale","activeItem","gridSize","counterList","gridX","gridY","imgData","findGridSize","screenWidth","refs","offsetWidth","Math","round","screenHeight","props","grid","width","setState","gridIsSquare","height","sideLength","setGridSize","widthIsLarger","heightIsLarger","setSize","dimensions","getBoundingClientRect","onDragOver","ev","stopPropagation","preventDefault","onDrop","gridCoords","findDOMNode","getItemCoords","x","y","clientX","clientY","length","itemX","itemY","itemWidth","itemHeight","parseInt","itemIsDragging","id","name","img","pieceId","rotation","itemIsDropped","evt","saveGrid","localStorage","setItem","innerHTML","saveItems","components","onDragStart","deleteComponent","toBeDeleted","filteredItems","filter","e","rotateComponent","toBeRotated","allComponents","currentRotation","find","newRotation","Object","assign","removeItem","saveActiveItem","inputSize","backgroundGridSize","onLogoutClick","history","push","hideModal","modal","active","type","title","saveList","items","captureImage","element","document","getElementById","then","canvas","toDataURL","componentDidMount","componentDidUpdate","prevProps","render","size","backgroundSize","showRequestModal","showHelpModal","auth","user","email","saveLocation","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ObjectList from \"./ObjectList.js\";\nimport GridObjectItem from \"./gridObjectItem.js\";\nimport ComponentCounter from \"./ComponentCounter.js\";\nimport Modal from \"./Modal.js\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { toggleModal } from \"../actions/gridActions\";\nimport html2canvas from \"html2canvas\";\nimport Navbar from \"./NavBar.js\";\nimport \"../styles/App.css\";\n\nclass GridLayout extends Component {\n\tstate = {\n\t\tdraggedItem: [],\n\t\taddedComponents: [],\n\t\tcounter: 0,\n\t\tcomponentX: 0,\n\t\tcomponentY: 0,\n\t\tmovingComponentId: \"\",\n\t\tgridWidth: 0,\n\t\tgridHeight: 0,\n\t\tscale: 0,\n\t\tactiveItem: 0,\n\t\tgridSize: \"28px 28px\",\n\t\tcounterList: \"\",\n\t\tgridX: \"\",\n\t\tgridY: \"\",\n\t\timgData: \"\"\n\t};\n\n\tcomponentDidMount() {\n\t\t//this.setGridSize();\n\t\tthis.findGridSize();\n\t\tthis.setSize();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (\n\t\t\tprevProps.grid.width !== this.props.grid.width ||\n\t\t\tprevProps.grid.height !== this.props.grid.height\n\t\t) {\n\t\t\tthis.setSize();\n\t\t\t//this.setGridSize();\n\t\t}\n\t}\n\n\tfindGridSize = () => {\n\t\tlet screenWidth = this.refs[\"gridContainer\"].offsetWidth;\n\t\tlet gridWidth = Math.round((screenWidth * 0.8) / 100) * 100;\n\t\tlet screenHeight = this.refs[\"gridContainer\"].offsetWidth;\n\t\tlet gridHeight = Math.round((screenHeight * 0.8) / 100) * 100;\n\t\tlet scale = gridWidth / this.props.grid.width;\n\t\tthis.setState({\n\t\t\tgridWidth: gridWidth,\n\t\t\tgridHeight: gridHeight,\n\t\t\tscale: scale\n\t\t});\n\t};\n\n\tgridIsSquare = (width, height) => {\n\t\tlet sideLength;\n\t\tlet scale;\n\t\tif (width > height) {\n\t\t\tsideLength = Math.round((height * 0.8) / 100) * 100;\n\t\t} else {\n\t\t\tsideLength = Math.round((width * 0.8) / 100) * 100;\n\t\t}\n\t\tscale = sideLength / this.props.grid.width;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tgridWidth: sideLength,\n\t\t\t\tgridHeight: sideLength,\n\t\t\t\tscale: scale\n\t\t\t},\n\t\t\tthis.setGridSize(sideLength, this.props.grid.width)\n\t\t);\n\t};\n\n\twidthIsLarger = (width, height) => {\n\t\tlet gridWidth = Math.round((width * 0.8) / 100) * 100;\n\t\tlet scale = this.props.grid.width / this.props.grid.height;\n\t\tlet gridHeight = gridWidth / scale;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tgridWidth: gridWidth,\n\t\t\t\tgridHeight: gridHeight,\n\t\t\t\tscale: scale\n\t\t\t},\n\t\t\tthis.setGridSize(gridWidth, this.props.grid.width)\n\t\t);\n\t};\n\n\theightIsLarger = (width, height) => {\n\t\tlet gridHeight = Math.round((height * 0.8) / 100) * 100;\n\t\tlet scale = this.props.grid.height / this.props.grid.width;\n\t\tlet gridWidth = gridHeight / scale;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tgridWidth: gridWidth,\n\t\t\t\tgridHeight: gridHeight,\n\t\t\t\tscale: scale\n\t\t\t},\n\t\t\tthis.setGridSize(gridHeight, this.props.grid.height)\n\t\t);\n\t};\n\n\tsetSize = () => {\n\t\tconst dimensions = this.refs[\"gridContainer\"].getBoundingClientRect();\n\t\tlet screenWidth = dimensions.width;\n\t\tlet screenHeight = dimensions.height;\n\t\tif (this.props.grid.width === this.props.grid.height) {\n\t\t\tthis.gridIsSquare(screenWidth, screenHeight);\n\t\t} else if (this.props.grid.width > this.props.grid.height) {\n\t\t\tthis.widthIsLarger(screenWidth, screenHeight);\n\t\t} else if (this.props.grid.width < this.props.grid.height) {\n\t\t\tthis.heightIsLarger(screenWidth, screenHeight);\n\t\t}\n\t};\n\n\tonDragOver = ev => {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t};\n\n\tonDrop = ev => {\n\t\tev.preventDefault();\n\t\tlet draggedItem = this.state.draggedItem;\n\t\tlet gridCoords = ReactDOM.findDOMNode(\n\t\t\tthis.refs[\"gridBox\"]\n\t\t).getBoundingClientRect();\n\t\tthis.getItemCoords(\n\t\t\tgridCoords.x,\n\t\t\tgridCoords.y,\n\t\t\tev.clientX,\n\t\t\tev.clientY,\n\t\t\tdraggedItem.width,\n\t\t\tdraggedItem.length\n\t\t);\n\t\tif (draggedItem.length === 0) {\n\t\t\treturn; //preventing 'invisible' elements being added\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tcounter: this.state.counter + 1,\n\t\t\t\tdraggedItem: [],\n\t\t\t\taddedComponents: [...this.state.addedComponents, draggedItem]\n\t\t\t});\n\t\t}\n\t};\n\n\tgetItemCoords = (gridX, gridY, itemX, itemY, itemWidth, itemHeight) => {\n\t\tthis.setState({\n\t\t\tgridX: gridX,\n\t\t\tgridY: gridY,\n\t\t\tcomponentX: itemX - gridX + parseInt(itemWidth),\n\t\t\tcomponentY: itemY - gridY + parseInt(itemHeight)\n\t\t});\n\t};\n\n\titemIsDragging = (id, name, img, width, length) => {\n\t\tlet pieceId = this.state.counter;\n\t\tlet rotation = 0;\n\t\tthis.setState({\n\t\t\tdraggedItem: { pieceId, name, img, length, width, rotation }\n\t\t});\n\t};\n\titemIsDropped = (evt, id, img, width, length) => {};\n\n\tsaveGrid = () => {\n\t\tlocalStorage.setItem(\"gridElements\", grid.innerHTML);\n\t};\n\n\tsaveItems = (id, img, width, length, rotation) => {\n\t\tthis.setState({\n\t\t\taddedComponents: [\n\t\t\t\t...this.state.components,\n\t\t\t\t[id, img, length, width, rotation]\n\t\t\t]\n\t\t});\n\t};\n\tonDragStart = (ev, id) => {\n\t\tthis.setState({\n\t\t\tmovingComponentId: id\n\t\t});\n\t};\n\tdeleteComponent = id => {\n\t\tlet toBeDeleted = id;\n\t\tlet filteredItems = this.state.addedComponents.filter(function(e) {\n\t\t\treturn e.pieceId !== toBeDeleted;\n\t\t});\n\t\tthis.setState({\n\t\t\taddedComponents: filteredItems\n\t\t});\n\t};\n\n\trotateComponent = () => {\n\t\tlet toBeRotated = this.state.movingComponentId;\n\t\tlet allComponents = this.state.addedComponents;\n\t\tlet currentRotation = allComponents.find(e => {\n\t\t\treturn e.pieceId === toBeRotated;\n\t\t});\n\t\tlet newRotation =\n\t\t\tcurrentRotation.rotation < 360 ? currentRotation.rotation + 90 : 0;\n\t\tObject.assign(allComponents.find(e => e.pieceId === toBeRotated), {\n\t\t\trotation: newRotation\n\t\t});\n\t};\n\n\tremoveItem = name => {};\n\n\tsaveActiveItem = id => {\n\t\tthis.setState({\n\t\t\tactiveItem: id\n\t\t});\n\t};\n\tsetGridSize = (gridSize, inputSize) => {\n\t\tlet backgroundGridSize = gridSize / (inputSize / 10);\n\t\tthis.setState({\n\t\t\tgridSize: `${backgroundGridSize}px ${backgroundGridSize}px`\n\t\t});\n\t};\n\tonLogoutClick = e => {\n\t\te.preventDefault();\n\t\tthis.props.history.push(\"/\");\n\t\tthis.props.logoutUser(this.props.history);\n\t};\n\n\thideModal = e => {\n\t\te.preventDefault();\n\t\tconst modal = {\n\t\t\tactive: false,\n\t\t\ttype: \"\",\n\t\t\ttitle: \"\"\n\t\t};\n\t\tthis.props.toggleModal(modal);\n\t};\n\tsaveList = items => {\n\t\tthis.setState({\n\t\t\tcounterList: items\n\t\t});\n\t};\n\n\tcaptureImage = () => {\n\t\tlet element = document.getElementById(\"capture\");\n\t\thtml2canvas(element).then(canvas => {\n\t\t\tlet imgData = canvas.toDataURL(\"image/jpeg\");\n\t\t\tthis.setState({\n\t\t\t\timgData: imgData\n\t\t\t});\n\t\t});\n\t};\n\n\trender() {\n\t\tlet size = {\n\t\t\twidth: this.state.gridWidth,\n\t\t\theight: this.state.gridHeight,\n\t\t\tbackgroundSize: this.state.gridSize\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar\n\t\t\t\t\tsetSize={this.setSize}\n\t\t\t\t\trequest={this.showRequestModal}\n\t\t\t\t\thelp={this.showHelpModal}\n\t\t\t\t\tcaptureImage={this.captureImage}\n\t\t\t\t/>\n\t\t\t\t<Modal\n\t\t\t\t\tshow={this.props.grid.modal.active}\n\t\t\t\t\thandleClose={this.hideModal}\n\t\t\t\t\ttitle={this.props.grid.modal.title}\n\t\t\t\t\ttype={this.props.grid.modal.type}\n\t\t\t\t\tcomponents={this.state.counterList}\n\t\t\t\t\tcaptureImage={this.state.imgData}\n\t\t\t\t\tname={this.props.auth.user.name}\n\t\t\t\t\temail={this.props.auth.user.email}\n\t\t\t\t/>\n\t\t\t\t<div className=\"builder-container\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"container-background\"\n\t\t\t\t\t\tsrc=\"images/background.jpg\"\n\t\t\t\t\t/>\n\t\t\t\t\t<a\n\t\t\t\t\t\tonClick={this.onLogoutClick}\n\t\t\t\t\t\tclassName=\"logout-button \"\n\t\t\t\t\t\thref=\"\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLogout\n\t\t\t\t\t</a>\n\t\t\t\t\t<ObjectList\n\t\t\t\t\t\tsaveLocation={this.saveLocation}\n\t\t\t\t\t\titemIsDragging={this.itemIsDragging}\n\t\t\t\t\t\tsaveItems={this.saveItems}\n\t\t\t\t\t\titemIsDropped={this.itemIsDropped}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tid=\"capture\"\n\t\t\t\t\t\tclassName=\"grid-container\"\n\t\t\t\t\t\tref=\"gridContainer\"\n\t\t\t\t\t\t//onDrop={e => this.onDrop(e, \"complete\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"width-distance\">\n\t\t\t\t\t\t\t{this.props.grid.width} ft\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"grid-box\" ref=\"gridBox\" style={size}>\n\t\t\t\t\t\t\t<div className=\"height-distance\">\n\t\t\t\t\t\t\t\t{this.props.grid.height} ft\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"grid\"\n\t\t\t\t\t\t\t\tstyle={size}\n\t\t\t\t\t\t\t\tonDragOver={e => this.onDragOver(e)}\n\t\t\t\t\t\t\t\tonDrop={e => this.onDrop(e)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.addedComponents.map((items, id) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<GridObjectItem\n\t\t\t\t\t\t\t\t\t\t\tkey={items.pieceId}\n\t\t\t\t\t\t\t\t\t\t\tpieceId={items.pieceId}\n\t\t\t\t\t\t\t\t\t\t\timg={items.img}\n\t\t\t\t\t\t\t\t\t\t\twidth={items.width}\n\t\t\t\t\t\t\t\t\t\t\theight={items.length}\n\t\t\t\t\t\t\t\t\t\t\tonDragStart={this.onDragStart}\n\t\t\t\t\t\t\t\t\t\t\tgridWidth={this.state.gridWidth}\n\t\t\t\t\t\t\t\t\t\t\tgridHeight={this.state.gridHeight}\n\t\t\t\t\t\t\t\t\t\t\t//saveLocation={this.saveLocation}\n\t\t\t\t\t\t\t\t\t\t\txLocation={this.state.componentX}\n\t\t\t\t\t\t\t\t\t\t\tyLocation={this.state.componentY}\n\t\t\t\t\t\t\t\t\t\t\trotate={items.rotation}\n\t\t\t\t\t\t\t\t\t\t\tscale={this.state.scale}\n\t\t\t\t\t\t\t\t\t\t\tsaveActiveItem={this.saveActiveItem}\n\t\t\t\t\t\t\t\t\t\t\tcurrentlyActive={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.activeItem\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdeleteComponent={\n\t\t\t\t\t\t\t\t\t\t\t\tthis.deleteComponent\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tgridX={this.state.gridX}\n\t\t\t\t\t\t\t\t\t\t\tgridY={this.state.gridY}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"grid-note\">\n\t\t\t\t\t\t\tEach Square is 10ft x 10ft\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ComponentCounter\n\t\t\t\t\t\taddedComponents={this.state.addedComponents}\n\t\t\t\t\t\tsaveList={this.saveList}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tgrid: state.grid\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ logoutUser, toggleModal }\n)(GridLayout);\n"]},"metadata":{},"sourceType":"module"}