{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/App.css\";\nimport \"./styles/Auth.css\";\nimport \"./styles/Admin.css\";\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\"; //import DesignLayout from \"./components/DesignLayout.js\";\n\nimport DrawingDashboard from \"./components/DrawingComponents/DrawingDashboard\";\nimport RequestQuote from \"./components/DrawingComponents/RequestQuote\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Admin from \"./components/admin/Admin\";\nimport AdminDashboard from \"./components/admin/AdminDashboard\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport PasswordReset from \"./components/auth/PasswordReset\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport AdminRoute from \"./components/private-route/AdminRoute\"; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"/\";\n  }\n}\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-154396647-1');\n  ReactGA.pageview('/');\n  ReactGA.pageview('/register');\n  ReactGA.pageview('/admin-dashboard');\n  ReactGA.pageview('/dashboard');\n  ReactGA.pageview('/request-quote');\n}\n\ninitializeReactGA();\n\nclass App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/forgot\",\n      component: ForgotPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/reset/:token\",\n      component: PasswordReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(AdminRoute, {\n      exact: true,\n      path: \"/admin-dashboard\",\n      component: AdminDashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/dashboard\",\n      component: DrawingDashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/request-quote\",\n      component: RequestQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/App.js"],"names":["React","Component","ReactGA","BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","setCurrentUser","logoutUser","DrawingDashboard","RequestQuote","Register","Login","Admin","AdminDashboard","ForgotPassword","PasswordReset","Provider","store","PrivateRoute","AdminRoute","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","initializeReactGA","initialize","pageview","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/App.css\";\nimport \"./styles/Auth.css\";\nimport \"./styles/Admin.css\";\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\n//import DesignLayout from \"./components/DesignLayout.js\";\nimport DrawingDashboard from \"./components/DrawingComponents/DrawingDashboard\";\nimport RequestQuote from \"./components/DrawingComponents/RequestQuote\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Admin from \"./components/admin/Admin\";\nimport AdminDashboard from \"./components/admin/AdminDashboard\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport PasswordReset from \"./components/auth/PasswordReset\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport AdminRoute from \"./components/private-route/AdminRoute\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"/\";\n  }\n}\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-154396647-1');\n  ReactGA.pageview('/');\n  ReactGA.pageview('/register');\n  ReactGA.pageview('/admin-dashboard');\n  ReactGA.pageview('/dashboard');\n  ReactGA.pageview('/request-quote');\n}\n\ninitializeReactGA()\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/admin\" component={Admin} />\n            <Route exact path=\"/forgot\" component={ForgotPassword} />\n            <Route exact path=\"/reset/:token\" component={PasswordReset} />\n\n            <Switch>\n              <AdminRoute\n                exact\n                path=\"/admin-dashboard\"\n                component={AdminDashboard}\n              />\n              <PrivateRoute\n                exact\n                path=\"/dashboard\"\n                component={DrawingDashboard}\n              />\n              <PrivateRoute\n                exact\n                path=\"/request-quote\"\n                component={RequestQuote}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}