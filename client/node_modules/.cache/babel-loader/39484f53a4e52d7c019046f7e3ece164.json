{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FontPicker from \"font-picker-react\";\nimport ItemDetailSelector from \"./ItemDetailSelector\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSelectedText = id => {\n      let selectedItem;\n\n      switch (this.props.view) {\n        case \"side\":\n          selectedItem = this.props.side.text.find(item => item.id === id);\n          break;\n\n        case \"bottom\":\n          selectedItem = this.props.bottom.text.find(item => item.id === id);\n          break;\n\n        case \"top\":\n          selectedItem = this.props.top.text.find(item => item.id === id);\n          break;\n\n        default:\n          console.log(\"not yet\");\n      }\n\n      this.setState({\n        selectedText: selectedItem,\n        text: selectedItem.text,\n        style: selectedItem.style\n      });\n    };\n\n    this.addFont = () => {\n      this.setState({\n        fontAdded: true\n      });\n    };\n\n    this.addText = () => {\n      this.props.addText(\"Insert Text\", this.state.style);\n    };\n\n    this.deleteText = () => {\n      let id = this.state.selectedText.id;\n      let objects;\n\n      switch (this.props.view) {\n        case \"side\":\n          objects = this.props.side.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        case \"bottom\":\n          objects = this.props.bottom.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        case \"top\":\n          objects = this.props.top.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        default:\n          console.log(\"not yet\");\n      }\n\n      console.log(objects);\n      this.props.updateText(objects);\n    };\n\n    this.updateState = (key, value) => {\n      this.setState({\n        [key]: value\n      }, () => this.updateText());\n    };\n\n    this.findTextDetails = () => {};\n\n    this.updateText = e => {\n      let style = this.state.style;\n      let text = this.state.text;\n      let id = this.state.selectedText.id;\n      let data = this.props.data;\n      let index = data.findIndex(obj => obj.id === id);\n      let item = data.splice(index, 1);\n      console.log(item);\n      item[0] = _objectSpread({}, item[0], {\n        text: text,\n        style\n      });\n      data.push(item[0]);\n      this.props.updateText(data);\n    };\n\n    this.state = {\n      text: \"Insert Text\",\n      fontAdded: false,\n      style: {\n        fontFamily: \"Anton\",\n        fontSize: 20,\n        fill: \"#ffffff\",\n        stroke: \"\"\n      },\n      activated: false,\n      selectedText: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedText !== this.props.selectedText) {\n      try {\n        console.log(this.props.selectedText[0].id);\n        let id = this.props.selectedText[0].id;\n        this.getSelectedText(id);\n      } catch (error) {\n        return;\n      }\n    }\n  }\n\n  render() {\n    //let selectedText = this.props.selectedText[0];\n    //if (!selectedText) return null;\n    //console.log(selectedText);\n    console.log(this.state.selectedText);\n    let selectedText = this.state.selectedText;\n    /*selectedText\n    \t? this.setState({\n    \t\t\tactivated: true\n    \t  })\n    \t: this.setState({\n    \t\t\tactivated: false\n    \t  });*/\n\n    return React.createElement(\"div\", {\n      className: \"design-details-container text-editor \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-text-button button hoverable\",\n      onClick: this.addText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Add New Text\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Or Select Existing Text to Edit\")), Object.keys(selectedText).length === 0 ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text input col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Enter Your Text Here\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-editor-input apply-font\",\n      value: this.state.text,\n      onChange: e => this.setState({\n        text: e.target.value\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-picker col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Choose Your Font\"), React.createElement(FontPicker, {\n      apiKey: \"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\",\n      activeFontFamily: this.state.style.fontFamily,\n      onChange: nextFont => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontFamily: nextFont.family\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Choose Your Text Color\"), React.createElement(ChromePicker, {\n      color: this.state.selectedText.style.fill,\n      onChangeComplete: color => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fill: color.hex\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Choose Your Text Outline Color\"), React.createElement(ChromePicker, {\n      color: this.state.selectedText.style.stroke,\n      onChangeComplete: color => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          stroke: color.hex\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: e => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          stroke: \"\"\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Clear Outline\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Font Size\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"text-editor-input\",\n      value: this.state.style.fontSize,\n      onChange: e => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontSize: e.target.value\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete-text-button button hoverable\",\n      onClick: this.deleteText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Delete Text\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side,\n  bottom: state.bottom,\n  top: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js"],"names":["React","Component","ReactDOM","FontPicker","ItemDetailSelector","ChromePicker","connect","TextEditor","constructor","props","getSelectedText","id","selectedItem","view","side","text","find","item","bottom","top","console","log","setState","selectedText","style","addFont","fontAdded","addText","state","deleteText","objects","filter","obj","updateText","updateState","key","value","findTextDetails","e","data","index","findIndex","splice","push","fontFamily","fontSize","fill","stroke","activated","componentDidUpdate","prevProps","error","render","Object","keys","length","target","nextFont","family","color","hex","cursor","mapStateToProps","drawing"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SA4BnBC,eA5BmB,GA4BDC,EAAE,IAAI;AACvB,UAAIC,YAAJ;;AACA,cAAQ,KAAKH,KAAL,CAAWI,IAAnB;AACC,aAAK,MAAL;AACCD,UAAAA,YAAY,GAAG,KAAKH,KAAL,CAAWK,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,CACdC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EADN,CAAf;AAGA;;AACD,aAAK,QAAL;AACCC,UAAAA,YAAY,GAAG,KAAKH,KAAL,CAAWS,MAAX,CAAkBH,IAAlB,CAAuBC,IAAvB,CACdC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EADN,CAAf;AAGA;;AACD,aAAK,KAAL;AACCC,UAAAA,YAAY,GAAG,KAAKH,KAAL,CAAWU,GAAX,CAAeJ,IAAf,CAAoBC,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAA7C,CAAf;AACA;;AACD;AACCS,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAfF;;AAiBA,WAAKC,QAAL,CAAc;AACbC,QAAAA,YAAY,EAAEX,YADD;AAEbG,QAAAA,IAAI,EAAEH,YAAY,CAACG,IAFN;AAGbS,QAAAA,KAAK,EAAEZ,YAAY,CAACY;AAHP,OAAd;AAKA,KApDkB;;AAAA,SAsDnBC,OAtDmB,GAsDT,MAAM;AACf,WAAKH,QAAL,CAAc;AACbI,QAAAA,SAAS,EAAE;AADE,OAAd;AAGA,KA1DkB;;AAAA,SA4DnBC,OA5DmB,GA4DT,MAAM;AACf,WAAKlB,KAAL,CAAWkB,OAAX,CAAmB,aAAnB,EAAkC,KAAKC,KAAL,CAAWJ,KAA7C;AACA,KA9DkB;;AAAA,SAgEnBK,UAhEmB,GAgEN,MAAM;AAClB,UAAIlB,EAAE,GAAG,KAAKiB,KAAL,CAAWL,YAAX,CAAwBZ,EAAjC;AACA,UAAImB,OAAJ;;AACA,cAAQ,KAAKrB,KAAL,CAAWI,IAAnB;AACC,aAAK,MAAL;AACCiB,UAAAA,OAAO,GAAG,KAAKrB,KAAL,CAAWK,IAAX,CAAgBC,IAAhB,CAAqBgB,MAArB,CAA4B,UAASC,GAAT,EAAc;AACnD,mBAAOA,GAAG,CAACrB,EAAJ,KAAWA,EAAlB;AACA,WAFS,CAAV;AAGA;;AACD,aAAK,QAAL;AACCmB,UAAAA,OAAO,GAAG,KAAKrB,KAAL,CAAWS,MAAX,CAAkBH,IAAlB,CAAuBgB,MAAvB,CAA8B,UAASC,GAAT,EAAc;AACrD,mBAAOA,GAAG,CAACrB,EAAJ,KAAWA,EAAlB;AACA,WAFS,CAAV;AAGA;;AACD,aAAK,KAAL;AACCmB,UAAAA,OAAO,GAAG,KAAKrB,KAAL,CAAWU,GAAX,CAAeJ,IAAf,CAAoBgB,MAApB,CAA2B,UAASC,GAAT,EAAc;AAClD,mBAAOA,GAAG,CAACrB,EAAJ,KAAWA,EAAlB;AACA,WAFS,CAAV;AAGA;;AACD;AACCS,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAjBF;;AAoBAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACA,WAAKrB,KAAL,CAAWwB,UAAX,CAAsBH,OAAtB;AACA,KAzFkB;;AAAA,SA2FnBI,WA3FmB,GA2FL,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7B,WAAKd,QAAL,CACC;AACC,SAACa,GAAD,GAAOC;AADR,OADD,EAIC,MAAM,KAAKH,UAAL,EAJP;AAMA,KAlGkB;;AAAA,SAmGnBI,eAnGmB,GAmGD,MAAM,CAAE,CAnGP;;AAAA,SAqGnBJ,UArGmB,GAqGNK,CAAC,IAAI;AACjB,UAAId,KAAK,GAAG,KAAKI,KAAL,CAAWJ,KAAvB;AACA,UAAIT,IAAI,GAAG,KAAKa,KAAL,CAAWb,IAAtB;AACA,UAAIJ,EAAE,GAAG,KAAKiB,KAAL,CAAWL,YAAX,CAAwBZ,EAAjC;AACA,UAAI4B,IAAI,GAAG,KAAK9B,KAAL,CAAW8B,IAAtB;AAEA,UAAIC,KAAK,GAAGD,IAAI,CAACE,SAAL,CAAeT,GAAG,IAAIA,GAAG,CAACrB,EAAJ,KAAWA,EAAjC,CAAZ;AACA,UAAIM,IAAI,GAAGsB,IAAI,CAACG,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,CAAX;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,qBACIA,IAAI,CAAC,CAAD,CADR;AAECF,QAAAA,IAAI,EAAEA,IAFP;AAGCS,QAAAA;AAHD;AAKAe,MAAAA,IAAI,CAACI,IAAL,CAAU1B,IAAI,CAAC,CAAD,CAAd;AAEA,WAAKR,KAAL,CAAWwB,UAAX,CAAsBM,IAAtB;AACA,KAtHkB;;AAElB,SAAKX,KAAL,GAAa;AACZb,MAAAA,IAAI,EAAE,aADM;AAEZW,MAAAA,SAAS,EAAE,KAFC;AAGZF,MAAAA,KAAK,EAAE;AACNoB,QAAAA,UAAU,EAAE,OADN;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNC,QAAAA,IAAI,EAAE,SAHA;AAINC,QAAAA,MAAM,EAAE;AAJF,OAHK;AASZC,MAAAA,SAAS,EAAE,KATC;AAUZzB,MAAAA,YAAY,EAAE;AAVF,KAAb;AAYA;;AAED0B,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAIA,SAAS,CAAC3B,YAAV,KAA2B,KAAKd,KAAL,CAAWc,YAA1C,EAAwD;AACvD,UAAI;AACHH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWc,YAAX,CAAwB,CAAxB,EAA2BZ,EAAvC;AACA,YAAIA,EAAE,GAAG,KAAKF,KAAL,CAAWc,YAAX,CAAwB,CAAxB,EAA2BZ,EAApC;AACA,aAAKD,eAAL,CAAqBC,EAArB;AACA,OAJD,CAIE,OAAOwC,KAAP,EAAc;AACf;AACA;AACD;AACD;;AA8FDC,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWL,YAAvB;AACA,QAAIA,YAAY,GAAG,KAAKK,KAAL,CAAWL,YAA9B;AACA;;;;;;;;AAOA,WACC;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,SAAS,EAAC,kCADX;AAEC,MAAA,OAAO,EAAE,KAAKI,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CADD,EASC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCATD,CADD,EAcE0B,MAAM,CAACC,IAAP,CAAY/B,YAAZ,EAA0BgC,MAA1B,KAAqC,CAArC,GAAyC,IAAzC,GACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,EAEC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,SAAS,EAAC,8BAFX;AAGC,MAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWb,IAHnB;AAIC,MAAA,QAAQ,EAAEuB,CAAC,IACV,KAAKhB,QAAL,CACC;AACCP,QAAAA,IAAI,EAAEuB,CAAC,CAACkB,MAAF,CAASpB;AADhB,OADD,EAIC,MAAM,KAAKH,UAAL,EAJP,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,EAiBC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAIC,oBAAC,UAAD;AACC,MAAA,MAAM,EAAC,yCADR;AAEC,MAAA,gBAAgB,EACf,KAAKL,KAAL,CAAWJ,KAAX,CAAiBoB,UAHnB;AAKC,MAAA,QAAQ,EAAEa,QAAQ,IACjB,KAAKnC,QAAL,CACC;AACCE,QAAAA,KAAK,oBACD,KAAKI,KAAL,CAAWJ,KADV;AAEJoB,UAAAA,UAAU,EAAEa,QAAQ,CAACC;AAFjB;AADN,OADD,EAOC,MAAM,KAAKzB,UAAL,EAPP,CANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CAjBD,CADD,EAyCC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWL,YAAX,CAAwBC,KAAxB,CAA8BsB,IADtC;AAEC,MAAA,gBAAgB,EAAEa,KAAK,IACtB,KAAKrC,QAAL,CACC;AACCE,QAAAA,KAAK,oBACD,KAAKI,KAAL,CAAWJ,KADV;AAEJsB,UAAAA,IAAI,EAAEa,KAAK,CAACC;AAFR;AADN,OADD,EAOC,MAAM,KAAK3B,UAAL,EAPP,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,EAkBC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADD,EAEC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWL,YAAX,CAAwBC,KAAxB,CAA8BuB,MADtC;AAEC,MAAA,gBAAgB,EAAEY,KAAK,IACtB,KAAKrC,QAAL,CACC;AACCE,QAAAA,KAAK,oBACD,KAAKI,KAAL,CAAWJ,KADV;AAEJuB,UAAAA,MAAM,EAAEY,KAAK,CAACC;AAFV;AADN,OADD,EAOC,MAAM,KAAK3B,UAAL,EAPP,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAgBC;AACC,MAAA,KAAK,EAAE;AAAE4B,QAAAA,MAAM,EAAE;AAAV,OADR;AAEC,MAAA,OAAO,EAAEvB,CAAC,IACT,KAAKhB,QAAL,CACC;AACCE,QAAAA,KAAK,oBACD,KAAKI,KAAL,CAAWJ,KADV;AAEJuB,UAAAA,MAAM,EAAE;AAFJ;AADN,OADD,EAOC,MAAM,KAAKd,UAAL,EAPP,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAhBD,CAlBD,CAzCD,EA6FC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC;AACC,MAAA,IAAI,EAAC,QADN;AAEC,MAAA,SAAS,EAAC,mBAFX;AAGC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWJ,KAAX,CAAiBqB,QAHzB;AAIC,MAAA,QAAQ,EAAEP,CAAC,IACV,KAAKhB,QAAL,CACC;AACCE,QAAAA,KAAK,oBACD,KAAKI,KAAL,CAAWJ,KADV;AAEJqB,UAAAA,QAAQ,EAAEP,CAAC,CAACkB,MAAF,CAASpB;AAFf;AADN,OADD,EAOC,MAAM,KAAKH,UAAL,EAPP,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,EAoBC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AACC,MAAA,SAAS,EAAC,qCADX;AAEC,MAAA,OAAO,EAAE,KAAKJ,UAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CApBD,CA7FD,CAfF,CADD;AA8IA;;AApRiC;;AAuRnC,MAAMiC,eAAe,GAAGlC,KAAK,KAAK;AACjCmC,EAAAA,OAAO,EAAEnC,KAAK,CAACmC,OADkB;AAEjCjD,EAAAA,IAAI,EAAEc,KAAK,CAACd,IAFqB;AAGjCI,EAAAA,MAAM,EAAEU,KAAK,CAACV,MAHmB;AAIjCC,EAAAA,GAAG,EAAES,KAAK,CAACT;AAJsB,CAAL,CAA7B;;AAOA,eAAeb,OAAO,CAACwD,eAAD,CAAP,CAAyBvD,UAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport FontPicker from \"font-picker-react\";\n\nimport ItemDetailSelector from \"./ItemDetailSelector\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttext: \"Insert Text\",\n\t\t\tfontAdded: false,\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Anton\",\n\t\t\t\tfontSize: 20,\n\t\t\t\tfill: \"#ffffff\",\n\t\t\t\tstroke: \"\"\n\t\t\t},\n\t\t\tactivated: false,\n\t\t\tselectedText: {}\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.selectedText !== this.props.selectedText) {\n\t\t\ttry {\n\t\t\t\tconsole.log(this.props.selectedText[0].id);\n\t\t\t\tlet id = this.props.selectedText[0].id;\n\t\t\t\tthis.getSelectedText(id);\n\t\t\t} catch (error) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetSelectedText = id => {\n\t\tlet selectedItem;\n\t\tswitch (this.props.view) {\n\t\t\tcase \"side\":\n\t\t\t\tselectedItem = this.props.side.text.find(\n\t\t\t\t\titem => item.id === id\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tselectedItem = this.props.bottom.text.find(\n\t\t\t\t\titem => item.id === id\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"top\":\n\t\t\t\tselectedItem = this.props.top.text.find(item => item.id === id);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"not yet\");\n\t\t}\n\t\tthis.setState({\n\t\t\tselectedText: selectedItem,\n\t\t\ttext: selectedItem.text,\n\t\t\tstyle: selectedItem.style\n\t\t});\n\t};\n\n\taddFont = () => {\n\t\tthis.setState({\n\t\t\tfontAdded: true\n\t\t});\n\t};\n\n\taddText = () => {\n\t\tthis.props.addText(\"Insert Text\", this.state.style);\n\t};\n\n\tdeleteText = () => {\n\t\tlet id = this.state.selectedText.id;\n\t\tlet objects;\n\t\tswitch (this.props.view) {\n\t\t\tcase \"side\":\n\t\t\t\tobjects = this.props.side.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tobjects = this.props.bottom.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"top\":\n\t\t\t\tobjects = this.props.top.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"not yet\");\n\t\t}\n\n\t\tconsole.log(objects);\n\t\tthis.props.updateText(objects);\n\t};\n\n\tupdateState = (key, value) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\t[key]: value\n\t\t\t},\n\t\t\t() => this.updateText()\n\t\t);\n\t};\n\tfindTextDetails = () => {};\n\n\tupdateText = e => {\n\t\tlet style = this.state.style;\n\t\tlet text = this.state.text;\n\t\tlet id = this.state.selectedText.id;\n\t\tlet data = this.props.data;\n\n\t\tlet index = data.findIndex(obj => obj.id === id);\n\t\tlet item = data.splice(index, 1);\n\t\tconsole.log(item);\n\t\titem[0] = {\n\t\t\t...item[0],\n\t\t\ttext: text,\n\t\t\tstyle\n\t\t};\n\t\tdata.push(item[0]);\n\n\t\tthis.props.updateText(data);\n\t};\n\n\trender() {\n\t\t//let selectedText = this.props.selectedText[0];\n\t\t//if (!selectedText) return null;\n\t\t//console.log(selectedText);\n\t\tconsole.log(this.state.selectedText);\n\t\tlet selectedText = this.state.selectedText;\n\t\t/*selectedText\n\t\t\t? this.setState({\n\t\t\t\t\tactivated: true\n\t\t\t  })\n\t\t\t: this.setState({\n\t\t\t\t\tactivated: false\n\t\t\t  });*/\n\t\treturn (\n\t\t\t<div className=\"design-details-container text-editor \">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"add-text-button button hoverable\"\n\t\t\t\t\t\t\tonClick={this.addText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd New Text\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\tOr Select Existing Text to Edit\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{Object.keys(selectedText).length === 0 ? null : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"text input col s6\">\n\t\t\t\t\t\t\t\t<label>Enter Your Text Here</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input apply-font\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttext: e.target.value\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"font-picker col s6\">\n\t\t\t\t\t\t\t\t<label className=\" col s12\">\n\t\t\t\t\t\t\t\t\tChoose Your Font\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<FontPicker\n\t\t\t\t\t\t\t\t\tapiKey=\"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\"\n\t\t\t\t\t\t\t\t\tactiveFontFamily={\n\t\t\t\t\t\t\t\t\t\tthis.state.style.fontFamily\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={nextFont =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: nextFont.family\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tcolor={this.state.selectedText.style.fill}\n\t\t\t\t\t\t\t\t\tonChangeComplete={color =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfill: color.hex\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Outline Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tcolor={this.state.selectedText.style.stroke}\n\t\t\t\t\t\t\t\t\tonChangeComplete={color =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke: color.hex\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\tonClick={e =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstroke: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear Outline\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Font Size</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.style.fontSize}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: e.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"delete-text-button button hoverable\"\n\t\t\t\t\t\t\t\t\tonClick={this.deleteText}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete Text\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side,\n\tbottom: state.bottom,\n\ttop: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);\n"]},"metadata":{},"sourceType":"module"}