{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FontPicker from \"font-picker-react\";\nimport ItemDetailSelector from \"./ItemDetailSelector\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFont = () => {\n      this.setState({\n        fontAdded: true\n      });\n    };\n\n    this.addText = () => {\n      console.log(\"text-added\");\n      this.props.addText(\"Insert Text\", this.state.style);\n    };\n\n    this.updateState = (key, value) => {\n      this.setState({\n        [key]: value\n      }, () => this.updateText());\n    };\n\n    this.findTextDetails = () => {};\n\n    this.updateText = e => {\n      let style = this.state.style;\n      let text = this.state.selectedText.text;\n      let id = this.props.selectedText[0].id;\n      let data = this.props.data;\n      let index = data.findIndex(obj => obj.id === id);\n      let item = data.splice(index, 1);\n      console.log(item);\n      item[0] = _objectSpread({}, item[0], {\n        text: text,\n        style\n      });\n      data.push(item[0]);\n      this.props.updateText(data);\n    };\n\n    this.state = {\n      text: \"Insert Text\",\n      fontAdded: false,\n      style: {\n        fontFamily: \"Anton\",\n        fontSize: 20,\n        fill: \"#ffffff\",\n        stroke: \"\"\n      },\n      activated: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedText: this.props.selectedText[0]\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedText[0] !== this.props.selectedText[0]) {\n      this.setState({\n        selectedText: this.props.selectedText[0]\n      });\n    }\n  }\n\n  render() {\n    let selectedText = this.state.selectedText; //if (!selectedText) return null;\n\n    console.log(selectedText);\n    /*selectedText\n    \t? this.setState({\n    \t\t\tactivated: true\n    \t  })\n    \t: this.setState({\n    \t\t\tactivated: false\n    \t  });*/\n\n    return React.createElement(\"div\", {\n      className: \"design-details-container text-editor \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-text-button button hoverable col offset-s1\",\n      onClick: this.addText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Add New Text\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Or Select Existing Text to Edit\")), !selectedText ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text input col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Enter Your Text Here\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-editor-input apply-font\",\n      value: selectedText.text,\n      onChange: e => this.setState({\n        selectedText: {\n          text: e.target.value\n        }\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-picker col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Choose Your Font\"), React.createElement(FontPicker, {\n      apiKey: \"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\",\n      activeFontFamily: this.state.style.fontFamily,\n      onChange: nextFont => this.setState({\n        selectedText: {\n          style: _objectSpread({}, this.state.style, {\n            fontFamily: nextFont.family\n          })\n        }\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Choose Your Text Color\"), React.createElement(ChromePicker, {\n      color: this.state.style.fill,\n      onChangeComplete: color => this.setState({\n        selectedText: {\n          style: _objectSpread({}, this.state.style, {\n            fill: color.hex\n          })\n        }\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Choose Your Text Outline Color\"), React.createElement(ChromePicker, {\n      color: this.state.style.stroke,\n      onChangeComplete: color => this.setState({\n        selectedText: {\n          style: _objectSpread({}, this.state.style, {\n            stroke: color.hex\n          })\n        }\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: e => this.setState({\n        selectedText: {\n          style: _objectSpread({}, this.state.style, {\n            stroke: \"\"\n          })\n        }\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Clear Outline\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Font Size\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"text-editor-input\"\n      /*defaultValue={\n      \tselectedText.style.fontSize\n      }*/\n      ,\n      onChange: e => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontSize: e.target.value\n        })\n      }, () => this.updateText()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side,\n  bottom: state.bottom,\n  top: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js"],"names":["React","Component","ReactDOM","FontPicker","ItemDetailSelector","ChromePicker","connect","TextEditor","constructor","props","addFont","setState","fontAdded","addText","console","log","state","style","updateState","key","value","updateText","findTextDetails","e","text","selectedText","id","data","index","findIndex","obj","item","splice","push","fontFamily","fontSize","fill","stroke","activated","componentDidMount","componentDidUpdate","prevProps","render","target","nextFont","family","color","hex","cursor","mapStateToProps","drawing","side","bottom","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport FontPicker from \"font-picker-react\";\n\nimport ItemDetailSelector from \"./ItemDetailSelector\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttext: \"Insert Text\",\n\t\t\tfontAdded: false,\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Anton\",\n\t\t\t\tfontSize: 20,\n\t\t\t\tfill: \"#ffffff\",\n\t\t\t\tstroke: \"\"\n\t\t\t},\n\t\t\tactivated: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tselectedText: this.props.selectedText[0]\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.selectedText[0] !== this.props.selectedText[0]) {\n\t\t\tthis.setState({\n\t\t\t\tselectedText: this.props.selectedText[0]\n\t\t\t});\n\t\t}\n\t}\n\n\taddFont = () => {\n\t\tthis.setState({\n\t\t\tfontAdded: true\n\t\t});\n\t};\n\n\taddText = () => {\n\t\tconsole.log(\"text-added\");\n\t\tthis.props.addText(\"Insert Text\", this.state.style);\n\t};\n\n\tupdateState = (key, value) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\t[key]: value\n\t\t\t},\n\t\t\t() => this.updateText()\n\t\t);\n\t};\n\tfindTextDetails = () => {};\n\n\tupdateText = e => {\n\t\tlet style = this.state.style;\n\t\tlet text = this.state.selectedText.text;\n\t\tlet id = this.props.selectedText[0].id;\n\t\tlet data = this.props.data;\n\n\t\tlet index = data.findIndex(obj => obj.id === id);\n\t\tlet item = data.splice(index, 1);\n\t\tconsole.log(item);\n\t\titem[0] = {\n\t\t\t...item[0],\n\t\t\ttext: text,\n\t\t\tstyle\n\t\t};\n\t\tdata.push(item[0]);\n\n\t\tthis.props.updateText(data);\n\t};\n\n\trender() {\n\t\tlet selectedText = this.state.selectedText;\n\t\t//if (!selectedText) return null;\n\t\tconsole.log(selectedText);\n\t\t/*selectedText\n\t\t\t? this.setState({\n\t\t\t\t\tactivated: true\n\t\t\t  })\n\t\t\t: this.setState({\n\t\t\t\t\tactivated: false\n\t\t\t  });*/\n\t\treturn (\n\t\t\t<div className=\"design-details-container text-editor \">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-text-button button hoverable col offset-s1\"\n\t\t\t\t\t\tonClick={this.addText}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd New Text\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Or Select Existing Text to Edit</p>\n\t\t\t\t</div>\n\t\t\t\t{!selectedText ? null : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"text input col s6\">\n\t\t\t\t\t\t\t\t<label>Enter Your Text Here</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input apply-font\"\n\t\t\t\t\t\t\t\t\tvalue={selectedText.text}\n\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext: e.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"font-picker col s6\">\n\t\t\t\t\t\t\t\t<label className=\" col s12\">\n\t\t\t\t\t\t\t\t\tChoose Your Font\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<FontPicker\n\t\t\t\t\t\t\t\t\tapiKey=\"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\"\n\t\t\t\t\t\t\t\t\tactiveFontFamily={\n\t\t\t\t\t\t\t\t\t\tthis.state.style.fontFamily\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={nextFont =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextFont.family\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tcolor={this.state.style.fill}\n\t\t\t\t\t\t\t\t\tonChangeComplete={color =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: color.hex\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Outline Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tcolor={this.state.style.stroke}\n\t\t\t\t\t\t\t\t\tonChangeComplete={color =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstroke: color.hex\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\t\t\t\t\tonClick={e =>\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstroke: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tClear Outline\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Font Size</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input\"\n\t\t\t\t\t\t\t\t\t\t\t/*defaultValue={\n\t\t\t\t\t\t\t\t\t\t\t\tselectedText.style.fontSize\n\t\t\t\t\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => this.updateText()\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side,\n\tbottom: state.bottom,\n\ttop: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);\n"]},"metadata":{},"sourceType":"module"}