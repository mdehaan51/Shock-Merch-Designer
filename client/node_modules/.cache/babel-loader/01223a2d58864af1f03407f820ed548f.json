{"ast":null,"code":"import axios from \"axios\";\nimport { SET_DESIGN_COLOR, SET_DESIGN_FONT, TOGGLE_MODAL, SET_FONT_SIZE, SET_FONT_ROTATION, SET_FONT_WEIGHT, SET_LINE_HEIGHT, SET_TEXT_COLOR, SAVE_LOGO, SET_LOGO_SIZE, SET_LOGO_ROTATION, SET_SOCK } from \"./types\";\nexport const toggleModal = modalInfo => {\n  return {\n    type: TOGGLE_MODAL,\n    payload: modalInfo\n  };\n};\nexport const saveColor = (name, color, id) => {\n  var obj = {};\n  obj[name] = color;\n  return {\n    type: SET_DESIGN_COLOR,\n    payload: obj,\n    id: id\n  };\n};\nexport const addText = (name, text, id) => {\n  var obj = {};\n  obj[name] = text;\n  return {\n    type: SET_DESIGN_FONT,\n    payload: text,\n    id: id\n  };\n};\nexport const setFontSize = (size, id) => {\n  return {\n    type: SET_FONT_SIZE,\n    payload: size,\n    id: id\n  };\n};\nexport const setFontRotation = (size, id) => {\n  return {\n    type: SET_FONT_ROTATION,\n    payload: size,\n    id: id\n  };\n};\nexport const setFontWeight = (size, id) => {\n  return {\n    type: SET_FONT_WEIGHT,\n    payload: size,\n    id: id\n  };\n};\nexport const setLineHeight = (size, id) => {\n  return {\n    type: SET_LINE_HEIGHT,\n    payload: size,\n    id: id\n  };\n};\nexport const textColor = (color, id) => {\n  return {\n    type: SET_TEXT_COLOR,\n    payload: color,\n    id: id\n  };\n};\nexport const saveLogo = (logo, id) => {\n  console.log(logo);\n  return {\n    type: SAVE_LOGO,\n    payload: logo,\n    id: id\n  };\n};\nexport const setLogoSize = (size, id) => {\n  console.log(size);\n  return {\n    type: SET_LOGO_SIZE,\n    payload: size,\n    id: id\n  };\n};\nexport const setLogoRotation = (size, id) => {\n  return {\n    type: SET_LOGO_ROTATION,\n    payload: size,\n    id: id\n  };\n};\nexport const quoteRequest = messageData => {\n  axios.post(\"/api/mailer/send\", messageData).then(response => {\n    if (response.data.msg === \"success\") {\n      alert(\"Message Sent.\"); //this.resetForm();\n    } else if (response.data.msg === \"fail\") {\n      alert(\"Message failed to send.\");\n    }\n  });\n};","map":{"version":3,"sources":["/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/actions/designActions.js"],"names":["axios","SET_DESIGN_COLOR","SET_DESIGN_FONT","TOGGLE_MODAL","SET_FONT_SIZE","SET_FONT_ROTATION","SET_FONT_WEIGHT","SET_LINE_HEIGHT","SET_TEXT_COLOR","SAVE_LOGO","SET_LOGO_SIZE","SET_LOGO_ROTATION","SET_SOCK","toggleModal","modalInfo","type","payload","saveColor","name","color","id","obj","addText","text","setFontSize","size","setFontRotation","setFontWeight","setLineHeight","textColor","saveLogo","logo","console","log","setLogoSize","setLogoRotation","quoteRequest","messageData","post","then","response","data","msg","alert"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n\tSET_DESIGN_COLOR,\n\tSET_DESIGN_FONT,\n\tTOGGLE_MODAL,\n\tSET_FONT_SIZE,\n\tSET_FONT_ROTATION,\n\tSET_FONT_WEIGHT,\n\tSET_LINE_HEIGHT,\n\tSET_TEXT_COLOR,\n\tSAVE_LOGO,\n\tSET_LOGO_SIZE,\n\tSET_LOGO_ROTATION,\n\tSET_SOCK\n} from \"./types\";\n\nexport const toggleModal = modalInfo => {\n\treturn {\n\t\ttype: TOGGLE_MODAL,\n\t\tpayload: modalInfo\n\t};\n};\n\nexport const saveColor = (name, color, id) => {\n\tvar obj = {};\n\tobj[name] = color;\n\treturn {\n\t\ttype: SET_DESIGN_COLOR,\n\t\tpayload: obj,\n\t\tid: id\n\t};\n};\n\nexport const addText = (name, text, id) => {\n\tvar obj = {};\n\tobj[name] = text;\n\treturn {\n\t\ttype: SET_DESIGN_FONT,\n\t\tpayload: text,\n\t\tid: id\n\t};\n};\n\nexport const setFontSize = (size, id) => {\n\treturn {\n\t\ttype: SET_FONT_SIZE,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const setFontRotation = (size, id) => {\n\treturn {\n\t\ttype: SET_FONT_ROTATION,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const setFontWeight = (size, id) => {\n\treturn {\n\t\ttype: SET_FONT_WEIGHT,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const setLineHeight = (size, id) => {\n\treturn {\n\t\ttype: SET_LINE_HEIGHT,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const textColor = (color, id) => {\n\treturn {\n\t\ttype: SET_TEXT_COLOR,\n\t\tpayload: color,\n\t\tid: id\n\t};\n};\n\nexport const saveLogo = (logo, id) => {\n\tconsole.log(logo);\n\treturn {\n\t\ttype: SAVE_LOGO,\n\t\tpayload: logo,\n\t\tid: id\n\t};\n};\n\nexport const setLogoSize = (size, id) => {\n\tconsole.log(size);\n\treturn {\n\t\ttype: SET_LOGO_SIZE,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const setLogoRotation = (size, id) => {\n\treturn {\n\t\ttype: SET_LOGO_ROTATION,\n\t\tpayload: size,\n\t\tid: id\n\t};\n};\n\nexport const quoteRequest = messageData => {\n\taxios.post(\"/api/mailer/send\", messageData).then(response => {\n\t\tif (response.data.msg === \"success\") {\n\t\t\talert(\"Message Sent.\");\n\t\t\t//this.resetForm();\n\t\t} else if (response.data.msg === \"fail\") {\n\t\t\talert(\"Message failed to send.\");\n\t\t}\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}