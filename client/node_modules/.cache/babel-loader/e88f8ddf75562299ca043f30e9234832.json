{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TopDrawingTools.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\nimport ColorSelect from \"./ColorPicker\";\nimport TextEditor from \"./TextEditor\";\nimport ImageUpload from \"./ImageUpload\";\nimport Konva from \"konva\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { setPrimarySockColor, setSecondarySockColor } from \"../../actions/drawingActions\";\nimport { addText, updateText, selectText, addImage, updateImages, selectImage } from \"../../actions/topActions\";\nimport { connect } from \"react-redux\";\n\nclass TopDrawingTools extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompletePrimary = (color, event) => {\n      console.log(color);\n      this.props.setPrimarySockColor(color);\n    };\n\n    this.onChangeCompleteSecondary = (color, event) => {\n      console.log(color);\n      this.props.setSecondarySockColor(color);\n    };\n\n    this.getSelectedItem = (item, type) => {\n      if (type == \"text\") {\n        let allItems = this.props.top.text;\n        let itemDetails = allItems.filter(obj => {\n          return obj.id === item;\n        });\n        return itemDetails;\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    let color = this.props.drawing.primary.hex;\n    let selectedText = this.getSelectedItem(this.props.top.selectedItem, \"text\");\n    return React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Add Text\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Change Color\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Add Logo\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TextEditor, {\n      data: this.props.top.text,\n      addText: this.props.addText,\n      updateText: this.props.updateText,\n      selectedText: selectedText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ColorSelect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Image\", React.createElement(ImageUpload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  top: state.top\n});\n\nexport default connect(mapStateToProps, {\n  setPrimarySockColor,\n  setSecondarySockColor,\n  addText,\n  updateText,\n  selectText,\n  addImage,\n  updateImages,\n  selectImage\n})(TopDrawingTools);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TopDrawingTools.js"],"names":["React","Component","render","Stage","Layer","Rect","Text","ColorSelect","TextEditor","ImageUpload","Konva","Tab","Tabs","TabList","TabPanel","setPrimarySockColor","setSecondarySockColor","addText","updateText","selectText","addImage","updateImages","selectImage","connect","TopDrawingTools","constructor","props","onChangeCompletePrimary","color","event","console","log","onChangeCompleteSecondary","getSelectedItem","item","type","allItems","top","text","itemDetails","filter","obj","id","state","drawing","primary","hex","selectedText","selectedItem","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\n\nimport ColorSelect from \"./ColorPicker\";\nimport TextEditor from \"./TextEditor\";\nimport ImageUpload from \"./ImageUpload\";\n\nimport Konva from \"konva\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\n\nimport {\n\tsetPrimarySockColor,\n\tsetSecondarySockColor\n} from \"../../actions/drawingActions\";\nimport {\n\taddText,\n\tupdateText,\n\tselectText,\n\taddImage,\n\tupdateImages,\n\tselectImage\n} from \"../../actions/topActions\";\nimport { connect } from \"react-redux\";\n\nclass TopDrawingTools extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\tonChangeCompletePrimary = (color, event) => {\n\t\tconsole.log(color);\n\t\tthis.props.setPrimarySockColor(color);\n\t};\n\n\tonChangeCompleteSecondary = (color, event) => {\n\t\tconsole.log(color);\n\t\tthis.props.setSecondarySockColor(color);\n\t};\n\tgetSelectedItem = (item, type) => {\n\t\tif (type == \"text\") {\n\t\t\tlet allItems = this.props.top.text;\n\t\t\tlet itemDetails = allItems.filter(obj => {\n\t\t\t\treturn obj.id === item;\n\t\t\t});\n\t\t\treturn itemDetails;\n\t\t}\n\t};\n\n\trender() {\n\t\tlet color = this.props.drawing.primary.hex;\n\t\tlet selectedText = this.getSelectedItem(\n\t\t\tthis.props.top.selectedItem,\n\t\t\t\"text\"\n\t\t);\n\t\treturn (\n\t\t\t<Tabs>\n\t\t\t\t<TabList>\n\t\t\t\t\t<Tab>Add Text</Tab>\n\t\t\t\t\t<Tab>Change Color</Tab>\n\t\t\t\t\t<Tab>Add Logo</Tab>\n\t\t\t\t</TabList>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<TextEditor\n\t\t\t\t\t\tdata={this.props.top.text}\n\t\t\t\t\t\taddText={this.props.addText}\n\t\t\t\t\t\tupdateText={this.props.updateText}\n\t\t\t\t\t\tselectedText={selectedText}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<ColorSelect />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\tImage\n\t\t\t\t\t<ImageUpload />\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\ttop: state.top\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{\n\t\tsetPrimarySockColor,\n\t\tsetSecondarySockColor,\n\t\taddText,\n\t\tupdateText,\n\t\tselectText,\n\t\taddImage,\n\t\tupdateImages,\n\t\tselectImage\n\t}\n)(TopDrawingTools);\n"]},"metadata":{},"sourceType":"module"}