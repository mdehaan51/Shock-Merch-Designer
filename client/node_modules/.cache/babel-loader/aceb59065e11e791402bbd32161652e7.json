{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ImageUpload.js\";\nimport React, { Component } from \"react\"; //import LogoSizeSelect from \"./LogoSizeSelect\";\n\nimport { addImage, copyImage } from \"../../actions/sideActions\";\nimport { connect } from \"react-redux\";\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyImage = () => {\n      let id = this.props.selectedImage[0].id;\n      let objects;\n\n      switch (this.props.view) {\n        case \"side\":\n          objects = this.props.side.images.find(function (obj) {\n            return obj.id === id;\n          });\n          break;\n\n        case \"bottom\":\n          objects = this.props.bottom.images.find(function (obj) {\n            return obj.id === id;\n          });\n          break;\n\n        case \"top\":\n          objects = this.props.top.images.find(function (obj) {\n            return obj.id === id;\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(objects);\n      this.props.copyImage(objects);\n    };\n\n    this.deleteImage = () => {\n      let id = this.props.bottom.selectedItem;\n      let objects;\n\n      switch (this.props.view) {\n        case \"side\":\n          objects = this.props.side.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        case \"bottom\":\n          objects = this.props.bottom.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        case \"top\":\n          objects = this.props.top.text.filter(function (obj) {\n            return obj.id !== id;\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(objects);\n      this.props.saveImage(objects);\n    };\n\n    this.state = {\n      file: null,\n      image: \"\"\n    };\n    this.onChange = this.onChange.bind(this);\n    this.resetFile = this.resetFile.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  onChange(event) {\n    if (event.target.files[0]) {\n      console.log(event.target.files[0]);\n      this.props.saveImage(URL.createObjectURL(event.target.files[0]));\n    }\n  }\n\n  resetFile(event) {\n    event.preventDefault(); //this.setState({ file: null });\n\n    this.props.saveImage(null, this.props.view);\n  }\n\n  render() {\n    //let data = this.props.drawing.sideImages[0];\n    return React.createElement(\"div\", {\n      className: \"logo-upload-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add New Image\"), React.createElement(\"input\", {\n      className: \"image-upload-input \",\n      type: \"file\",\n      onChange: this.onChange,\n      placeholder: \"Awaiting Upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.state.image && React.createElement(\"button\", {\n      className: \"remove-logo button hoverable\",\n      onClick: this.resetFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Remove Image\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Or Select Existing Image to Edit\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete-text-button button hoverable\",\n      onClick: this.copyImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Copy Image\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"delete-text-button button hoverable\",\n      onClick: this.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Delete Image\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"For best results please do the following:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"1) Only upload PNG, JPG, or AI files\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"2) Ensure your logo has a transparent background\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"3) Ensure uploaded logo is at least 150 dpi\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side,\n  bottom: state.bottom,\n  top: state.top\n});\n\nexport default connect(mapStateToProps, {\n  addImage,\n  copyImage\n})(ImageUpload);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/ImageUpload.js"],"names":["React","Component","addImage","copyImage","connect","ImageUpload","constructor","props","id","selectedImage","objects","view","side","images","find","obj","bottom","top","console","log","deleteImage","selectedItem","text","filter","saveImage","state","file","image","onChange","bind","resetFile","componentDidUpdate","prevProps","event","target","files","URL","createObjectURL","preventDefault","render","mapStateToProps","drawing"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n//import LogoSizeSelect from \"./LogoSizeSelect\";\n\nimport { addImage, copyImage } from \"../../actions/sideActions\";\nimport { connect } from \"react-redux\";\n\nclass ImageUpload extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { file: null, image: \"\" };\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.resetFile = this.resetFile.bind(this);\n\t}\n\n\tcomponentDidUpdate(prevProps) {}\n\n\tonChange(event) {\n\t\tif (event.target.files[0]) {\n\t\t\tconsole.log(event.target.files[0]);\n\t\t\tthis.props.saveImage(URL.createObjectURL(event.target.files[0]));\n\t\t}\n\t}\n\n\tcopyImage = () => {\n\t\tlet id = this.props.selectedImage[0].id;\n\t\tlet objects;\n\t\tswitch (this.props.view) {\n\t\t\tcase \"side\":\n\t\t\t\tobjects = this.props.side.images.find(function(obj) {\n\t\t\t\t\treturn obj.id === id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tobjects = this.props.bottom.images.find(function(obj) {\n\t\t\t\t\treturn obj.id === id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"top\":\n\t\t\t\tobjects = this.props.top.images.find(function(obj) {\n\t\t\t\t\treturn obj.id === id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tconsole.log(objects);\n\t\tthis.props.copyImage(objects);\n\t};\n\n\tdeleteImage = () => {\n\t\tlet id = this.props.bottom.selectedItem;\n\t\tlet objects;\n\t\tswitch (this.props.view) {\n\t\t\tcase \"side\":\n\t\t\t\tobjects = this.props.side.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"bottom\":\n\t\t\t\tobjects = this.props.bottom.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"top\":\n\t\t\t\tobjects = this.props.top.text.filter(function(obj) {\n\t\t\t\t\treturn obj.id !== id;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tconsole.log(objects);\n\t\tthis.props.saveImage(objects);\n\t};\n\n\tresetFile(event) {\n\t\tevent.preventDefault();\n\t\t//this.setState({ file: null });\n\t\tthis.props.saveImage(null, this.props.view);\n\t}\n\trender() {\n\t\t//let data = this.props.drawing.sideImages[0];\n\t\treturn (\n\t\t\t<div className=\"logo-upload-container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s5\">\n\t\t\t\t\t\t<label>Add New Image</label>\n\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"image-upload-input \"\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tplaceholder=\"Awaiting Upload\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{this.state.image && (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"remove-logo button hoverable\"\n\t\t\t\t\t\t\t\tonClick={this.resetFile}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRemove Image\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Or Select Existing Image to Edit</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"delete-text-button button hoverable\"\n\t\t\t\t\t\t\tonClick={this.copyImage}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCopy Image\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"delete-text-button button hoverable\"\n\t\t\t\t\t\t\tonClick={this.deleteImage}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete Image\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<p>For best results please do the following:</p>\n\t\t\t\t\t<p>1) Only upload PNG, JPG, or AI files</p>\n\t\t\t\t\t<p>2) Ensure your logo has a transparent background</p>\n\t\t\t\t\t<p>3) Ensure uploaded logo is at least 150 dpi</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side,\n\tbottom: state.bottom,\n\ttop: state.top\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ addImage, copyImage }\n)(ImageUpload);\n"]},"metadata":{},"sourceType":"module"}