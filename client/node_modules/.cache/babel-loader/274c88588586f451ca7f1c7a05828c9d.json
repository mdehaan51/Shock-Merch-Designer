{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./styles/App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport Navbar from \"./components/NavBar.js\";\nimport GridLayout from \"./components/NewGridLayout.js\";\nimport Modal from \"./components/Modal.js\";\nimport Landing from \"./components/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\"; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.setSize = (height, width) => {\n      this.setState({\n        height: parseInt(height),\n        width: parseInt(width)\n      });\n    };\n\n    this.showRequestModal = (type, message) => {\n      this.setState({\n        modalContents: {\n          type: \"request\",\n          title: \"Lets Get This Park Started\"\n        }\n      });\n      this.showModal();\n    };\n\n    this.showHelpModal = (type, message) => {\n      this.setState({\n        modalContents: {\n          type: \"help\",\n          title: \"Unsure of where to start?\"\n        }\n      });\n      this.showModal();\n    };\n\n    this.state = {\n      height: 250,\n      width: 250,\n      show: false,\n      modalContents: {\n        type: \"What\",\n        title: \"This Is a Message\"\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      setSize: this.setSize,\n      request: this.showRequestModal,\n      help: this.showHelpModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Navbar","GridLayout","Modal","Landing","Register","Login","Provider","store","PrivateRoute","Dashboard","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","constructor","props","showModal","setState","show","hideModal","setSize","height","width","parseInt","showRequestModal","type","message","modalContents","title","showHelpModal","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles/App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport Navbar from \"./components/NavBar.js\";\nimport GridLayout from \"./components/NewGridLayout.js\";\nimport Modal from \"./components/Modal.js\";\nimport Landing from \"./components/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 250,\n      width: 250,\n      show: false,\n      modalContents: {\n        type: \"What\",\n        title: \"This Is a Message\"\n      }\n    };\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  setSize = (height, width) => {\n    this.setState({\n      height: parseInt(height),\n      width: parseInt(width)\n    });\n  };\n  showRequestModal = (type, message) => {\n    this.setState({\n      modalContents: {\n        type: \"request\",\n        title: \"Lets Get This Park Started\"\n      }\n    });\n    this.showModal();\n  };\n  showHelpModal = (type, message) => {\n    this.setState({\n      modalContents: {\n        type: \"help\",\n        title: \"Unsure of where to start?\"\n      }\n    });\n    this.showModal();\n  };\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar\n              setSize={this.setSize}\n              request={this.showRequestModal}\n              help={this.showHelpModal}\n            />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n            {/*<Route exact path=\"/builder\" component{gridLayout}>\n        <Modal\n          show={this.state.show}\n          handleClose={this.hideModal}\n          title={this.state.modalContents.title}\n          type={this.state.modalContents.type}\n        />\n\n        <GridLayout width={this.state.width} height={this.state.height} />*/}\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}