{"ast":null,"code":"import _objectSpread from \"/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/components/DrawingComponents/TextElement.js\";\nimport React from \"react\";\nimport { Text, Transformer, Group } from \"react-konva\";\n\nconst TextElement = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange,\n  text,\n  style,\n  textProps,\n  id,\n  x,\n  y,\n  rotation\n}) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Group, {\n    key: id,\n    rotation: rotation,\n    onClick: onSelect,\n    onTap: onSelect,\n    ref: shapeRef,\n    x: x,\n    y: y,\n    draggable: true,\n    onDragEnd: e => {\n      onChange(_objectSpread({}, textProps, {\n        x: e.target.x(),\n        y: e.target.y()\n      }));\n    },\n    onTransformEnd: e => {\n      // transformer is changing scale\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // we will reset it back\n\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange(_objectSpread({}, textProps, {\n        x: node.x(),\n        y: node.y(),\n        rotation: node.rotation(),\n        width: node.width() * scaleX,\n        height: node.height() * scaleY\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Text, Object.assign({\n    text: text\n  }, textProps.style, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), isSelected && React.createElement(Transformer, {\n    ref: trRef,\n    resizeEnabled: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport default TextElement;","map":{"version":3,"sources":["/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/components/DrawingComponents/TextElement.js"],"names":["React","Text","Transformer","Group","TextElement","shapeProps","isSelected","onSelect","onChange","text","style","textProps","id","x","y","rotation","shapeRef","useRef","trRef","useEffect","current","setNode","getLayer","batchDraw","e","target","node","scaleX","scaleY","width","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAUC,IAAV,EAAgBC,WAAhB,EAA6BC,KAA7B,QAA0C,aAA1C;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACpBC,EAAAA,UADoB;AAEpBC,EAAAA,UAFoB;AAGpBC,EAAAA,QAHoB;AAIpBC,EAAAA,QAJoB;AAKpBC,EAAAA,IALoB;AAMpBC,EAAAA,KANoB;AAOpBC,EAAAA,SAPoB;AAQpBC,EAAAA,EARoB;AASpBC,EAAAA,CAToB;AAUpBC,EAAAA,CAVoB;AAWpBC,EAAAA;AAXoB,CAAD,KAYd;AACL,QAAMC,QAAQ,GAAGhB,KAAK,CAACiB,MAAN,EAAjB;AACA,QAAMC,KAAK,GAAGlB,KAAK,CAACiB,MAAN,EAAd;AAEAjB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACrB,QAAIb,UAAJ,EAAgB;AACf;AACAY,MAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBL,QAAQ,CAACI,OAA/B;AACAF,MAAAA,KAAK,CAACE,OAAN,CAAcE,QAAd,GAAyBC,SAAzB;AACA;AACD,GAND,EAMG,CAACjB,UAAD,CANH;AAQA,SACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,GAAG,EAAEM,EADN;AAEC,IAAA,QAAQ,EAAEG,QAFX;AAGC,IAAA,OAAO,EAAER,QAHV;AAIC,IAAA,KAAK,EAAEA,QAJR;AAKC,IAAA,GAAG,EAAES,QALN;AAMC,IAAA,CAAC,EAAEH,CANJ;AAOC,IAAA,CAAC,EAAEC,CAPJ;AAQC,IAAA,SAAS,MARV;AASC,IAAA,SAAS,EAAEU,CAAC,IAAI;AACfhB,MAAAA,QAAQ,mBACJG,SADI;AAEPE,QAAAA,CAAC,EAAEW,CAAC,CAACC,MAAF,CAASZ,CAAT,EAFI;AAGPC,QAAAA,CAAC,EAAEU,CAAC,CAACC,MAAF,CAASX,CAAT;AAHI,SAAR;AAKA,KAfF;AAgBC,IAAA,cAAc,EAAEU,CAAC,IAAI;AACpB;AACA,YAAME,IAAI,GAAGV,QAAQ,CAACI,OAAtB;AACA,YAAMO,MAAM,GAAGD,IAAI,CAACC,MAAL,EAAf;AACA,YAAMC,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf,CAJoB,CAMpB;;AACAF,MAAAA,IAAI,CAACC,MAAL,CAAY,CAAZ;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,CAAZ;AACApB,MAAAA,QAAQ,mBACJG,SADI;AAEPE,QAAAA,CAAC,EAAEa,IAAI,CAACb,CAAL,EAFI;AAGPC,QAAAA,CAAC,EAAEY,IAAI,CAACZ,CAAL,EAHI;AAIPC,QAAAA,QAAQ,EAAEW,IAAI,CAACX,QAAL,EAJH;AAKPc,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,KAAeF,MALf;AAMPG,QAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAL,KAAgBF;AANjB,SAAR;AAQA,KAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCC,oBAAC,IAAD;AACC,IAAA,IAAI,EAAEnB;AADP,KAEKE,SAAS,CAACD,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnCD,CADD,EA6CEJ,UAAU,IAAI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEY,KAAlB;AAAyB,IAAA,aAAa,EAAE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7ChB,CADD;AAiDA,CAzED;;AA2EA,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport {  Text, Transformer, Group } from \"react-konva\";\n\nconst TextElement = ({\n\tshapeProps,\n\tisSelected,\n\tonSelect,\n\tonChange,\n\ttext,\n\tstyle,\n\ttextProps,\n\tid,\n\tx,\n\ty,\n\trotation\n}) => {\n\tconst shapeRef = React.useRef();\n\tconst trRef = React.useRef();\n\n\tReact.useEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current.setNode(shapeRef.current);\n\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tkey={id}\n\t\t\t\trotation={rotation}\n\t\t\t\tonClick={onSelect}\n\t\t\t\tonTap={onSelect}\n\t\t\t\tref={shapeRef}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tdraggable\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...textProps,\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y()\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\t// transformer is changing scale\n\t\t\t\t\tconst node = shapeRef.current;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t// we will reset it back\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...textProps,\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation: node.rotation(),\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text\n\t\t\t\t\ttext={text}\n\t\t\t\t\t{...textProps.style}\n\t\t\t\t\t//fontSize=\"12px\"\n\t\t\t\t\t//fontWeight=\"200\"\n\t\t\t\t\t//lineHeight=\"12px\"\n\t\t\t\t\t//fontFamily=\"Anton\"\n\t\t\t\t/>\n\t\t\t</Group>\n\t\t\t{isSelected && <Transformer ref={trRef} resizeEnabled={false} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default TextElement;\n"]},"metadata":{},"sourceType":"module"}