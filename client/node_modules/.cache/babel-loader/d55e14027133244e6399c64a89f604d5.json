{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image, Group } from \"react-konva\";\nimport Konva from \"konva\";\nimport SockImage from \"./SockImage\";\nimport SockImage2 from \"./SockImage2\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\nimport ImageElement from \"./ImageElement\";\nimport { addText, updateText, selectText, addImage, updateImages, selectImage } from \"../../actions/sideActions\";\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textItems: [],\n      selectedShape: \"\"\n    };\n    let stageRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    let sideURL = this.refs.sideStage.toDataURL();\n    console.log(sideURL);\n    this.saveData(\"side\", sideURL);\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    const primary = this.props.drawing.primary;\n    const secondary = this.props.drawing.secondary;\n    const sideText = this.props.side.text;\n    const imageList = this.props.side.images;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"primary-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      ref: \"sideStage\",\n      width: 600,\n      height: 750,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      onMouseDown: e => {\n        this.setState({\n          selectedShape: \"\"\n        });\n        this.props.selectText(\"\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(SockImage2, {\n      blue: primary.blue,\n      red: primary.red,\n      green: primary.green,\n      width: 500,\n      height: 694,\n      src: \"images/socksideview4.png\",\n      shadowBlur: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(SockImage2, {\n      blue: secondary.blue,\n      red: secondary.red,\n      green: secondary.green,\n      width: 500,\n      height: 694,\n      src: \"images/sideheeltoe.png\",\n      shadowBlur: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, sideText.map((data, id) => {\n      return React.createElement(TextElement, {\n        key: id,\n        rotation: data.rotation,\n        x: data.x,\n        y: data.y,\n        text: data.text,\n        id: data.id,\n        textProps: data,\n        isSelected: data.id === this.state.selectedShape,\n        onSelect: () => {\n          this.setState({\n            selectedShape: data.id\n          });\n          this.props.selectText(data.id);\n        },\n        onChange: newAttrs => {\n          const inputs = this.props.side.text.slice();\n          inputs[id] = newAttrs;\n          this.props.updateText(inputs);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }), imageList.map((data, id) => {\n      console.log(data);\n      return React.createElement(ImageElement, {\n        key: id,\n        url: data.src,\n        shapeProps: data,\n        x: data.x,\n        y: data.y,\n        isSelected: data.id === this.state.selectedShape,\n        onSelect: () => {\n          this.setState({\n            selectedShape: data.id\n          });\n          this.props.selectImage(data.id);\n        },\n        onChange: newAttrs => {\n          const inputs = this.props.side.images.slice();\n          console.log(inputs);\n          console.log(newAttrs);\n          inputs[id] = newAttrs;\n          this.props.updateImages(inputs);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side\n});\n\nexport default connect(mapStateToProps, {\n  addText,\n  updateText,\n  selectText,\n  addImage,\n  updateImages,\n  selectImage\n})(SidePreview);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js"],"names":["React","Component","render","Portal","Stage","Layer","Rect","Text","Image","Group","Konva","SockImage","SockImage2","Socks","TextElement","ImageElement","addText","updateText","selectText","addImage","updateImages","selectImage","connect","SidePreview","constructor","props","state","textItems","selectedShape","stageRef","createRef","componentDidUpdate","sideURL","refs","sideStage","toDataURL","console","log","saveData","primary","drawing","secondary","sideText","side","text","imageList","images","e","setState","blue","red","green","map","data","id","rotation","x","y","newAttrs","inputs","slice","src","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,KAA1C,QAAuD,aAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACCC,OADD,EAECC,UAFD,EAGCC,UAHD,EAICC,QAJD,EAKCC,YALD,EAMCC,WAND,QAOO,2BAPP;AASA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BtB,SAA1B,CAAoC;AACnCuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,aAAa,EAAE;AAFH,KAAb;AAIA,QAAIC,QAAQ,GAAG7B,KAAK,CAAC8B,SAAN,EAAf;AACA;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB,QAAIC,OAAO,GAAG,KAAKC,IAAL,CAAUC,SAAV,CAAoBC,SAApB,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SAAKM,QAAL,CAAc,MAAd,EAAsBN,OAAtB;AACA;;AAED9B,EAAAA,MAAM,GAAG;AACR;AACA;AACA;AACA,UAAMqC,OAAO,GAAG,KAAKd,KAAL,CAAWe,OAAX,CAAmBD,OAAnC;AACA,UAAME,SAAS,GAAG,KAAKhB,KAAL,CAAWe,OAAX,CAAmBC,SAArC;AACA,UAAMC,QAAQ,GAAG,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,IAAjC;AACA,UAAMC,SAAS,GAAG,KAAKpB,KAAL,CAAWkB,IAAX,CAAgBG,MAAlC;AAEA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,WAAX;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,WAAW,EAAEC,CAAC,IAAI;AACjB,aAAKC,QAAL,CAAc;AACbpB,UAAAA,aAAa,EAAE;AADF,SAAd;AAGA,aAAKH,KAAL,CAAWP,UAAX,CAAsB,EAAtB;AACA,OANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQC,oBAAC,UAAD;AACC,MAAA,IAAI,EAAEqB,OAAO,CAACU,IADf;AAEC,MAAA,GAAG,EAAEV,OAAO,CAACW,GAFd;AAGC,MAAA,KAAK,EAAEX,OAAO,CAACY,KAHhB;AAIC,MAAA,KAAK,EAAE,GAJR;AAKC,MAAA,MAAM,EAAE,GALT;AAMC,MAAA,GAAG,EAAC,0BANL;AAOC,MAAA,UAAU,EAAE,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAiBC,oBAAC,UAAD;AACC,MAAA,IAAI,EAAEV,SAAS,CAACQ,IADjB;AAEC,MAAA,GAAG,EAAER,SAAS,CAACS,GAFhB;AAGC,MAAA,KAAK,EAAET,SAAS,CAACU,KAHlB;AAIC,MAAA,KAAK,EAAE,GAJR;AAKC,MAAA,MAAM,EAAE,GALT;AAMC,MAAA,GAAG,EAAC,wBANL;AAOC,MAAA,UAAU,EAAE,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBD,CADD,EA4BC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACET,QAAQ,CAACU,GAAT,CAAa,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC3B,aACC,oBAAC,WAAD;AACC,QAAA,GAAG,EAAEA,EADN;AAEC,QAAA,QAAQ,EAAED,IAAI,CAACE,QAFhB;AAGC,QAAA,CAAC,EAAEF,IAAI,CAACG,CAHT;AAIC,QAAA,CAAC,EAAEH,IAAI,CAACI,CAJT;AAKC,QAAA,IAAI,EAAEJ,IAAI,CAACT,IALZ;AAMC,QAAA,EAAE,EAAES,IAAI,CAACC,EANV;AAOC,QAAA,SAAS,EAAED,IAPZ;AAQC,QAAA,UAAU,EACTA,IAAI,CAACC,EAAL,KAAY,KAAK5B,KAAL,CAAWE,aATzB;AAWC,QAAA,QAAQ,EAAE,MAAM;AACf,eAAKoB,QAAL,CAAc;AACbpB,YAAAA,aAAa,EAAEyB,IAAI,CAACC;AADP,WAAd;AAGA,eAAK7B,KAAL,CAAWP,UAAX,CAAsBmC,IAAI,CAACC,EAA3B;AACA,SAhBF;AAiBC,QAAA,QAAQ,EAAEI,QAAQ,IAAI;AACrB,gBAAMC,MAAM,GAAG,KAAKlC,KAAL,CAAWkB,IAAX,CAAgBC,IAAhB,CAAqBgB,KAArB,EAAf;AACAD,UAAAA,MAAM,CAACL,EAAD,CAAN,GAAaI,QAAb;AACA,eAAKjC,KAAL,CAAWR,UAAX,CAAsB0C,MAAtB;AACA,SArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAyBA,KA1BA,CADF,EA4BEd,SAAS,CAACO,GAAV,CAAc,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC5BlB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACA,aACC,oBAAC,YAAD;AACC,QAAA,GAAG,EAAEC,EADN;AAEC,QAAA,GAAG,EAAED,IAAI,CAACQ,GAFX;AAGC,QAAA,UAAU,EAAER,IAHb;AAIC,QAAA,CAAC,EAAEA,IAAI,CAACG,CAJT;AAKC,QAAA,CAAC,EAAEH,IAAI,CAACI,CALT;AAMC,QAAA,UAAU,EACTJ,IAAI,CAACC,EAAL,KAAY,KAAK5B,KAAL,CAAWE,aAPzB;AASC,QAAA,QAAQ,EAAE,MAAM;AACf,eAAKoB,QAAL,CAAc;AACbpB,YAAAA,aAAa,EAAEyB,IAAI,CAACC;AADP,WAAd;AAGA,eAAK7B,KAAL,CAAWJ,WAAX,CAAuBgC,IAAI,CAACC,EAA5B;AACA,SAdF;AAeC,QAAA,QAAQ,EAAEI,QAAQ,IAAI;AACrB,gBAAMC,MAAM,GAAG,KAAKlC,KAAL,CAAWkB,IAAX,CAAgBG,MAAhB,CAAuBc,KAAvB,EAAf;AACAxB,UAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AACAvB,UAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACAC,UAAAA,MAAM,CAACL,EAAD,CAAN,GAAaI,QAAb;AACA,eAAKjC,KAAL,CAAWL,YAAX,CAAwBuC,MAAxB;AACA,SArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAyBA,KA3BA,CA5BF,CA5BD,CADD,CADD,CADD;AA4FA;;AArHkC;;AAwHpC,MAAMG,eAAe,GAAGpC,KAAK,KAAK;AACjCc,EAAAA,OAAO,EAAEd,KAAK,CAACc,OADkB;AAEjCG,EAAAA,IAAI,EAAEjB,KAAK,CAACiB;AAFqB,CAAL,CAA7B;;AAKA,eAAerB,OAAO,CACrBwC,eADqB,EAErB;AAAE9C,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,QAAnC;AAA6CC,EAAAA,YAA7C;AAA2DC,EAAAA;AAA3D,CAFqB,CAAP,CAGbE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image, Group } from \"react-konva\";\nimport Konva from \"konva\";\n\nimport SockImage from \"./SockImage\";\n\nimport SockImage2 from \"./SockImage2\";\nimport { Socks } from \"./constants\";\nimport TextElement from \"./TextElement\";\nimport ImageElement from \"./ImageElement\";\n\nimport {\n\taddText,\n\tupdateText,\n\tselectText,\n\taddImage,\n\tupdateImages,\n\tselectImage\n} from \"../../actions/sideActions\";\n\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttextItems: [],\n\t\t\tselectedShape: \"\"\n\t\t};\n\t\tlet stageRef = React.createRef();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlet sideURL = this.refs.sideStage.toDataURL();\n\t\tconsole.log(sideURL);\n\t\tthis.saveData(\"side\", sideURL);\n\t}\n\n\trender() {\n\t\t// Stage is a div container\n\t\t// Layer is actual canvas element (so you may have several canvases in the stage)\n\t\t// And then we have canvas shapes inside the Layer\n\t\tconst primary = this.props.drawing.primary;\n\t\tconst secondary = this.props.drawing.secondary;\n\t\tconst sideText = this.props.side.text;\n\t\tconst imageList = this.props.side.images;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"primary-color\">\n\t\t\t\t\t<Stage ref=\"sideStage\" width={600} height={750}>\n\t\t\t\t\t\t<Layer\n\t\t\t\t\t\t\tonMouseDown={e => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedShape: \"\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.selectText(\"\");\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<SockImage2\n\t\t\t\t\t\t\t\tblue={primary.blue}\n\t\t\t\t\t\t\t\tred={primary.red}\n\t\t\t\t\t\t\t\tgreen={primary.green}\n\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\theight={694}\n\t\t\t\t\t\t\t\tsrc=\"images/socksideview4.png\"\n\t\t\t\t\t\t\t\tshadowBlur={10}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SockImage2\n\t\t\t\t\t\t\t\tblue={secondary.blue}\n\t\t\t\t\t\t\t\tred={secondary.red}\n\t\t\t\t\t\t\t\tgreen={secondary.green}\n\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\theight={694}\n\t\t\t\t\t\t\t\tsrc=\"images/sideheeltoe.png\"\n\t\t\t\t\t\t\t\tshadowBlur={0}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t{sideText.map((data, id) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TextElement\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\trotation={data.rotation}\n\t\t\t\t\t\t\t\t\t\tx={data.x}\n\t\t\t\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\t\t\t\ttext={data.text}\n\t\t\t\t\t\t\t\t\t\tid={data.id}\n\t\t\t\t\t\t\t\t\t\ttextProps={data}\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tdata.id === this.state.selectedShape\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tselectedShape: data.id\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selectText(data.id);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.props.side.text.slice();\n\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tthis.props.updateText(inputs);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{imageList.map((data, id) => {\n\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ImageElement\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\turl={data.src}\n\t\t\t\t\t\t\t\t\t\tshapeProps={data}\n\t\t\t\t\t\t\t\t\t\tx={data.x}\n\t\t\t\t\t\t\t\t\t\ty={data.y}\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tdata.id === this.state.selectedShape\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tselectedShape: data.id\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tthis.props.selectImage(data.id);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.props.side.images.slice();\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(inputs);\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(newAttrs);\n\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tthis.props.updateImages(inputs);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ addText, updateText, selectText, addImage, updateImages, selectImage }\n)(SidePreview);\n"]},"metadata":{},"sourceType":"module"}