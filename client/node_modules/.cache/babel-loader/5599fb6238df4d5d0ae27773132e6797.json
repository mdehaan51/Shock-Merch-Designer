{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextElement.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Transformer } from \"react-konva\";\n\nconst SquareElement = ({\n  shapeProps,\n  isSelected,\n  onSelect,\n  onChange\n}) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n  React.useEffect(() => {\n    if (isSelected) {\n      // we need to attach transformer manually\n      trRef.current.setNode(shapeRef.current);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [isSelected]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Rect, Object.assign({\n    onClick: onSelect,\n    ref: shapeRef\n  }, shapeProps, {\n    draggable: true,\n    onDragEnd: e => {\n      onChange(_objectSpread({}, shapeProps, {\n        x: e.target.x(),\n        y: e.target.y()\n      }));\n    },\n    onTransformEnd: e => {\n      // transformer is changing scale\n      const node = shapeRef.current;\n      const scaleX = node.scaleX();\n      const scaleY = node.scaleY(); // we will reset it back\n\n      node.scaleX(1);\n      node.scaleY(1);\n      onChange(_objectSpread({}, shapeProps, {\n        x: node.x(),\n        y: node.y(),\n        width: node.width() * scaleX,\n        height: node.height() * scaleY\n      }));\n    },\n    shadowBlur: 1,\n    opacity: 0.7,\n    fillRadialGradientStartPoint: {\n      x: 0,\n      y: 0\n    },\n    fillRadialGradientStartRadius: 0,\n    fillRadialGradientEndPoint: {\n      x: 0,\n      y: 0\n    },\n    fillRadialGradientEndRadius: 70,\n    fillRadialGradientColorStops: [0, \"red\", 0.5, \"yellow\", 1, \"blue\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), isSelected && React.createElement(Transformer, {\n    ref: trRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nexport default SquareElement;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextElement.js"],"names":["React","Component","render","Stage","Layer","Rect","Transformer","SquareElement","shapeProps","isSelected","onSelect","onChange","shapeRef","useRef","trRef","useEffect","current","setNode","getLayer","batchDraw","e","x","target","y","node","scaleX","scaleY","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,WAA7B,QAAgD,aAAhD;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAAoD;AACzE,QAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,EAAjB;AACA,QAAMC,KAAK,GAAGd,KAAK,CAACa,MAAN,EAAd;AAEAb,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACrB,QAAIN,UAAJ,EAAgB;AACf;AACAK,MAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBL,QAAQ,CAACI,OAA/B;AACAF,MAAAA,KAAK,CAACE,OAAN,CAAcE,QAAd,GAAyBC,SAAzB;AACA;AACD,GAND,EAMG,CAACV,UAAD,CANH;AAQA,SACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AACC,IAAA,OAAO,EAAEC,QADV;AAEC,IAAA,GAAG,EAAEE;AAFN,KAGKJ,UAHL;AAIC,IAAA,SAAS,MAJV;AAKC,IAAA,SAAS,EAAEY,CAAC,IAAI;AACfT,MAAAA,QAAQ,mBACJH,UADI;AAEPa,QAAAA,CAAC,EAAED,CAAC,CAACE,MAAF,CAASD,CAAT,EAFI;AAGPE,QAAAA,CAAC,EAAEH,CAAC,CAACE,MAAF,CAASC,CAAT;AAHI,SAAR;AAKA,KAXF;AAYC,IAAA,cAAc,EAAEH,CAAC,IAAI;AACpB;AACA,YAAMI,IAAI,GAAGZ,QAAQ,CAACI,OAAtB;AACA,YAAMS,MAAM,GAAGD,IAAI,CAACC,MAAL,EAAf;AACA,YAAMC,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf,CAJoB,CAMpB;;AACAF,MAAAA,IAAI,CAACC,MAAL,CAAY,CAAZ;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,CAAZ;AACAf,MAAAA,QAAQ,mBACJH,UADI;AAEPa,QAAAA,CAAC,EAAEG,IAAI,CAACH,CAAL,EAFI;AAGPE,QAAAA,CAAC,EAAEC,IAAI,CAACD,CAAL,EAHI;AAIPI,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,KAAeF,MAJf;AAKPG,QAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAL,KAAgBF;AALjB,SAAR;AAOA,KA5BF;AA6BC,IAAA,UAAU,EAAE,CA7Bb;AA8BC,IAAA,OAAO,EAAE,GA9BV;AA+BC,IAAA,4BAA4B,EAAE;AAAEL,MAAAA,CAAC,EAAE,CAAL;AAAQE,MAAAA,CAAC,EAAE;AAAX,KA/B/B;AAgCC,IAAA,6BAA6B,EAAE,CAhChC;AAiCC,IAAA,0BAA0B,EAAE;AAAEF,MAAAA,CAAC,EAAE,CAAL;AAAQE,MAAAA,CAAC,EAAE;AAAX,KAjC7B;AAkCC,IAAA,2BAA2B,EAAE,EAlC9B;AAmCC,IAAA,4BAA4B,EAAE,CAC7B,CAD6B,EAE7B,KAF6B,EAG7B,GAH6B,EAI7B,QAJ6B,EAK7B,CAL6B,EAM7B,MAN6B,CAnC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,EA6CEd,UAAU,IAAI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7ChB,CADD;AAiDA,CA7DD;;AA+DA,eAAeP,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Transformer } from \"react-konva\";\n\nconst SquareElement = ({ shapeProps, isSelected, onSelect, onChange }) => {\n\tconst shapeRef = React.useRef();\n\tconst trRef = React.useRef();\n\n\tReact.useEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current.setNode(shapeRef.current);\n\t\t\ttrRef.current.getLayer().batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Rect\n\t\t\t\tonClick={onSelect}\n\t\t\t\tref={shapeRef}\n\t\t\t\t{...shapeProps}\n\t\t\t\tdraggable\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y()\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\t// transformer is changing scale\n\t\t\t\t\tconst node = shapeRef.current;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\n\t\t\t\t\t// we will reset it back\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\t\t\t\t\tonChange({\n\t\t\t\t\t\t...shapeProps,\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tshadowBlur={1}\n\t\t\t\topacity={0.7}\n\t\t\t\tfillRadialGradientStartPoint={{ x: 0, y: 0 }}\n\t\t\t\tfillRadialGradientStartRadius={0}\n\t\t\t\tfillRadialGradientEndPoint={{ x: 0, y: 0 }}\n\t\t\t\tfillRadialGradientEndRadius={70}\n\t\t\t\tfillRadialGradientColorStops={[\n\t\t\t\t\t0,\n\t\t\t\t\t\"red\",\n\t\t\t\t\t0.5,\n\t\t\t\t\t\"yellow\",\n\t\t\t\t\t1,\n\t\t\t\t\t\"blue\"\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{isSelected && <Transformer ref={trRef} />}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default SquareElement;\n"]},"metadata":{},"sourceType":"module"}