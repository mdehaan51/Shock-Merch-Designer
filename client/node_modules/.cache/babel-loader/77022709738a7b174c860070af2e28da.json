{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js\";\nimport React from \"react\";\nimport \"../styles/App.css\";\n\nconst RequestForm = ({\n  onSubmit\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    id: \"contact-form\",\n    onSubmit: onSubmit,\n    method: \"POST\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Business Name\",\n    id: \"business-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"tel\",\n    placeholder: \"Phone Number\",\n    id: \"phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"City, State\",\n    id: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Country\",\n    id: \"country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"materialize-textarea\",\n    type: \"text\",\n    placeholder: \"Give us some details about what you need!\",\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst HelpForm = ({\n  onClick\n}) => {\n  return React.createElement(\"form\", {\n    className: \"modal-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Yes!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Show Me The Tutorial\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"No Thanks!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Take Me Back to the Builder\"))));\n};\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch(\"/\");\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const name = document.getElementById(\"name\").value;\n      const business = document.getElementById(\"business-name\").value;\n      const email = document.getElementById(\"email\").value;\n      const phone = document.getElementById(\"phone\").value;\n      const city = document.getElementById(\"city\").value;\n      const country = document.getElementById(\"country\").value;\n      const message = document.getElementById(\"message\").value;\n      fetch(\"/send\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          business: business,\n          email: email,\n          phone: phone,\n          city: city,\n          country: country,\n          messsage: message\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(\"here is the response: \", res);\n      }).catch(err => {\n        console.error(\"here is the error: \", err);\n      });\n    };\n\n    this.state = {\n      resonse: \"\",\n      email: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  /*.then((res) => res.json())\n   \t\t.then((res) => {\n     \tconsole.log('here is the response: ', res);\n   \t\t})\n   \t\t.catch((err) => {\n     \t\tconsole.error('here is the error: ', err);\n   \t\t})*/\n  resetForm() {\n    document.getElementById(\"contact-form\").reset();\n  }\n\n  render() {\n    let showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n    let form;\n    let backgroundImage;\n\n    if (this.props.type === \"request\") {\n      backgroundImage = \"images/modalbackground.jpg\";\n      form = React.createElement(RequestForm, {\n        onClick: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    } else if (this.props.type === \"help\") {\n      backgroundImage = \"images/helpmodalbackground.jpg\";\n      form = React.createElement(HelpForm, {\n        onClick: this.props.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: showHideClassName,\n      ref: this.props.reference,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"modal-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      className: \"close-modal\",\n      src: \"images/close.png\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"\",\n      className: \"modal-background-dimmer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.props.title), form));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/Modal.js"],"names":["React","RequestForm","onSubmit","HelpForm","onClick","Modal","Component","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","name","document","getElementById","value","business","email","phone","city","country","method","headers","Accept","JSON","stringify","messsage","then","res","console","log","catch","err","error","state","resonse","componentDidMount","setState","express","resetForm","reset","render","showHideClassName","show","form","backgroundImage","type","bind","handleClose","reference","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../styles/App.css\";\n\nconst RequestForm = ({ onSubmit }) => {\n\treturn (\n\t\t<form\n\t\t\tclassName=\"modal-form\"\n\t\t\tid=\"contact-form\"\n\t\t\tonSubmit={onSubmit}\n\t\t\tmethod=\"POST\"\n\t\t>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"text\" placeholder=\"Name\" id=\"name\" />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Business Name\"\n\t\t\t\t\tid=\"business-name\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"email\" placeholder=\"Email Address\" id=\"email\" />\n\t\t\t\t<input type=\"tel\" placeholder=\"Phone Number\" id=\"phone\" />\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<input type=\"text\" placeholder=\"City, State\" id=\"city\" />\n\t\t\t\t<input type=\"text\" placeholder=\"Country\" id=\"country\" />\n\t\t\t</div>\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"materialize-textarea\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Give us some details about what you need!\"\n\t\t\t\t\tid=\"message\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button className=\"button\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nconst HelpForm = ({ onClick }) => {\n\treturn (\n\t\t<form className=\"modal-form\">\n\t\t\t<div className=\"form-row\">\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"button\" onClick={onClick}>\n\t\t\t\t\t\tYes!\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Show Me The Tutorial</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"button\" onClick={onClick}>\n\t\t\t\t\t\tNo Thanks!\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>Take Me Back to the Builder</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nclass Modal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tresonse: \"\",\n\t\t\temail: \"\"\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tthis.callApi()\n\t\t\t.then(res => this.setState({ response: res.express }))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tcallApi = async () => {\n\t\tconst response = await fetch(\"/\");\n\t\tconst body = await response.json();\n\t\tif (response.status !== 200) throw Error(body.message);\n\n\t\treturn body;\n\t};\n\n\thandleSubmit = async e => {\n\t\te.preventDefault();\n\t\tconst name = document.getElementById(\"name\").value;\n\t\tconst business = document.getElementById(\"business-name\").value;\n\t\tconst email = document.getElementById(\"email\").value;\n\t\tconst phone = document.getElementById(\"phone\").value;\n\t\tconst city = document.getElementById(\"city\").value;\n\t\tconst country = document.getElementById(\"country\").value;\n\t\tconst message = document.getElementById(\"message\").value;\n\t\tfetch(\"/send\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name,\n\t\t\t\tbusiness: business,\n\t\t\t\temail: email,\n\t\t\t\tphone: phone,\n\t\t\t\tcity: city,\n\t\t\t\tcountry: country,\n\t\t\t\tmesssage: message\n\t\t\t})\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(\"here is the response: \", res);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(\"here is the error: \", err);\n\t\t\t});\n\t};\n\n\t/*.then((res) => res.json())\n  \t\t.then((res) => {\n    \tconsole.log('here is the response: ', res);\n  \t\t})\n  \t\t.catch((err) => {\n    \t\tconsole.error('here is the error: ', err);\n  \t\t})*/\n\n\tresetForm() {\n\t\tdocument.getElementById(\"contact-form\").reset();\n\t}\n\n\trender() {\n\t\tlet showHideClassName = this.props.show\n\t\t\t? \"modal display-block\"\n\t\t\t: \"modal display-none\";\n\t\tlet form;\n\t\tlet backgroundImage;\n\t\tif (this.props.type === \"request\") {\n\t\t\tbackgroundImage = \"images/modalbackground.jpg\";\n\t\t\tform = <RequestForm onClick={this.handleSubmit.bind(this)} />;\n\t\t} else if (this.props.type === \"help\") {\n\t\t\tbackgroundImage = \"images/helpmodalbackground.jpg\";\n\t\t\tform = <HelpForm onClick={this.props.handleClose} />;\n\t\t}\n\t\treturn (\n\t\t\t<div className={showHideClassName} ref={this.props.reference}>\n\t\t\t\t<section className=\"modal-main\">\n\t\t\t\t\t<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"close-modal\"\n\t\t\t\t\t\tsrc=\"images/close.png\"\n\t\t\t\t\t\tonClick={this.props.handleClose}\n\t\t\t\t\t/>\n\t\t\t\t\t{/*<img\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tclassName=\"modal-background\"\n\t\t\t\t\t\tsrc={backgroundImage}\n\t\t\t\t\t/>*/}\n\t\t\t\t\t<img alt=\"\" className=\"modal-background-dimmer\" />\n\t\t\t\t\t<h2>{this.props.title}</h2>\n\t\t\t\t\t{form}\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}