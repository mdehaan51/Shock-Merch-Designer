{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js\";\nimport React from \"react\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rotateObject = () => {\n      let rotation = this.state.rotation;\n      let newRotation = rotation + 90;\n      this.setState({\n        rotation: newRotation\n      });\n    };\n\n    this.deleteObject = id => {\n      console.log(\"DELETING OBJECT\");\n      this.props.deleteComponent(id);\n    };\n\n    this.onDragStart = (ev, id) => {\n      this.props.onDragStart(ev, id);\n    };\n\n    this.handleStop = (ev, width, height) => {\n      let position = this.refs[this.props.pieceId].getBoundingClientRect();\n      console.log(position);\n      let left = ev.clientX;\n      let top = ev.clientY;\n      let right = left + width;\n      let bottom = top + height; //this.props.saveLocation(left, top, right, bottom);\n    };\n\n    this.selectElement = (ev, id) => {\n      console.log(\"selecting\" + id);\n      this.props.saveActiveItem(id); //if (this.props.currentlyActive == id) {\n\n      if (this.state.active === true) {\n        this.setState({\n          active: false\n        });\n      } else {\n        this.setState({\n          active: true\n        });\n        this.props.saveActiveItem(id); //}\n      }\n    };\n\n    this.state = {\n      itemLocations: [],\n      rotation: 0,\n      scale: 1,\n      active: false,\n      locationX: \"\",\n      locationY: \"\"\n    };\n  }\n\n  componentDidMount(e) {\n    this.setState({\n      scale: this.props.scale\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.scale !== this.props.scale) {\n      this.setState({\n        scale: nextProps.scale\n      });\n    }\n  }\n\n  render() {\n    let itemWidth = this.props.width / this.props.grid.width * this.props.gridWidth;\n    let itemHeight = this.props.height / this.props.grid.height * this.props.gridHeight; //let rotation = this.state.rotation;\n\n    let containerSize = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\"\n    };\n\n    if (this.state.rotation === 90 || this.state.rotation === 270) {\n      containerSize = {\n        width: itemHeight + \"px\",\n        height: itemWidth + \"px\"\n      };\n    }\n\n    const size = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      transform: \"translate(-50%,-50%) rotate(\".concat(this.state.rotation, \"deg)\")\n    };\n    return React.createElement(Draggable, {\n      bounds: \"parent\",\n      defaultPosition: {\n        x: this.props.xLocation - itemWidth,\n        y: this.props.yLocation - itemHeight\n      },\n      position: {\n        x: this.props.xLocation - itemWidth,\n        y: this.props.yLocation - itemHeight\n      },\n      grid: [1, 1],\n      scale: 1,\n      onStart: ev => this.onDragStart(ev, this.props.pieceId),\n      onDrag: this.onDrag,\n      onStop: ev => this.handleStop(ev, itemWidth, itemHeight),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.props.pieceId,\n      className: \"grid-item \".concat(this.state.active === true ? \"active\" : \"\"),\n      style: containerSize,\n      onClick: ev => this.selectElement(ev, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"object-img\",\n      style: size,\n      alt: \"\",\n      draggable: true,\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), this.state.active ? React.createElement(\"div\", {\n      className: \"object-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(DeleteComponent, {\n      deleteComponent: () => {\n        this.deleteObject(this.props.pieceId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(RotateObject, {\n      rotateComponent: this.rotateObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  grid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js"],"names":["React","Draggable","DeleteComponent","RotateObject","connect","GridObjectItem","Component","constructor","props","rotateObject","rotation","state","newRotation","setState","deleteObject","id","console","log","deleteComponent","onDragStart","ev","handleStop","width","height","position","refs","pieceId","getBoundingClientRect","left","clientX","top","clientY","right","bottom","selectElement","saveActiveItem","active","itemLocations","scale","locationX","locationY","componentDidMount","e","componentWillReceiveProps","nextProps","render","itemWidth","grid","gridWidth","itemHeight","gridHeight","containerSize","size","transform","x","xLocation","y","yLocation","onDrag","img","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAuBnBC,YAvBmB,GAuBJ,MAAM;AACpB,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACA,UAAIE,WAAW,GAAGF,QAAQ,GAAG,EAA7B;AACA,WAAKG,QAAL,CAAc;AACbH,QAAAA,QAAQ,EAAEE;AADG,OAAd;AAGA,KA7BkB;;AAAA,SA+BnBE,YA/BmB,GA+BJC,EAAE,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAKT,KAAL,CAAWU,eAAX,CAA2BH,EAA3B;AACA,KAlCkB;;AAAA,SAoCnBI,WApCmB,GAoCL,CAACC,EAAD,EAAKL,EAAL,KAAY;AACzB,WAAKP,KAAL,CAAWW,WAAX,CAAuBC,EAAvB,EAA2BL,EAA3B;AACA,KAtCkB;;AAAA,SAwCnBM,UAxCmB,GAwCN,CAACD,EAAD,EAAKE,KAAL,EAAYC,MAAZ,KAAuB;AACnC,UAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAU,KAAKjB,KAAL,CAAWkB,OAArB,EAA8BC,qBAA9B,EAAf;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,UAAII,IAAI,GAAGR,EAAE,CAACS,OAAd;AACA,UAAIC,GAAG,GAAGV,EAAE,CAACW,OAAb;AACA,UAAIC,KAAK,GAAGJ,IAAI,GAAGN,KAAnB;AACA,UAAIW,MAAM,GAAGH,GAAG,GAAGP,MAAnB,CANmC,CAOnC;AACA,KAhDkB;;AAAA,SAkDnBW,aAlDmB,GAkDH,CAACd,EAAD,EAAKL,EAAL,KAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,EAA1B;AACA,WAAKP,KAAL,CAAW2B,cAAX,CAA0BpB,EAA1B,EAF2B,CAG3B;;AACA,UAAI,KAAKJ,KAAL,CAAWyB,MAAX,KAAsB,IAA1B,EAAgC;AAC/B,aAAKvB,QAAL,CAAc;AAAEuB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,OAFD,MAEO;AACN,aAAKvB,QAAL,CAAc;AAAEuB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,aAAK5B,KAAL,CAAW2B,cAAX,CAA0BpB,EAA1B,EAFM,CAGN;AACA;AACD,KA7DkB;;AAElB,SAAKJ,KAAL,GAAa;AACZ0B,MAAAA,aAAa,EAAE,EADH;AAEZ3B,MAAAA,QAAQ,EAAE,CAFE;AAGZ4B,MAAAA,KAAK,EAAE,CAHK;AAIZF,MAAAA,MAAM,EAAE,KAJI;AAKZG,MAAAA,SAAS,EAAE,EALC;AAMZC,MAAAA,SAAS,EAAE;AANC,KAAb;AAQA;;AAEDC,EAAAA,iBAAiB,CAACC,CAAD,EAAI;AACpB,SAAK7B,QAAL,CAAc;AACbyB,MAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAW8B;AADL,KAAd;AAGA;;AACDK,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACpC,QAAIA,SAAS,CAACN,KAAV,KAAoB,KAAK9B,KAAL,CAAW8B,KAAnC,EAA0C;AACzC,WAAKzB,QAAL,CAAc;AAAEyB,QAAAA,KAAK,EAAEM,SAAS,CAACN;AAAnB,OAAd;AACA;AACD;;AA0CDO,EAAAA,MAAM,GAAG;AACR,QAAIC,SAAS,GACX,KAAKtC,KAAL,CAAWc,KAAX,GAAmB,KAAKd,KAAL,CAAWuC,IAAX,CAAgBzB,KAApC,GAA6C,KAAKd,KAAL,CAAWwC,SADzD;AAEA,QAAIC,UAAU,GACZ,KAAKzC,KAAL,CAAWe,MAAX,GAAoB,KAAKf,KAAL,CAAWuC,IAAX,CAAgBxB,MAArC,GACA,KAAKf,KAAL,CAAW0C,UAFZ,CAHQ,CAMR;;AACA,QAAIC,aAAa,GAAG;AACnB7B,MAAAA,KAAK,EAAEwB,SAAS,GAAG,IADA;AAEnBvB,MAAAA,MAAM,EAAE0B,UAAU,GAAG;AAFF,KAApB;;AAIA,QAAI,KAAKtC,KAAL,CAAWD,QAAX,KAAwB,EAAxB,IAA8B,KAAKC,KAAL,CAAWD,QAAX,KAAwB,GAA1D,EAA+D;AAC9DyC,MAAAA,aAAa,GAAG;AACf7B,QAAAA,KAAK,EAAE2B,UAAU,GAAG,IADL;AAEf1B,QAAAA,MAAM,EAAEuB,SAAS,GAAG;AAFL,OAAhB;AAIA;;AACD,UAAMM,IAAI,GAAG;AACZ9B,MAAAA,KAAK,EAAEwB,SAAS,GAAG,IADP;AAEZvB,MAAAA,MAAM,EAAE0B,UAAU,GAAG,IAFT;AAGZI,MAAAA,SAAS,wCAAiC,KAAK1C,KAAL,CAAWD,QAA5C;AAHG,KAAb;AAMA,WACC,oBAAC,SAAD;AACC,MAAA,MAAM,EAAC,QADR;AAEC,MAAA,eAAe,EAAE;AAChB4C,QAAAA,CAAC,EAAE,KAAK9C,KAAL,CAAW+C,SAAX,GAAuBT,SADV;AAEhBU,QAAAA,CAAC,EAAE,KAAKhD,KAAL,CAAWiD,SAAX,GAAuBR;AAFV,OAFlB;AAMC,MAAA,QAAQ,EAAE;AACTK,QAAAA,CAAC,EAAE,KAAK9C,KAAL,CAAW+C,SAAX,GAAuBT,SADjB;AAETU,QAAAA,CAAC,EAAE,KAAKhD,KAAL,CAAWiD,SAAX,GAAuBR;AAFjB,OANX;AAUC,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAVP;AAWC,MAAA,KAAK,EAAE,CAXR;AAYC,MAAA,OAAO,EAAE7B,EAAE,IAAI,KAAKD,WAAL,CAAiBC,EAAjB,EAAqB,KAAKZ,KAAL,CAAWkB,OAAhC,CAZhB;AAaC,MAAA,MAAM,EAAE,KAAKgC,MAbd;AAcC,MAAA,MAAM,EAAEtC,EAAE,IAAI,KAAKC,UAAL,CAAgBD,EAAhB,EAAoB0B,SAApB,EAA+BG,UAA/B,CAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBC;AACC,MAAA,GAAG,EAAE,KAAKzC,KAAL,CAAWkB,OADjB;AAEC,MAAA,SAAS,sBACR,KAAKf,KAAL,CAAWyB,MAAX,KAAsB,IAAtB,GAA6B,QAA7B,GAAwC,EADhC,CAFV;AAKC,MAAA,KAAK,EAAEe,aALR;AAMC,MAAA,OAAO,EAAE/B,EAAE,IAAI,KAAKc,aAAL,CAAmBd,EAAnB,EAAuB,KAAKZ,KAAL,CAAWkB,OAAlC,CANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQC;AACC,MAAA,SAAS,EAAC,YADX;AAEC,MAAA,KAAK,EAAE0B,IAFR;AAGC,MAAA,GAAG,EAAC,EAHL;AAIC,MAAA,SAAS,MAJV;AAKC,MAAA,GAAG,EAAE,KAAK5C,KAAL,CAAWmD,GALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAeE,KAAKhD,KAAL,CAAWyB,MAAX,GACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,eAAD;AACC,MAAA,eAAe,EAAE,MAAM;AACtB,aAAKtB,YAAL,CAAkB,KAAKN,KAAL,CAAWkB,OAA7B;AACA,OAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAMC,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKjB,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADA,GAUA,EAzBF,CAhBD,CADD;AA+CA;;AAtI2C;;AAyI7C,MAAMmD,eAAe,GAAGjD,KAAK,KAAK;AACjCkD,EAAAA,IAAI,EAAElD,KAAK,CAACkD,IADqB;AAEjCd,EAAAA,IAAI,EAAEpC,KAAK,CAACoC;AAFqB,CAAL,CAA7B;;AAKA,eAAe3C,OAAO,CAACwD,eAAD,CAAP,CAAyBvD,cAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titemLocations: [],\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tactive: false,\n\t\t\tlocationX: \"\",\n\t\t\tlocationY: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount(e) {\n\t\tthis.setState({\n\t\t\tscale: this.props.scale\n\t\t});\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.scale !== this.props.scale) {\n\t\t\tthis.setState({ scale: nextProps.scale });\n\t\t}\n\t}\n\n\trotateObject = () => {\n\t\tlet rotation = this.state.rotation;\n\t\tlet newRotation = rotation + 90;\n\t\tthis.setState({\n\t\t\trotation: newRotation\n\t\t});\n\t};\n\n\tdeleteObject = id => {\n\t\tconsole.log(\"DELETING OBJECT\");\n\t\tthis.props.deleteComponent(id);\n\t};\n\n\tonDragStart = (ev, id) => {\n\t\tthis.props.onDragStart(ev, id);\n\t};\n\n\thandleStop = (ev, width, height) => {\n\t\tlet position = this.refs[this.props.pieceId].getBoundingClientRect();\n\t\tconsole.log(position);\n\t\tlet left = ev.clientX;\n\t\tlet top = ev.clientY;\n\t\tlet right = left + width;\n\t\tlet bottom = top + height;\n\t\t//this.props.saveLocation(left, top, right, bottom);\n\t};\n\n\tselectElement = (ev, id) => {\n\t\tconsole.log(\"selecting\" + id);\n\t\tthis.props.saveActiveItem(id);\n\t\t//if (this.props.currentlyActive == id) {\n\t\tif (this.state.active === true) {\n\t\t\tthis.setState({ active: false });\n\t\t} else {\n\t\t\tthis.setState({ active: true });\n\t\t\tthis.props.saveActiveItem(id);\n\t\t\t//}\n\t\t}\n\t};\n\n\trender() {\n\t\tlet itemWidth =\n\t\t\t(this.props.width / this.props.grid.width) * this.props.gridWidth;\n\t\tlet itemHeight =\n\t\t\t(this.props.height / this.props.grid.height) *\n\t\t\tthis.props.gridHeight;\n\t\t//let rotation = this.state.rotation;\n\t\tlet containerSize = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\"\n\t\t};\n\t\tif (this.state.rotation === 90 || this.state.rotation === 270) {\n\t\t\tcontainerSize = {\n\t\t\t\twidth: itemHeight + \"px\",\n\t\t\t\theight: itemWidth + \"px\"\n\t\t\t};\n\t\t}\n\t\tconst size = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttransform: `translate(-50%,-50%) rotate(${this.state.rotation}deg)`\n\t\t};\n\n\t\treturn (\n\t\t\t<Draggable\n\t\t\t\tbounds=\"parent\"\n\t\t\t\tdefaultPosition={{\n\t\t\t\t\tx: this.props.xLocation - itemWidth,\n\t\t\t\t\ty: this.props.yLocation - itemHeight\n\t\t\t\t}}\n\t\t\t\tposition={{\n\t\t\t\t\tx: this.props.xLocation - itemWidth,\n\t\t\t\t\ty: this.props.yLocation - itemHeight\n\t\t\t\t}}\n\t\t\t\tgrid={[1, 1]}\n\t\t\t\tscale={1}\n\t\t\t\tonStart={ev => this.onDragStart(ev, this.props.pieceId)}\n\t\t\t\tonDrag={this.onDrag}\n\t\t\t\tonStop={ev => this.handleStop(ev, itemWidth, itemHeight)}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={this.props.pieceId}\n\t\t\t\t\tclassName={`grid-item ${\n\t\t\t\t\t\tthis.state.active === true ? \"active\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tstyle={containerSize}\n\t\t\t\t\tonClick={ev => this.selectElement(ev, this.props.pieceId)}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"object-img\"\n\t\t\t\t\t\tstyle={size}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\tsrc={this.props.img}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.active ? (\n\t\t\t\t\t\t<div className=\"object-actions\">\n\t\t\t\t\t\t\t<DeleteComponent\n\t\t\t\t\t\t\t\tdeleteComponent={() => {\n\t\t\t\t\t\t\t\t\tthis.deleteObject(this.props.pieceId);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<RotateObject rotateComponent={this.rotateObject} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tgrid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);\n"]},"metadata":{},"sourceType":"module"}