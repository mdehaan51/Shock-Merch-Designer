{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js\";\nimport React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\";\nconst URL = \"images/WhiteSocks.png\";\n\nclass SockImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: \"green\",\n      image: null\n    };\n  }\n\n  componentDidMount() {\n    this.loadImage();\n    this.applyCache();\n  }\n  /*handleClick = () => {\n  \tthis.setState(\n  \t\t{\n  \t\t\tcolor: Konva.Util.getRandomColor()\n  \t\t},\n  \t\t() => {\n  \t\t\t// recache shape when we updated it\n  \t\t\tthis.applyCache();\n  \t\t}\n  \t);\n  };*/\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.applyCache();\n    }\n  }\n\n  loadImage() {\n    this.image = new window.Image();\n    this.image.src = this.props.src;\n    this.image.addEventListener(\"load\", this.handleLoad);\n    this.setState({\n      image: this.image\n    });\n    this.applyCache();\n  }\n\n  applyCache() {\n    this.img.cache();\n    this.img.getLayer().batchDraw();\n  }\n\n  render() {\n    return React.createElement(Image, {\n      filters: [Konva.Filters.RGB],\n      x: 10,\n      y: 10,\n      width: 800,\n      height: 800,\n      image: this.state.image,\n      blue: this.props.blue,\n      red: this.props.red,\n      green: this.props.green,\n      shadowBlur: 10,\n      ref: node => {\n        this.img = node;\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SockImage;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SockImage.js"],"names":["React","Component","Konva","render","Stage","Layer","Rect","Image","useImage","URL","SockImage","state","color","image","componentDidMount","loadImage","applyCache","componentDidUpdate","prevProps","props","window","src","addEventListener","handleLoad","setState","img","cache","getLayer","batchDraw","Filters","RGB","blue","red","green","node","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,aAA1C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,SAAN,SAAwBV,KAAK,CAACC,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACvCU,KADuC,GAC/B;AACPC,MAAAA,KAAK,EAAE,OADA;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,SAAL;AACA,SAAKC,UAAL;AACA;AACD;;;;;;;;;;;;;AAWAC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B,QAAIA,SAAS,KAAK,KAAKC,KAAvB,EAA8B;AAC7B,WAAKH,UAAL;AACA;AACD;;AAEDD,EAAAA,SAAS,GAAG;AACX,SAAKF,KAAL,GAAa,IAAIO,MAAM,CAACb,KAAX,EAAb;AACA,SAAKM,KAAL,CAAWQ,GAAX,GAAiB,KAAKF,KAAL,CAAWE,GAA5B;AACA,SAAKR,KAAL,CAAWS,gBAAX,CAA4B,MAA5B,EAAoC,KAAKC,UAAzC;AACA,SAAKC,QAAL,CAAc;AACbX,MAAAA,KAAK,EAAE,KAAKA;AADC,KAAd;AAGA,SAAKG,UAAL;AACA;;AACDA,EAAAA,UAAU,GAAG;AACZ,SAAKS,GAAL,CAASC,KAAT;AACA,SAAKD,GAAL,CAASE,QAAT,GAAoBC,SAApB;AACA;;AACDzB,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AACC,MAAA,OAAO,EAAE,CAACD,KAAK,CAAC2B,OAAN,CAAcC,GAAf,CADV;AAEC,MAAA,CAAC,EAAE,EAFJ;AAGC,MAAA,CAAC,EAAE,EAHJ;AAIC,MAAA,KAAK,EAAE,GAJR;AAKC,MAAA,MAAM,EAAE,GALT;AAMC,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,KANnB;AAOC,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWY,IAPlB;AAQC,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWa,GARjB;AASC,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,KATnB;AAUC,MAAA,UAAU,EAAE,EAVb;AAWC,MAAA,GAAG,EAAEC,IAAI,IAAI;AACZ,aAAKT,GAAL,GAAWS,IAAX;AACA,OAbF;AAcC,MAAA,OAAO,EAAE,KAAKC,WAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAkBA;;AA1DsC;;AA6DxC,eAAezB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Image } from \"react-konva\";\nimport useImage from \"use-image\";\n\nconst URL = \"images/WhiteSocks.png\";\n\nclass SockImage extends React.Component {\n\tstate = {\n\t\tcolor: \"green\",\n\t\timage: null\n\t};\n\tcomponentDidMount() {\n\t\tthis.loadImage();\n\t\tthis.applyCache();\n\t}\n\t/*handleClick = () => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcolor: Konva.Util.getRandomColor()\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t// recache shape when we updated it\n\t\t\t\tthis.applyCache();\n\t\t\t}\n\t\t);\n\t};*/\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps !== this.props) {\n\t\t\tthis.applyCache();\n\t\t}\n\t}\n\n\tloadImage() {\n\t\tthis.image = new window.Image();\n\t\tthis.image.src = this.props.src;\n\t\tthis.image.addEventListener(\"load\", this.handleLoad);\n\t\tthis.setState({\n\t\t\timage: this.image\n\t\t});\n\t\tthis.applyCache();\n\t}\n\tapplyCache() {\n\t\tthis.img.cache();\n\t\tthis.img.getLayer().batchDraw();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Image\n\t\t\t\tfilters={[Konva.Filters.RGB]}\n\t\t\t\tx={10}\n\t\t\t\ty={10}\n\t\t\t\twidth={800}\n\t\t\t\theight={800}\n\t\t\t\timage={this.state.image}\n\t\t\t\tblue={this.props.blue}\n\t\t\t\tred={this.props.red}\n\t\t\t\tgreen={this.props.green}\n\t\t\t\tshadowBlur={10}\n\t\t\t\tref={node => {\n\t\t\t\t\tthis.img = node;\n\t\t\t\t}}\n\t\t\t\tonClick={this.handleClick}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default SockImage;\n"]},"metadata":{},"sourceType":"module"}