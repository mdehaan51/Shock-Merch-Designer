{"ast":null,"code":"import _objectSpread from \"/home/mdehaan51/highrev-projects/merch-designer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FontPicker from \"font-picker-react\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addFont = () => {\n      this.setState({\n        fontAdded: true\n      });\n    };\n\n    this.addText = () => {\n      console.log(\"text-added\");\n      this.props.addText(\"Insert Text\", this.state.style);\n    };\n\n    this.updateText = e => {\n      let style = this.state.style;\n      let newAttrs = {\n        text: e.target.value,\n        style\n      };\n      console.log(newAttrs);\n    };\n\n    this.state = {\n      fontFamily: \"Open Sans\",\n      sampleText: \"Example\",\n      fontAdded: false,\n      style: {\n        fontFamily: \"Anton\",\n        fontSize: 20,\n        //fontWeight: 200,\n        //lineHeight: 20,\n        fill: \"#ffffff\"\n      },\n      activated: false\n    };\n  }\n\n  compondentWillUpdate() {}\n\n  render() {\n    let selectedText = this.props.selectedText[0]; //if (!selectedText) return null;\n\n    console.log(selectedText);\n    /*selectedText\n    \t? this.setState({\n    \t\t\tactivated: true\n    \t  })\n    \t: this.setState({\n    \t\t\tactivated: false\n    \t  });*/\n\n    return React.createElement(\"div\", {\n      className: \"design-details-container text-editor \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-text-button button hoverable col offset-s1\",\n      onClick: this.addText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Add New Text\")), !selectedText ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text input col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Enter Your Text Here\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-editor-input apply-font\",\n      placeholder: selectedText.text,\n      onChange: this.updateText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"font-picker col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \" col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Choose Your Font\"), React.createElement(FontPicker, {\n      apiKey: \"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\",\n      activeFontFamily: this.state.style.fontFamily,\n      onChange: nextFont => this.setState({\n        style: _objectSpread({}, this.state.style, {\n          fontFamily: nextFont.family\n        })\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Choose Your Text Color\"), React.createElement(ChromePicker, {\n      onChangeComplete: this.onColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Font Size\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Rotation\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Weight\")), React.createElement(\"div\", {\n      className: \"col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Line Height\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side,\n  bottom: state.bottom,\n  top: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/TextEditor.js"],"names":["React","Component","ReactDOM","FontPicker","ChromePicker","connect","TextEditor","constructor","props","addFont","setState","fontAdded","addText","console","log","state","style","updateText","e","newAttrs","text","target","value","fontFamily","sampleText","fontSize","fill","activated","compondentWillUpdate","render","selectedText","nextFont","family","onColorChange","mapStateToProps","drawing","side","bottom","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport FontPicker from \"font-picker-react\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { connect } from \"react-redux\";\n\nclass TextEditor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfontFamily: \"Open Sans\",\n\t\t\tsampleText: \"Example\",\n\t\t\tfontAdded: false,\n\t\t\tstyle: {\n\t\t\t\tfontFamily: \"Anton\",\n\t\t\t\tfontSize: 20,\n\t\t\t\t//fontWeight: 200,\n\t\t\t\t//lineHeight: 20,\n\t\t\t\tfill: \"#ffffff\"\n\t\t\t},\n\t\t\tactivated: false\n\t\t};\n\t}\n\tcompondentWillUpdate() {}\n\n\taddFont = () => {\n\t\tthis.setState({\n\t\t\tfontAdded: true\n\t\t});\n\t};\n\n\taddText = () => {\n\t\tconsole.log(\"text-added\");\n\t\tthis.props.addText(\"Insert Text\", this.state.style);\n\t};\n\n\t/*addText = event => {\n\t\tthis.props.previewText(event.target.value, this.state.style);\n\t};*/\n\tupdateText = e => {\n\t\tlet style = this.state.style;\n\t\tlet newAttrs = {\n\t\t\ttext: e.target.value,\n\t\t\tstyle\n\t\t};\n\t\tconsole.log(newAttrs);\n\t};\n\n\trender() {\n\t\tlet selectedText = this.props.selectedText[0];\n\t\t//if (!selectedText) return null;\n\t\tconsole.log(selectedText);\n\t\t/*selectedText\n\t\t\t? this.setState({\n\t\t\t\t\tactivated: true\n\t\t\t  })\n\t\t\t: this.setState({\n\t\t\t\t\tactivated: false\n\t\t\t  });*/\n\t\treturn (\n\t\t\t<div className=\"design-details-container text-editor \">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-text-button button hoverable col offset-s1\"\n\t\t\t\t\t\tonClick={this.addText}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd New Text\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{!selectedText ? null : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"text input col s6\">\n\t\t\t\t\t\t\t\t<label>Enter Your Text Here</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-editor-input apply-font\"\n\t\t\t\t\t\t\t\t\tplaceholder={selectedText.text}\n\t\t\t\t\t\t\t\t\tonChange={this.updateText}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"font-picker col s6\">\n\t\t\t\t\t\t\t\t<label className=\" col s12\">\n\t\t\t\t\t\t\t\t\tChoose Your Font\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<FontPicker\n\t\t\t\t\t\t\t\t\tapiKey=\"AIzaSyBUSf-r50-odn9JVFU4k4n8nl_fJJ3GBtY\"\n\t\t\t\t\t\t\t\t\tactiveFontFamily={\n\t\t\t\t\t\t\t\t\t\tthis.state.style.fontFamily\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonChange={nextFont =>\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\t...this.state.style,\n\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: nextFont.family\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<label>Choose Your Text Color</label>\n\t\t\t\t\t\t\t\t<ChromePicker\n\t\t\t\t\t\t\t\t\tonChangeComplete={this.onColorChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Font Size</label>\n\t\t\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"px\"\n\t\t\t\t\t\t\t\t\ttype=\"fontSize\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Rotation</label>\n\t\t\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"deg\"\n\t\t\t\t\t\t\t\t\ttype=\"rotation\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Weight</label>\n\t\t\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\ttype=\"weight\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col s6\">\n\t\t\t\t\t\t\t\t\t\t<label>Line Height</label>\n\t\t\t\t\t\t\t\t\t\t{/*<FontSizeSelect\n\t\t\t\t\t\t\t\t\tunit=\"px\"\n\t\t\t\t\t\t\t\t\ttype=\"height\"\n\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\tview={this.props.view}\n\t\t\t\t\t\t\t\t/>*/}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side,\n\tbottom: state.bottom,\n\ttop: state.top\n});\n\nexport default connect(mapStateToProps)(TextEditor);\n"]},"metadata":{},"sourceType":"module"}