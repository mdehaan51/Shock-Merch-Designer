{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/auth/PasswordReset.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { AuthText, AuthTopBar } from \"../constants.js\";\n\nclass PasswordReset extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n\n      if (this.state.password === this.state.password2) {\n        axios.post(\"/api/users/updatePassword\", userData).then(response => {\n          if (response.data.msg === \"Password Updated\") {\n            alert(\"Your Password Was Updated!\"); //this.resetForm();\n          } else {\n            alert(\"There was an error\");\n          }\n        }).catch(error => {\n          console.log(error.data);\n        });\n      } else {\n        alert(\"passwords dont match\");\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      authToken: \"\",\n      errors: {}\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(\"/api/users/reset\", {\n      params: {\n        resetPasswordToken: this.props.match.params.token\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.message === \"User Checks Out\") {\n        this.setState({\n          email: response.data.email\n        });\n      } else {\n        this.setState({\n          error: \"There was an error\"\n        });\n      }\n    }).catch(error => {\n      console.log(error.data);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"valign-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      className: \"container-background\",\n      src: \"images/background.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(AuthTopBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"auth-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(AuthText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-right auth-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s8 offset-s2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      style: {\n        color: \"#dd137b\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Please Enter Your New Password\"))), React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, errors.password2)), React.createElement(\"div\", {\n      className: \"col s12\",\n      style: {\n        paddingLeft: \"11.250px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\",\n        backgroundColor: \"#dd137b\"\n      },\n      type: \"submit\",\n      className: \"btn btn-large waves-effect waves-light hoverable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Reset\")))))));\n  }\n\n}\n\nPasswordReset.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword\n})(PasswordReset);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/auth/PasswordReset.js"],"names":["React","Component","axios","Link","PropTypes","connect","resetPassword","classnames","AuthText","AuthTopBar","PasswordReset","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","password2","post","then","response","data","msg","alert","catch","error","console","log","authToken","errors","componentDidMount","get","params","resetPasswordToken","props","match","token","message","componentWillReceiveProps","nextProps","render","paddingLeft","color","invalid","width","borderRadius","letterSpacing","marginTop","backgroundColor","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { resetPassword } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport { AuthText, AuthTopBar } from \"../constants.js\";\n\nclass PasswordReset extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t\tpassword2: \"\",\n\t\t\tauthToken: \"\",\n\t\t\terrors: {}\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait axios\n\t\t\t.get(\"/api/users/reset\", {\n\t\t\t\tparams: { resetPasswordToken: this.props.match.params.token }\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (response.data.message === \"User Checks Out\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\temail: response.data.email\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: \"There was an error\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error.data);\n\t\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.errors) {\n\t\t\tthis.setState({\n\t\t\t\terrors: nextProps.errors\n\t\t\t});\n\t\t}\n\t}\n\n\tonChange = e => {\n\t\tthis.setState({ [e.target.id]: e.target.value });\n\t};\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tconst userData = {\n\t\t\temail: this.state.email,\n\t\t\tpassword: this.state.password,\n\t\t\tpassword2: this.state.password2\n\t\t};\n\t\tif (this.state.password === this.state.password2) {\n\t\t\taxios\n\t\t\t\t.post(\"/api/users/updatePassword\", userData)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.msg === \"Password Updated\") {\n\t\t\t\t\t\talert(\"Your Password Was Updated!\");\n\t\t\t\t\t\t//this.resetForm();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"There was an error\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error.data);\n\t\t\t\t});\n\t\t} else {\n\t\t\talert(\"passwords dont match\");\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\treturn (\n\t\t\t<div className=\"valign-wrapper\">\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tclassName=\"container-background\"\n\t\t\t\t\tsrc=\"images/background.jpg\"\n\t\t\t\t/>\n\t\t\t\t<AuthTopBar />\n\t\t\t\t<div className=\"auth-left\">\n\t\t\t\t\t<AuthText />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"auth-right auth-details\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col s8 offset-s2\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"col s12\"\n\t\t\t\t\t\t\t\tstyle={{ paddingLeft: \"11.250px\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t<b style={{ color: \"#dd137b\" }}>\n\t\t\t\t\t\t\t\t\t\tPlease Enter Your New Password\n\t\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<form noValidate onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t<div className=\"input-field col s12\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\t\t\terror={errors.password}\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"\", {\n\t\t\t\t\t\t\t\t\t\t\tinvalid: errors.password\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t\t\t\t<span className=\"red-text\">\n\t\t\t\t\t\t\t\t\t\t{errors.password}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"input-field col s12\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.password2}\n\t\t\t\t\t\t\t\t\t\terror={errors.password2}\n\t\t\t\t\t\t\t\t\t\tid=\"password2\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tclassName={classnames(\"\", {\n\t\t\t\t\t\t\t\t\t\t\tinvalid: errors.password2\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password2\">\n\t\t\t\t\t\t\t\t\t\tConfirm Password\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<span className=\"red-text\">\n\t\t\t\t\t\t\t\t\t\t{errors.password2}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"col s12\"\n\t\t\t\t\t\t\t\t\tstyle={{ paddingLeft: \"11.250px\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\twidth: \"150px\",\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"3px\",\n\t\t\t\t\t\t\t\t\t\t\tletterSpacing: \"1.5px\",\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"1rem\",\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"#dd137b\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-large waves-effect waves-light hoverable\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nPasswordReset.propTypes = {\n\tresetPassword: PropTypes.func.isRequired,\n\tauth: PropTypes.object.isRequired,\n\terrors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\terrors: state.errors\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ resetPassword }\n)(PasswordReset);\n"]},"metadata":{},"sourceType":"module"}