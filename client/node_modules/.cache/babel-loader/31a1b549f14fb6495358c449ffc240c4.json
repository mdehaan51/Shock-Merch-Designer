{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/components/DrawingComponents/SideDrawingTools.js\";\nimport React, { Component } from \"react\";\nimport ColorSelect from \"./ColorPicker\";\nimport TextEditor from \"./TextEditor\";\nimport ImageUpload from \"./ImageUpload\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { setPrimarySockColor, setSecondarySockColor } from \"../../actions/drawingActions\";\nimport { addText, updateText, selectText, addImage, updateImages, selectImage, copyImage, deleteImage } from \"../../actions/sideActions\";\nimport { connect } from \"react-redux\";\n\nclass SideDrawingTools extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCompletePrimary = (color, event) => {\n      console.log(color);\n      this.props.setPrimarySockColor(color);\n    };\n\n    this.onChangeCompleteSecondary = (color, event) => {\n      console.log(color);\n      this.props.setSecondarySockColor(color);\n    };\n\n    this.getSelectedItem = (item, type) => {\n      if (type === \"text\") {\n        let allItems = this.props.side.text;\n        let itemDetails = allItems.filter(obj => {\n          return obj.id === item;\n        });\n        return itemDetails;\n      } else if (type === \"image\") {\n        let allItems = this.props.side.images;\n        let itemDetails = allItems.filter(obj => {\n          return obj.id === item;\n        });\n        return itemDetails;\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    let selectedText = this.getSelectedItem(this.props.side.selectedItem, \"text\");\n    let selectedImage = this.getSelectedItem(this.props.side.selectedItem, \"image\");\n    return React.createElement(Tabs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TabList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Change Color\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Add Text\"), React.createElement(Tab, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Add Image\")), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ColorSelect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(TextEditor, {\n      data: this.props.side.text,\n      addText: this.props.addText,\n      updateText: this.props.updateText,\n      selectedText: selectedText,\n      view: \"side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(TabPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ImageUpload, {\n      saveImage: this.props.addImage,\n      selectedImage: selectedImage,\n      addImage: this.props.addImage,\n      copyImage: this.props.copyImage,\n      deleteImage: this.props.deleteImage,\n      view: \"side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing,\n  side: state.side\n});\n\nexport default connect(mapStateToProps, {\n  setPrimarySockColor,\n  setSecondarySockColor,\n  addText,\n  updateText,\n  selectText,\n  addImage,\n  updateImages,\n  selectImage,\n  copyImage,\n  deleteImage\n})(SideDrawingTools);","map":{"version":3,"sources":["/home/mdehaan/dev/sock-design/Shock-Merch-Designer/client/src/components/DrawingComponents/SideDrawingTools.js"],"names":["React","Component","ColorSelect","TextEditor","ImageUpload","Tab","Tabs","TabList","TabPanel","setPrimarySockColor","setSecondarySockColor","addText","updateText","selectText","addImage","updateImages","selectImage","copyImage","deleteImage","connect","SideDrawingTools","constructor","props","onChangeCompletePrimary","color","event","console","log","onChangeCompleteSecondary","getSelectedItem","item","type","allItems","side","text","itemDetails","filter","obj","id","images","state","render","selectedText","selectedItem","selectedImage","mapStateToProps","drawing"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport ColorSelect from \"./ColorPicker\";\nimport TextEditor from \"./TextEditor\";\nimport ImageUpload from \"./ImageUpload\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\n\nimport {\n\tsetPrimarySockColor,\n\tsetSecondarySockColor\n} from \"../../actions/drawingActions\";\nimport {\n\taddText,\n\tupdateText,\n\tselectText,\n\taddImage,\n\tupdateImages,\n\tselectImage,\n\tcopyImage,\n\tdeleteImage\n} from \"../../actions/sideActions\";\nimport { connect } from \"react-redux\";\n\nclass SideDrawingTools extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tonChangeCompletePrimary = (color, event) => {\n\t\tconsole.log(color);\n\t\tthis.props.setPrimarySockColor(color);\n\t};\n\n\tonChangeCompleteSecondary = (color, event) => {\n\t\tconsole.log(color);\n\t\tthis.props.setSecondarySockColor(color);\n\t};\n\n\tgetSelectedItem = (item, type) => {\n\t\tif (type === \"text\") {\n\t\t\tlet allItems = this.props.side.text;\n\t\t\tlet itemDetails = allItems.filter(obj => {\n\t\t\t\treturn obj.id === item;\n\t\t\t});\n\t\t\treturn itemDetails;\n\t\t} else if (type === \"image\") {\n\t\t\tlet allItems = this.props.side.images;\n\t\t\tlet itemDetails = allItems.filter(obj => {\n\t\t\t\treturn obj.id === item;\n\t\t\t});\n\t\t\treturn itemDetails;\n\t\t}\n\t};\n\n\trender() {\n\t\tlet selectedText = this.getSelectedItem(\n\t\t\tthis.props.side.selectedItem,\n\t\t\t\"text\"\n\t\t);\n\t\tlet selectedImage = this.getSelectedItem(\n\t\t\tthis.props.side.selectedItem,\n\t\t\t\"image\"\n\t\t);\n\t\treturn (\n\t\t\t<Tabs>\n\t\t\t\t<TabList>\n\t\t\t\t\t<Tab>Change Color</Tab>\n\t\t\t\t\t<Tab>Add Text</Tab>\n\n\t\t\t\t\t<Tab>Add Image</Tab>\n\t\t\t\t</TabList>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<ColorSelect />\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<TextEditor\n\t\t\t\t\t\tdata={this.props.side.text}\n\t\t\t\t\t\taddText={this.props.addText}\n\t\t\t\t\t\tupdateText={this.props.updateText}\n\t\t\t\t\t\tselectedText={selectedText}\n\t\t\t\t\t\tview=\"side\"\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<ImageUpload\n\t\t\t\t\t\tsaveImage={this.props.addImage}\n\t\t\t\t\t\tselectedImage={selectedImage}\n\t\t\t\t\t\taddImage={this.props.addImage}\n\t\t\t\t\t\tcopyImage={this.props.copyImage}\n\t\t\t\t\t\tdeleteImage={this.props.deleteImage}\n\t\t\t\t\t\tview=\"side\"\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing,\n\tside: state.side\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{\n\t\tsetPrimarySockColor,\n\t\tsetSecondarySockColor,\n\t\taddText,\n\t\tupdateText,\n\t\tselectText,\n\t\taddImage,\n\t\tupdateImages,\n\t\tselectImage,\n\t\tcopyImage,\n\t\tdeleteImage\n\t}\n)(SideDrawingTools);\n"]},"metadata":{},"sourceType":"module"}