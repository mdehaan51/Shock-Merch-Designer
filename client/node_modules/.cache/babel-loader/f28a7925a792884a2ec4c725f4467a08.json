{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/App.js\";\nimport React from \"react\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/NavBar.js\";\nimport GridLayout from \"./components/NewGridLayout.js\";\nimport Modal from \"./components/Modal.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.hideModal = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.setSize = (height, width) => {\n      this.setState({\n        height: parseInt(height),\n        width: parseInt(width)\n      });\n    };\n\n    this.showRequestModal = (type, message) => {\n      this.setState({\n        modalContents: {\n          type: \"request\",\n          title: \"Lets Get This Park Started\"\n        }\n      });\n      this.showModal();\n    };\n\n    this.showHelpModal = (type, message) => {\n      this.setState({\n        modalContents: {\n          type: \"help\",\n          title: \"Unsure of where to start?\"\n        }\n      });\n      this.showModal();\n    };\n\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      height: 250,\n      width: 250,\n      show: false,\n      modalContents: {\n        type: \"What\",\n        title: \"This Is a Message\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Learn React\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.responseToPost));\n  }\n\n}\n/*render() {\n  return (\n    <div className=\"App\">\n      <Navbar\n        setSize={this.setSize}\n        request={this.showRequestModal}\n        help={this.showHelpModal}\n      />\n      <Modal\n        show={this.state.show}\n        handleClose={this.hideModal}\n        title={this.state.modalContents.title}\n        type={this.state.modalContents.type}\n      />\n       <GridLayout width={this.state.width} height={this.state.height} />\n    </div>\n  );\n}\n}*/\n\n\nexport default App;","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/App.js"],"names":["React","Navbar","GridLayout","Modal","App","Component","constructor","props","callApi","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","post","state","text","setState","responseToPost","showModal","show","hideModal","setSize","height","width","parseInt","showRequestModal","type","modalContents","title","showHelpModal","componentDidMount","then","res","express","catch","err","console","log","render","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/NavBar.js\";\nimport GridLayout from \"./components/NewGridLayout.js\";\nimport Modal from \"./components/Modal.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost:'',\n      height: 250,\n      width: 250,\n      show: false,\n      modalContents: {\n        type: \"What\",\n        title: \"This Is a Message\"\n      }\n    };\n  }\n\n    componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  setSize = (height, width) => {\n    this.setState({\n      height: parseInt(height),\n      width: parseInt(width)\n    });\n  };\n  showRequestModal = (type, message) => {\n    this.setState({\n      modalContents: {\n        type: \"request\",\n        title: \"Lets Get This Park Started\"\n      }\n    });\n    this.showModal();\n  };\n  showHelpModal = (type, message) => {\n    this.setState({\n      modalContents: {\n        type: \"help\",\n        title: \"Unsure of where to start?\"\n      }\n    });\n    this.showModal();\n  };\n\n\nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img  className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n\n  /*render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          setSize={this.setSize}\n          request={this.showRequestModal}\n          help={this.showHelpModal}\n        />\n        <Modal\n          show={this.state.show}\n          handleClose={this.hideModal}\n          title={this.state.modalContents.title}\n          type={this.state.modalContents.type}\n        />\n\n        <GridLayout width={this.state.width} height={this.state.height} />\n      </div>\n    );\n  }\n}*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}