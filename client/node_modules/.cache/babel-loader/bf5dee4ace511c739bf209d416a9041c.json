{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/ColorPicker.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CirclePicker } from \"react-color\";\nimport { saveColor } from \"../actions/designActions\";\nimport { connect } from \"react-redux\";\nimport \"react-tabs/style/react-tabs.css\";\nimport \"../styles/DesignSettings.css\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (color, event, name) => {\n      console.log(name);\n      this.props.saveColor(color.hex);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"color-picker-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Primary Color\"), React.createElement(CirclePicker, {\n      label: \"primary\",\n      onChangeComplete: (color, event, name) => this.handleChange(color, event, \"primary\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Secondary Color\"), React.createElement(CirclePicker, {\n      onChangeComplete: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  design: state.design\n});\n\nexport default connect(mapStateToProps, {\n  saveColor\n})(ColorPicker);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/ColorPicker.js"],"names":["React","Component","ReactDOM","CirclePicker","saveColor","connect","ColorPicker","constructor","props","handleChange","color","event","name","console","log","hex","state","render","mapStateToProps","design"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,iCAAP;AACA,OAAO,8BAAP;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKnBC,YALmB,GAKJ,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKJ,KAAL,CAAWJ,SAAX,CAAqBM,KAAK,CAACK,GAA3B;AACA,KARkB;;AAElB,SAAKC,KAAL,GAAa,EAAb;AACA;;AAODC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAC,SADP;AAEC,MAAA,gBAAgB,EAAE,CAACP,KAAD,EAAQC,KAAR,EAAeC,IAAf,KACjB,KAAKH,YAAL,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC,SAAhC,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARD,EASC,oBAAC,YAAD;AAAc,MAAA,gBAAgB,EAAE,KAAKF,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CADD;AAaA;;AAzBkC;;AA4BpC,MAAMS,eAAe,GAAGF,KAAK,KAAK;AACjCG,EAAAA,MAAM,EAAEH,KAAK,CAACG;AADmB,CAAL,CAA7B;;AAIA,eAAed,OAAO,CACrBa,eADqB,EAErB;AAAEd,EAAAA;AAAF,CAFqB,CAAP,CAGbE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { CirclePicker } from \"react-color\";\n\nimport { saveColor } from \"../actions/designActions\";\nimport { connect } from \"react-redux\";\n\nimport \"react-tabs/style/react-tabs.css\";\nimport \"../styles/DesignSettings.css\";\n\nclass ColorPicker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\thandleChange = (color, event, name) => {\n\t\tconsole.log(name);\n\t\tthis.props.saveColor(color.hex);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"color-picker-container\">\n\t\t\t\t<h3>Primary Color</h3>\n\t\t\t\t<CirclePicker\n\t\t\t\t\tlabel=\"primary\"\n\t\t\t\t\tonChangeComplete={(color, event, name) =>\n\t\t\t\t\t\tthis.handleChange(color, event, \"primary\")\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<h3>Secondary Color</h3>\n\t\t\t\t<CirclePicker onChangeComplete={this.handleChange} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdesign: state.design\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ saveColor }\n)(ColorPicker);\n"]},"metadata":{},"sourceType":"module"}