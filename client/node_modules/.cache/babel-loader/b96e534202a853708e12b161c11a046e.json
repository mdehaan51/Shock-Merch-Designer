{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\nimport SockImage from \"./SockImage\";\nimport { Socks } from \"./constants\";\nimport SquareElement from \"./TextElement\";\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputList: [{\n        x: 10,\n        y: 10,\n        width: 100,\n        height: 100,\n        //fill: \"red\",\n        id: \"rect1\"\n      }],\n      selectedShape: \"\"\n    };\n  }\n\n  render() {\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    let primary = this.props.drawing.primary;\n    let secondary = this.props.drawing.secondary;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"primary-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Stage, {\n      width: 800,\n      height: 800,\n      onMouseDown: e => {\n        // deselect when clicked on empty area\n        const clickedOnEmpty = e.target === e.target.getStage();\n        console.log(e.target.getStage());\n\n        if (clickedOnEmpty) {\n          this.setState({\n            selectedShape: null\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.inputList.map((data, id) => {\n      console.log(data);\n      return React.createElement(SquareElement, {\n        key: id,\n        shapeProps: data,\n        isSelected: data.id === this.state.selectedShape,\n        onSelect: () => {\n          console.log(data.id);\n          this.setState({\n            selectedShape: data.id\n          });\n        },\n        onChange: newAttrs => {\n          const inputs = this.state.inputList.slice();\n          inputs[id] = newAttrs;\n          this.setState({\n            inputList: inputs\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }), React.createElement(SockImage, {\n      blue: secondary.blue,\n      red: secondary.red,\n      green: secondary.green,\n      width: 550,\n      height: 694,\n      src: \"images/socksideview4.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(SockImage, {\n      blue: primary.blue,\n      red: primary.red,\n      green: primary.green,\n      width: 500,\n      height: 694,\n      src: \"images/socksideview4.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  drawing: state.drawing\n});\n\nexport default connect(mapStateToProps)(SidePreview);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/merch-designer/client/src/components/DrawingComponents/SidePreview.js"],"names":["React","Component","render","Portal","Stage","Layer","Rect","Text","Image","Konva","SockImage","Socks","SquareElement","connect","SidePreview","constructor","props","state","inputList","x","y","width","height","id","selectedShape","primary","drawing","secondary","e","clickedOnEmpty","target","getStage","console","log","setState","map","data","newAttrs","inputs","slice","blue","red","green","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Portal from \"./Portal\";\nimport { Stage, Layer, Rect, Text, Image } from \"react-konva\";\nimport Konva from \"konva\";\n\nimport SockImage from \"./SockImage\";\nimport { Socks } from \"./constants\";\nimport SquareElement from \"./TextElement\";\n\nimport { connect } from \"react-redux\";\n\nclass SidePreview extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinputList: [\n\t\t\t\t{\n\t\t\t\t\tx: 10,\n\t\t\t\t\ty: 10,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 100,\n\t\t\t\t\t//fill: \"red\",\n\t\t\t\t\tid: \"rect1\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tselectedShape: \"\"\n\t\t};\n\t}\n\n\trender() {\n\t\t// Stage is a div container\n\t\t// Layer is actual canvas element (so you may have several canvases in the stage)\n\t\t// And then we have canvas shapes inside the Layer\n\t\tlet primary = this.props.drawing.primary;\n\t\tlet secondary = this.props.drawing.secondary;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"primary-color\">\n\t\t\t\t\t<Stage\n\t\t\t\t\t\twidth={800}\n\t\t\t\t\t\theight={800}\n\t\t\t\t\t\tonMouseDown={e => {\n\t\t\t\t\t\t\t// deselect when clicked on empty area\n\t\t\t\t\t\t\tconst clickedOnEmpty =\n\t\t\t\t\t\t\t\te.target === e.target.getStage();\n\t\t\t\t\t\t\tconsole.log(e.target.getStage());\n\t\t\t\t\t\t\tif (clickedOnEmpty) {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedShape: null\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t{/*<Portal>*/}\n\t\t\t\t\t\t\t{this.state.inputList.map((data, id) => {\n\t\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<SquareElement\n\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\tshapeProps={data}\n\t\t\t\t\t\t\t\t\t\tisSelected={\n\t\t\t\t\t\t\t\t\t\t\tdata.id === this.state.selectedShape\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(data.id);\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tselectedShape: data.id\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonChange={newAttrs => {\n\t\t\t\t\t\t\t\t\t\t\tconst inputs = this.state.inputList.slice();\n\t\t\t\t\t\t\t\t\t\t\tinputs[id] = newAttrs;\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tinputList: inputs\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t{/*<Portal>*/}\n\t\t\t\t\t\t\t<SockImage\n\t\t\t\t\t\t\t\tblue={secondary.blue}\n\t\t\t\t\t\t\t\tred={secondary.red}\n\t\t\t\t\t\t\t\tgreen={secondary.green}\n\t\t\t\t\t\t\t\twidth={550}\n\t\t\t\t\t\t\t\theight={694}\n\t\t\t\t\t\t\t\tsrc=\"images/socksideview4.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<SockImage\n\t\t\t\t\t\t\t\tblue={primary.blue}\n\t\t\t\t\t\t\t\tred={primary.red}\n\t\t\t\t\t\t\t\tgreen={primary.green}\n\t\t\t\t\t\t\t\twidth={500}\n\t\t\t\t\t\t\t\theight={694}\n\t\t\t\t\t\t\t\tsrc=\"images/socksideview4.png\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>\n\t\t\t\t{/*<div className=\"secondary-color\">\n\t\t\t\t\t<Stage width={800} height={800}>\n\t\t\t\t\t\t<Layer>\n\t\t\t\t\t\t\t<SockImage\n\t\t\t\t\t\t\t\tblue={color.blue}\n\t\t\t\t\t\t\t\tred={color.red}\n\t\t\t\t\t\t\t\tgreen={color.green}\n\t\t\t\t\t\t\t\tsrc={null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Layer>\n\t\t\t\t\t</Stage>\n\t\t\t\t</div>*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tdrawing: state.drawing\n});\n\nexport default connect(mapStateToProps)(SidePreview);\n"]},"metadata":{},"sourceType":"module"}