{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rotateObject = () => {\n      let rotation = this.state.rotation;\n      let newRotation = rotation + 90;\n      this.setState({\n        rotation: newRotation\n      });\n    };\n\n    this.deleteObject = id => {\n      this.props.deleteComponent(id);\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log(\"grad started\"); //this.selectElement(ev, this.props.pieceId);\n\n      this.props.onDragStart(ev, id);\n    };\n\n    this.onDragStop = (ev, id) => {\n      console.log(\"drag stopped\");\n      console.log(id);\n      let location = this.getItemLocation();\n      this.props.saveGrid(id, location);\n      /*if (this.state.active === true) {\n      \tthis.setState({ active: false });\n      }*/\n    };\n\n    this.getItemLocation = () => {\n      let gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style.transform;\n      return gridLoc;\n    };\n\n    this.handleStop = (ev, width, height) => {\n      //let position = this.refs[\"gridBox\"].getBoundingClientRect();\n      this.setState({\n        locationX: ev.clientX - this.props.gridX - this.props.width,\n        locationY: ev.clientY - this.props.gridY - this.props.height\n      }); //this.props.saveLocation(left, top, right, bottom);\n    };\n\n    this.selectElement = (ev, id) => {\n      //this.props.saveActiveItem(id);\n      //if (this.props.currentlyActive == id) {\n      if (this.state.active === true) {\n        this.props.saveActiveItem(\"\");\n        this.setState({\n          active: false\n        });\n      } else {\n        this.props.saveActiveItem(id);\n        this.setState({\n          active: true\n        });\n        this.props.saveActiveItem(id); //}\n      }\n    };\n\n    this.removeActive = () => {\n      if (this.props.currentlyActive !== this.props.pieceId) {\n        this.setState({\n          active: false\n        });\n      }\n    };\n\n    this.state = {\n      itemLocations: [],\n      rotation: 0,\n      scale: 1,\n      active: false,\n      xPos: \"\",\n      yPos: \"\",\n      location: \"\"\n    };\n    this.itemRef = React.createRef();\n  }\n\n  componentDidMount(e) {\n    this.setState({\n      scale: this.props.scale,\n      location: this.props.location\n    });\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.scale !== this.props.scale) {\n      this.setState({\n        scale: nextProps.scale\n      });\n    }\n\n    if (nextProps.currentlyActive !== this.props.pieceId && this.state.active === true) {\n      this.setState({\n        active: false\n      });\n    }\n    /*if (this.props.currentlyActive !== this.props.pieceId) {\n    \tconsole.log(\"checking\");\n    \tconsole.log(this.state.active);\n    \tthis.setState({\n    \t\tactive: false\n    \t});\n    }*/\n\n  }\n\n  render() {\n    let itemWidth = this.props.width / this.props.grid.width * this.props.gridWidth;\n    let itemHeight = this.props.height / this.props.grid.height * this.props.gridHeight;\n    let containerSize = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      trasform: this.props.location\n    };\n\n    if (this.state.rotation === 90 || this.state.rotation === 270) {\n      containerSize = {\n        width: itemHeight + \"px\",\n        height: itemWidth + \"px\"\n      };\n    }\n\n    const size = {\n      width: itemWidth + \"px\",\n      height: itemHeight + \"px\",\n      transform: \"translate(-50%,-50%) rotate(\".concat(this.state.rotation, \"deg)\")\n    };\n    return React.createElement(Draggable, {\n      bounds: \"parent\",\n      defaultPosition: {\n        x: this.props.xLocation - itemWidth,\n        y: this.props.yLocation - itemHeight\n      },\n      grid: [1, 1],\n      scale: 1,\n      onStart: ev => this.onDragStart(ev, this.props.pieceId),\n      onStop: ev => this.onDragStop(ev, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"gridItem\",\n      className: \"grid-item \".concat(this.state.active === true ? \"active\" : \"\"),\n      style: containerSize,\n      onClick: ev => this.selectElement(ev, this.props.pieceId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"object-img\",\n      style: size,\n      alt: \"\",\n      draggable: true,\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), this.state.active ? React.createElement(\"div\", {\n      className: \"object-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(DeleteComponent, {\n      deleteComponent: () => {\n        this.deleteObject(this.props.pieceId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(RotateObject, {\n      rotateComponent: this.rotateObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  grid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/gridObjectItem.js"],"names":["React","ReactDOM","Draggable","DeleteComponent","RotateObject","connect","GridObjectItem","Component","constructor","props","rotateObject","rotation","state","newRotation","setState","deleteObject","id","deleteComponent","onDragStart","ev","console","log","onDragStop","location","getItemLocation","saveGrid","gridLoc","findDOMNode","refs","style","transform","handleStop","width","height","locationX","clientX","gridX","locationY","clientY","gridY","selectElement","active","saveActiveItem","removeActive","currentlyActive","pieceId","itemLocations","scale","xPos","yPos","itemRef","createRef","componentDidMount","e","componentWillUpdate","nextProps","render","itemWidth","grid","gridWidth","itemHeight","gridHeight","containerSize","trasform","size","x","xLocation","y","yLocation","img","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Draggable from \"react-draggable\";\nimport DeleteComponent from \"./DeleteComponent.js\";\nimport RotateObject from \"./RotateObject.js\";\nimport { connect } from \"react-redux\";\n\nclass GridObjectItem extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titemLocations: [],\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tactive: false,\n\t\t\txPos: \"\",\n\t\t\tyPos: \"\",\n\t\t\tlocation: \"\"\n\t\t};\n\t\tthis.itemRef = React.createRef();\n\t}\n\n\tcomponentDidMount(e) {\n\t\tthis.setState({\n\t\t\tscale: this.props.scale,\n\t\t\tlocation: this.props.location\n\t\t});\n\t}\n\tcomponentWillUpdate(nextProps) {\n\t\tif (nextProps.scale !== this.props.scale) {\n\t\t\tthis.setState({ scale: nextProps.scale });\n\t\t}\n\t\tif (\n\t\t\tnextProps.currentlyActive !== this.props.pieceId &&\n\t\t\tthis.state.active === true\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t\t/*if (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tconsole.log(\"checking\");\n\t\t\tconsole.log(this.state.active);\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}*/\n\t}\n\n\trotateObject = () => {\n\t\tlet rotation = this.state.rotation;\n\t\tlet newRotation = rotation + 90;\n\t\tthis.setState({\n\t\t\trotation: newRotation\n\t\t});\n\t};\n\n\tdeleteObject = id => {\n\t\tthis.props.deleteComponent(id);\n\t};\n\n\tonDragStart = (ev, id) => {\n\t\tconsole.log(\"grad started\");\n\t\t//this.selectElement(ev, this.props.pieceId);\n\t\tthis.props.onDragStart(ev, id);\n\t};\n\n\tonDragStop = (ev, id) => {\n\t\tconsole.log(\"drag stopped\");\n\t\tconsole.log(id);\n\t\tlet location = this.getItemLocation();\n\t\tthis.props.saveGrid(id, location);\n\t\t/*if (this.state.active === true) {\n\t\t\tthis.setState({ active: false });\n\t\t}*/\n\t};\n\n\tgetItemLocation = () => {\n\t\tlet gridLoc = ReactDOM.findDOMNode(this.refs[\"gridItem\"]).style\n\t\t\t.transform;\n\n\t\treturn gridLoc;\n\t};\n\n\thandleStop = (ev, width, height) => {\n\t\t//let position = this.refs[\"gridBox\"].getBoundingClientRect();\n\t\tthis.setState({\n\t\t\tlocationX: ev.clientX - this.props.gridX - this.props.width,\n\t\t\tlocationY: ev.clientY - this.props.gridY - this.props.height\n\t\t});\n\t\t//this.props.saveLocation(left, top, right, bottom);\n\t};\n\n\tselectElement = (ev, id) => {\n\t\t//this.props.saveActiveItem(id);\n\t\t//if (this.props.currentlyActive == id) {\n\t\tif (this.state.active === true) {\n\t\t\tthis.props.saveActiveItem(\"\");\n\t\t\tthis.setState({ active: false });\n\t\t} else {\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\tthis.setState({ active: true });\n\t\t\tthis.props.saveActiveItem(id);\n\n\t\t\t//}\n\t\t}\n\t};\n\n\tremoveActive = () => {\n\t\tif (this.props.currentlyActive !== this.props.pieceId) {\n\t\t\tthis.setState({\n\t\t\t\tactive: false\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tlet itemWidth =\n\t\t\t(this.props.width / this.props.grid.width) * this.props.gridWidth;\n\t\tlet itemHeight =\n\t\t\t(this.props.height / this.props.grid.height) *\n\t\t\tthis.props.gridHeight;\n\n\t\tlet containerSize = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttrasform: this.props.location\n\t\t};\n\t\tif (this.state.rotation === 90 || this.state.rotation === 270) {\n\t\t\tcontainerSize = {\n\t\t\t\twidth: itemHeight + \"px\",\n\t\t\t\theight: itemWidth + \"px\"\n\t\t\t};\n\t\t}\n\t\tconst size = {\n\t\t\twidth: itemWidth + \"px\",\n\t\t\theight: itemHeight + \"px\",\n\t\t\ttransform: `translate(-50%,-50%) rotate(${this.state.rotation}deg)`\n\t\t};\n\n\t\treturn (\n\t\t\t<Draggable\n\t\t\t\tbounds=\"parent\"\n\t\t\t\tdefaultPosition={{\n\t\t\t\t\tx: this.props.xLocation - itemWidth,\n\t\t\t\t\ty: this.props.yLocation - itemHeight\n\t\t\t\t}}\n\t\t\t\tgrid={[1, 1]}\n\t\t\t\tscale={1}\n\t\t\t\tonStart={ev => this.onDragStart(ev, this.props.pieceId)}\n\t\t\t\tonStop={ev => this.onDragStop(ev, this.props.pieceId)}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={\"gridItem\"}\n\t\t\t\t\tclassName={`grid-item ${\n\t\t\t\t\t\tthis.state.active === true ? \"active\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tstyle={containerSize}\n\t\t\t\t\tonClick={ev => this.selectElement(ev, this.props.pieceId)}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"object-img\"\n\t\t\t\t\t\tstyle={size}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tdraggable\n\t\t\t\t\t\tsrc={this.props.img}\n\t\t\t\t\t/>\n\t\t\t\t\t{this.state.active ? (\n\t\t\t\t\t\t<div className=\"object-actions\">\n\t\t\t\t\t\t\t<DeleteComponent\n\t\t\t\t\t\t\t\tdeleteComponent={() => {\n\t\t\t\t\t\t\t\t\tthis.deleteObject(this.props.pieceId);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<RotateObject rotateComponent={this.rotateObject} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Draggable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth,\n\tgrid: state.grid\n});\n\nexport default connect(mapStateToProps)(GridObjectItem);\n"]},"metadata":{},"sourceType":"module"}