{"ast":null,"code":"var _jsxFileName = \"/home/mdehaan51/highrev-projects/park-builder/client/src/components/NavBar.js\";\nimport React from \"react\";\nimport { NavButton, NavInput } from \"./constants.js\";\nimport { connect } from \"react-redux\";\nimport { setGridSize, toggleModal } from \"../actions/gridActions\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const dimensions = {\n        height: this.state.height,\n        width: this.state.width\n      };\n      this.props.setGridSize(dimensions);\n    };\n\n    this.openRequestModal = e => {\n      this.props.captureImage();\n      e.preventDefault();\n      const modal = {\n        active: true,\n        type: \"request\",\n        title: \"Lets Get This Park Started!\"\n      };\n      this.props.toggleModal(modal);\n    };\n\n    this.openHelpModal = e => {\n      e.preventDefault();\n      const modal = {\n        active: true,\n        type: \"help\",\n        title: \"Report Bug\"\n      };\n      this.props.toggleModal(modal);\n    };\n\n    this.state = {\n      height: \"\",\n      width: \"\"\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateInput(id, event) {\n    this.setState({\n      [id]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"company-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"images/Shock-logo.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"size-input input-field form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(NavInput, {\n      placeholder: \"Width (Ft)\",\n      onChange: e => this.updateInput(\"width\", e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(NavInput, {\n      placeholder: \"Length (Ft)\",\n      onChange: e => this.updateInput(\"height\", e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(NavButton, {\n      name: \"Submit\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"submission-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(NavButton, {\n      name: \"Request Quote\",\n      onClick: this.openRequestModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(NavButton, {\n      name: \"Bug Report\",\n      onClick: this.openHelpModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  width: state.width,\n  height: state.height\n});\n\nexport default connect(mapStateToProps, {\n  setGridSize,\n  toggleModal\n})(Navbar);","map":{"version":3,"sources":["/home/mdehaan51/highrev-projects/park-builder/client/src/components/NavBar.js"],"names":["React","NavButton","NavInput","connect","setGridSize","toggleModal","Navbar","Component","constructor","props","onSubmit","e","preventDefault","dimensions","height","state","width","openRequestModal","captureImage","modal","active","type","title","openHelpModal","updateInput","bind","id","event","setState","target","value","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavButton, NavInput } from \"./constants.js\";\nimport { connect } from \"react-redux\";\nimport { setGridSize, toggleModal } from \"../actions/gridActions\";\n\nclass Navbar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\theight: \"\",\n\t\t\twidth: \"\"\n\t\t};\n\t\tthis.updateInput = this.updateInput.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tupdateInput(id, event) {\n\t\tthis.setState({ [id]: event.target.value });\n\t}\n\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tconst dimensions = {\n\t\t\theight: this.state.height,\n\t\t\twidth: this.state.width\n\t\t};\n\t\tthis.props.setGridSize(dimensions);\n\t};\n\n\topenRequestModal = e => {\n\t\tthis.props.captureImage();\n\t\te.preventDefault();\n\t\tconst modal = {\n\t\t\tactive: true,\n\t\t\ttype: \"request\",\n\t\t\ttitle: \"Lets Get This Park Started!\"\n\t\t};\n\t\tthis.props.toggleModal(modal);\n\t};\n\n\topenHelpModal = e => {\n\t\te.preventDefault();\n\t\tconst modal = {\n\t\t\tactive: true,\n\t\t\ttype: \"help\",\n\t\t\ttitle: \"Report Bug\"\n\t\t};\n\t\tthis.props.toggleModal(modal);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"navbar\">\n\t\t\t\t<div className=\"company-icon\">\n\t\t\t\t\t<img alt=\"\" src=\"images/Shock-logo.png\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"size-input input-field form-row\">\n\t\t\t\t\t<NavInput\n\t\t\t\t\t\tplaceholder={\"Width (Ft)\"}\n\t\t\t\t\t\tonChange={e => this.updateInput(\"width\", e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<NavInput\n\t\t\t\t\t\tplaceholder={\"Length (Ft)\"}\n\t\t\t\t\t\tonChange={e => this.updateInput(\"height\", e)}\n\t\t\t\t\t/>\n\t\t\t\t\t<NavButton name={\"Submit\"} onClick={this.onSubmit} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"submission-buttons\">\n\t\t\t\t\t<NavButton\n\t\t\t\t\t\tname={\"Request Quote\"}\n\t\t\t\t\t\tonClick={this.openRequestModal}\n\t\t\t\t\t/>\n\t\t\t\t\t<NavButton\n\t\t\t\t\t\tname={\"Bug Report\"}\n\t\t\t\t\t\tonClick={this.openHelpModal}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\twidth: state.width,\n\theight: state.height\n});\n\nexport default connect(\n\tmapStateToProps,\n\t{ setGridSize, toggleModal }\n)(Navbar);\n"]},"metadata":{},"sourceType":"module"}